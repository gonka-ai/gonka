{"id":"github.com/productscience/inference","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain github.com/productscience/inference REST API","title":"HTTP API Console","contact":{"name":"github.com/productscience/inference"},"version":"version not set"},"paths":{"/inference.inference.Msg/FinishInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_FinishInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgFinishInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgFinishInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/StartInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_StartInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgStartInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgStartInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitNewParticipant":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitNewParticipant","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewParticipant"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/Validation":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_Validation","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgValidation"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgValidationResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferenceAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference/{index}":{"get":{"tags":["Query"],"summary":"Queries a list of Inference items.","operationId":"GithubComproductscienceinferenceQuery_Inference","parameters":[{"type":"string","name":"index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participant":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_ParticipantAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participant/{index}":{"get":{"tags":["Query"],"summary":"Queries a list of Participant items.","operationId":"GithubComproductscienceinferenceQuery_Participant","parameters":[{"type":"string","name":"index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}},"inference.inference.Inference":{"type":"object","properties":{"completionTokenCount":{"type":"string","format":"uint64"},"endBlockHeight":{"type":"string","format":"int64"},"endBlockTimestamp":{"type":"string","format":"int64"},"executedBy":{"type":"string"},"index":{"type":"string"},"inferenceId":{"type":"string"},"model":{"type":"string"},"promptHash":{"type":"string"},"promptPayload":{"type":"string"},"promptTokenCount":{"type":"string","format":"uint64"},"receivedBy":{"type":"string"},"responseHash":{"type":"string"},"responsePayload":{"type":"string"},"startBlockHeight":{"type":"string","format":"int64"},"startBlockTimestamp":{"type":"string","format":"int64"},"status":{"type":"string"}}},"inference.inference.MsgFinishInference":{"type":"object","properties":{"completionTokenCount":{"type":"string","format":"uint64"},"creator":{"type":"string"},"executedBy":{"type":"string"},"inferenceId":{"type":"string"},"promptTokenCount":{"type":"string","format":"uint64"},"responseHash":{"type":"string"},"responsePayload":{"type":"string"}}},"inference.inference.MsgFinishInferenceResponse":{"type":"object","properties":{"inferenceIndex":{"type":"string"}}},"inference.inference.MsgStartInference":{"type":"object","properties":{"creator":{"type":"string"},"inferenceId":{"type":"string"},"model":{"type":"string"},"promptHash":{"type":"string"},"promptPayload":{"type":"string"},"receivedBy":{"type":"string"}}},"inference.inference.MsgStartInferenceResponse":{"type":"object","properties":{"inferenceIndex":{"type":"string"}}},"inference.inference.MsgSubmitNewParticipant":{"type":"object","properties":{"creator":{"type":"string"},"models":{"type":"array","items":{"type":"string"}},"url":{"type":"string"}}},"inference.inference.MsgSubmitNewParticipantResponse":{"type":"object","properties":{"participantIndex":{"type":"string"},"status":{"type":"string"}}},"inference.inference.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/inference.inference.Params"}}},"inference.inference.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.inference.MsgValidation":{"type":"object","properties":{"creator":{"type":"string"},"id":{"type":"string"},"inferenceId":{"type":"string"},"responseHash":{"type":"string"},"responsePayload":{"type":"string"},"value":{"type":"number","format":"double"}}},"inference.inference.MsgValidationResponse":{"type":"object"},"inference.inference.Params":{"description":"Params defines the parameters for the module.","type":"object"},"inference.inference.Participant":{"type":"object","properties":{"address":{"type":"string"},"completionTokenCount":{"type":"object","additionalProperties":{"type":"string","format":"uint64"}},"index":{"type":"string"},"inferenceUrl":{"type":"string"},"joinHeight":{"type":"string","format":"int64"},"joinTime":{"type":"string","format":"int64"},"lastInferenceTime":{"type":"string","format":"int64"},"models":{"type":"array","items":{"type":"string"}},"promptTokenCount":{"type":"object","additionalProperties":{"type":"string","format":"uint64"}},"reputation":{"type":"integer","format":"int32"},"status":{"$ref":"#/definitions/inference.inference.ParticipantStatus"},"weight":{"type":"integer","format":"int32"}}},"inference.inference.ParticipantStatus":{"type":"string","default":"UNSPECIFIED","enum":["UNSPECIFIED","ACTIVE","INACTIVE"]},"inference.inference.QueryAllInferenceResponse":{"type":"object","properties":{"inference":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Inference"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllParticipantResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"participant":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Participant"}}}},"inference.inference.QueryGetInferenceResponse":{"type":"object","properties":{"inference":{"$ref":"#/definitions/inference.inference.Inference"}}},"inference.inference.QueryGetParticipantResponse":{"type":"object","properties":{"participant":{"$ref":"#/definitions/inference.inference.Participant"}}},"inference.inference.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.inference.Params"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}