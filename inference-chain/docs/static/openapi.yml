{"id":"github.com/productscience/inference","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain github.com/productscience/inference REST API","title":"HTTP API Console","contact":{"name":"github.com/productscience/inference"},"version":"version not set"},"paths":{"/inference.inference.Msg/AssignTrainingTask":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_AssignTrainingTask","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgAssignTrainingTask"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgAssignTrainingTaskResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/ClaimRewards":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_ClaimRewards","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgClaimRewards"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgClaimRewardsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/ClaimTrainingTaskForAssignment":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_ClaimTrainingTaskForAssignment","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgClaimTrainingTaskForAssignment"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgClaimTrainingTaskForAssignmentResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/CreatePartialUpgrade":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_CreatePartialUpgrade","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgCreatePartialUpgrade"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgCreatePartialUpgradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/CreateTrainingTask":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_CreateTrainingTask","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgCreateTrainingTask"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgCreateTrainingTaskResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/FinishInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_FinishInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgFinishInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgFinishInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/InvalidateInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_InvalidateInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgInvalidateInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgInvalidateInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/RegisterModel":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_RegisterModel","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgRegisterModel"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgRegisterModelResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/RevalidateInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_RevalidateInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgRevalidateInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgRevalidateInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/StartInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_StartInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgStartInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgStartInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitHardwareDiff":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitHardwareDiff","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitHardwareDiff"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitHardwareDiffResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitNewParticipant":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitNewParticipant","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewParticipant"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitNewUnfundedParticipant":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitNewUnfundedParticipant","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewUnfundedParticipant"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewUnfundedParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitPocBatch":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitPocBatch","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitPocBatch"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitPocBatchResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitPocValidation":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitPocValidation","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitPocValidation"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitPocValidationResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitSeed":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitSeed","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitSeed"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitSeedResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitUnitOfComputePriceProposal":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitUnitOfComputePriceProposal","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitUnitOfComputePriceProposal"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitUnitOfComputePriceProposalResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/Validation":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_Validation","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgValidation"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgValidationResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/all_stats_by_time":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferencesAndTokensStatsByTimePeriod","parameters":[{"type":"string","format":"int64","name":"time_from","in":"query"},{"type":"string","format":"int64","name":"time_to","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferencesAndTokensStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/current_epoch_group_data":{"get":{"tags":["Query"],"summary":"Queries a list of CurrentEpochGroupData items.","operationId":"GithubComproductscienceinferenceQuery_CurrentEpochGroupData","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryCurrentEpochGroupDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/developer/stats_by_epochs_backwards":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferencesAndTokensStatsByEpochsBackwards","parameters":[{"type":"integer","format":"int32","name":"epoch_n","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferencesAndTokensStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/developer/{developer}/stats_by_epochs_backwards":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_StatsByDeveloperAndEpochsBackwards","parameters":[{"type":"string","name":"developer","in":"path","required":true},{"type":"integer","format":"int32","name":"epochs_n","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferencesAndTokensStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/developer/{developer}/stats_by_time":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_StatsByTimePeriodByDeveloper","parameters":[{"type":"string","name":"developer","in":"path","required":true},{"type":"string","format":"int64","name":"time_from","in":"query"},{"type":"string","format":"int64","name":"time_to","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryStatsByTimePeriodByDeveloperResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_group_data":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_EpochGroupDataAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllEpochGroupDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_group_data/{poc_start_block_height}":{"get":{"tags":["Query"],"summary":"Queries a list of EpochGroupData items.","operationId":"GithubComproductscienceinferenceQuery_EpochGroupData","parameters":[{"type":"string","format":"uint64","name":"poc_start_block_height","in":"path","required":true},{"type":"string","name":"model_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetEpochGroupDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_group_validations":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_EpochGroupValidationsAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllEpochGroupValidationsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_group_validations/{participant}/{poc_start_block_height}":{"get":{"tags":["Query"],"summary":"Queries a list of EpochGroupValidations items.","operationId":"GithubComproductscienceinferenceQuery_EpochGroupValidations","parameters":[{"type":"string","name":"participant","in":"path","required":true},{"type":"string","format":"uint64","name":"poc_start_block_height","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetEpochGroupValidationsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_performance_summary":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_EpochPerformanceSummaryAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllEpochPerformanceSummaryResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_performance_summary/{epochStartHeight}/{participantId}":{"get":{"tags":["Query"],"summary":"Queries a list of EpochPerformanceSummary items.","operationId":"GithubComproductscienceinferenceQuery_EpochPerformanceSummary","parameters":[{"type":"string","format":"uint64","name":"epochStartHeight","in":"path","required":true},{"type":"string","name":"participantId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetEpochPerformanceSummaryResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_all_participant_current_stats":{"get":{"tags":["Query"],"summary":"Queries a list of GetAllParticipantCurrentStats items.","operationId":"GithubComproductscienceinferenceQuery_GetAllParticipantCurrentStats","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetAllParticipantCurrentStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_current_epoch":{"get":{"tags":["Query"],"summary":"Queries a list of GetCurrentEpoch items.","operationId":"GithubComproductscienceinferenceQuery_GetCurrentEpoch","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetCurrentEpochResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_inference_validation_parameters/{ids}/{requester}":{"get":{"tags":["Query"],"summary":"Queries a list of GetInferenceValidationParameters items.","operationId":"GithubComproductscienceinferenceQuery_GetInferenceValidationParameters","parameters":[{"minItems":1,"type":"array","items":{"type":"string"},"collectionFormat":"csv","name":"ids","in":"path","required":true},{"type":"string","name":"requester","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceValidationParametersResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_minimum_validation_average":{"get":{"tags":["Query"],"summary":"Queries a list of GetMinimumValidationAverage items.","operationId":"GithubComproductscienceinferenceQuery_GetMinimumValidationAverage","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetMinimumValidationAverageResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_participant_current_stats/{participantId}":{"get":{"tags":["Query"],"summary":"Queries a list of GetParticipantCurrentStats items.","operationId":"GithubComproductscienceinferenceQuery_GetParticipantCurrentStats","parameters":[{"type":"string","name":"participantId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetParticipantCurrentStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_random_executor":{"get":{"tags":["Query"],"summary":"Queries a list of GetRandomExecutor items.","operationId":"GithubComproductscienceinferenceQuery_GetRandomExecutor","parameters":[{"type":"string","name":"model","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetRandomExecutorResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_unit_of_compute_price_proposal":{"get":{"tags":["Query"],"summary":"Queries a list of GetUnitOfComputePriceProposal items.","operationId":"GithubComproductscienceinferenceQuery_GetUnitOfComputePriceProposal","parameters":[{"type":"string","name":"participant","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetUnitOfComputePriceProposalResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/hardware_nodes/{participant}":{"get":{"tags":["Query"],"summary":"Queries a list of HardwareNodes items.","operationId":"GithubComproductscienceinferenceQuery_HardwareNodes","parameters":[{"type":"string","name":"participant","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryHardwareNodesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/hardware_nodes_all":{"get":{"tags":["Query"],"summary":"Queries a list of HardwareNodesAll items.","operationId":"GithubComproductscienceinferenceQuery_HardwareNodesAll","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryHardwareNodesAllResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/in_progress_training_tasks":{"get":{"tags":["Query"],"summary":"Queries a list of InProgressTrainingTasks items.","operationId":"GithubComproductscienceinferenceQuery_InProgressTrainingTasks","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInProgressTrainingTasksResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferenceAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference/{index}":{"get":{"tags":["Query"],"summary":"Queries a list of Inference items.","operationId":"GithubComproductscienceinferenceQuery_Inference","parameters":[{"type":"string","name":"index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_participant/{address}":{"get":{"tags":["Query"],"summary":"Queries a list of InferenceParticipant items.","operationId":"GithubComproductscienceinferenceQuery_InferenceParticipant","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferenceParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_timeout":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferenceTimeoutAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllInferenceTimeoutResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_timeout/{expirationHeight}/{inferenceId}":{"get":{"tags":["Query"],"summary":"Queries a list of InferenceTimeout items.","operationId":"GithubComproductscienceinferenceQuery_InferenceTimeout","parameters":[{"type":"string","format":"uint64","name":"expirationHeight","in":"path","required":true},{"type":"string","name":"inferenceId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceTimeoutResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_validation_details":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferenceValidationDetailsAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllInferenceValidationDetailsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_validation_details/{epochId}/{inferenceId}":{"get":{"tags":["Query"],"summary":"Queries a list of InferenceValidationDetails items.","operationId":"GithubComproductscienceinferenceQuery_InferenceValidationDetails","parameters":[{"type":"string","format":"uint64","name":"epochId","in":"path","required":true},{"type":"string","name":"inferenceId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceValidationDetailsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/models_all":{"get":{"tags":["Query"],"summary":"Queries a list of ModelsAll items.","operationId":"GithubComproductscienceinferenceQuery_ModelsAll","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryModelsAllResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/partial_upgrade":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_PartialUpgradeAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllPartialUpgradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/partial_upgrade/{height}":{"get":{"tags":["Query"],"summary":"Queries a list of PartialUpgrade items.","operationId":"GithubComproductscienceinferenceQuery_PartialUpgrade","parameters":[{"type":"string","format":"uint64","name":"height","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetPartialUpgradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participant":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_ParticipantAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participant/{index}":{"get":{"tags":["Query"],"summary":"Queries a list of Participant items.","operationId":"GithubComproductscienceinferenceQuery_Participant","parameters":[{"type":"string","name":"index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participants_stats":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_GetParticipantsFullStats","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryParticipantsFullStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/poc_batches_for_stage/{block_height}":{"get":{"tags":["Query"],"summary":"Queries a list of PocBatchesForStage items.","operationId":"GithubComproductscienceinferenceQuery_PocBatchesForStage","parameters":[{"type":"string","format":"int64","name":"block_height","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryPocBatchesForStageResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/previous_epoch_group_data":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_PreviousEpochGroupData","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryPreviousEpochGroupDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/queued_training_tasks":{"get":{"tags":["Query"],"summary":"Queries a list of QueuedTrainingTasks items.","operationId":"GithubComproductscienceinferenceQuery_QueuedTrainingTasks","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryQueuedTrainingTasksResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/settle_amount":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_SettleAmountAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllSettleAmountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/settle_amount/{participant}":{"get":{"tags":["Query"],"summary":"Queries a list of SettleAmount items.","operationId":"GithubComproductscienceinferenceQuery_SettleAmount","parameters":[{"type":"string","name":"participant","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetSettleAmountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/tokenomics_data":{"get":{"tags":["Query"],"summary":"Queries a TokenomicsData by index.","operationId":"GithubComproductscienceinferenceQuery_TokenomicsData","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetTokenomicsDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/top_miner":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_TopMinerAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllTopMinerResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/top_miner/{address}":{"get":{"tags":["Query"],"summary":"Queries a list of TopMiner items.","operationId":"GithubComproductscienceinferenceQuery_TopMiner","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetTopMinerResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/training_task":{"get":{"tags":["Query"],"summary":"Queries a list of TrainingTask items.","operationId":"GithubComproductscienceinferenceQuery_TrainingTask","parameters":[{"type":"string","format":"uint64","name":"id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryTrainingTaskResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/training_task_all":{"get":{"tags":["Query"],"summary":"Queries a list of TrainingTaskAll items.","operationId":"GithubComproductscienceinferenceQuery_TrainingTaskAll","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryTrainingTaskAllResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}},"inference.inference.CurrentEpochStats":{"type":"object","properties":{"burned_coins":{"type":"string","format":"uint64"},"earned_coins":{"type":"string","format":"uint64"},"inference_count":{"type":"string","format":"uint64"},"invalidated_inferences":{"type":"string","format":"uint64"},"missed_requests":{"type":"string","format":"uint64"},"rewarded_coins":{"type":"string","format":"uint64"},"validated_inferences":{"type":"string","format":"uint64"}}},"inference.inference.Decimal":{"type":"object","properties":{"exponent":{"type":"integer","format":"int32"},"value":{"type":"string","format":"int64"}}},"inference.inference.DeveloperStatsByTime":{"type":"object","properties":{"epoch_id":{"type":"string","format":"uint64"},"inference":{"$ref":"#/definitions/inference.inference.InferenceStats"},"timestamp":{"type":"string","format":"int64"}}},"inference.inference.EpochGroupData":{"description":"These top two values are uint64s because they are IDs, not numerical values.","type":"object","properties":{"effective_block_height":{"type":"string","format":"int64"},"epoch_group_id":{"type":"string","format":"uint64"},"epoch_policy":{"type":"string"},"last_block_height":{"type":"string","format":"int64"},"member_seed_signatures":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.SeedSignature"}},"model_id":{"type":"string","title":"If model_id is empty, this is the parent EpochGroup\nIf model_id is set, this is a sub EpochGroup for that specific model"},"number_of_requests":{"type":"string","format":"int64"},"poc_start_block_height":{"type":"string","format":"uint64"},"previous_epoch_requests":{"type":"string","format":"int64"},"sub_group_models":{"type":"array","title":"List of model IDs for sub EpochGroups, only used in parent EpochGroup","items":{"type":"string"}},"total_weight":{"type":"string","format":"int64"},"unit_of_compute_price":{"type":"string","format":"int64"},"validation_params":{"$ref":"#/definitions/inference.inference.ValidationParams"},"validation_weights":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ValidationWeight"}}}},"inference.inference.EpochGroupValidations":{"type":"object","properties":{"participant":{"type":"string"},"poc_start_block_height":{"type":"string","format":"uint64"},"validated_inferences":{"type":"array","items":{"type":"string"}}}},"inference.inference.EpochParams":{"type":"object","properties":{"default_unit_of_compute_price":{"type":"string","format":"int64"},"epoch_length":{"type":"string","format":"int64"},"epoch_multiplier":{"type":"string","format":"int64"},"epoch_shift":{"type":"string","format":"int64"},"poc_exchange_duration":{"type":"string","format":"int64"},"poc_stage_duration":{"type":"string","format":"int64"},"poc_validation_delay":{"type":"string","format":"int64"},"poc_validation_duration":{"type":"string","format":"int64"}}},"inference.inference.EpochPerformanceSummary":{"type":"object","properties":{"burned_coins":{"type":"string","format":"uint64"},"claimed":{"type":"boolean"},"earned_coins":{"type":"string","format":"uint64"},"epoch_start_height":{"type":"string","format":"uint64"},"inference_count":{"type":"string","format":"uint64"},"invalidated_inferences":{"type":"string","format":"uint64"},"missed_requests":{"type":"string","format":"uint64"},"participant_id":{"type":"string"},"rewarded_coins":{"type":"string","format":"uint64"},"validated_inferences":{"type":"string","format":"uint64"}}},"inference.inference.Hardware":{"type":"object","properties":{"count":{"type":"integer","format":"int64"},"type":{"type":"string"}}},"inference.inference.HardwareNode":{"type":"object","properties":{"hardware":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Hardware"}},"host":{"type":"string"},"local_id":{"type":"string"},"models":{"type":"array","items":{"type":"string"}},"port":{"type":"string"},"status":{"$ref":"#/definitions/inference.inference.HardwareNodeStatus"}}},"inference.inference.HardwareNodeStatus":{"type":"string","default":"UNKNOWN","enum":["UNKNOWN","INFERENCE","POC","TRAINING","STOPPED","FAILED"]},"inference.inference.HardwareNodes":{"type":"object","title":"IF YOU CHANGE ANY OF THESE STRUCTURES BE SURE TO CHANGE InferenceNode struct in decentralized-api!!!","properties":{"hardware_nodes":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.HardwareNode"}},"participant":{"type":"string"}}},"inference.inference.Inference":{"type":"object","properties":{"actual_cost":{"type":"string","format":"int64"},"assigned_to":{"type":"string"},"completion_token_count":{"type":"string","format":"uint64"},"end_block_height":{"type":"string","format":"int64"},"end_block_timestamp":{"type":"string","format":"int64"},"epoch_group_id":{"type":"string","format":"uint64"},"escrow_amount":{"type":"string","format":"int64"},"executed_by":{"type":"string"},"index":{"type":"string"},"inference_id":{"type":"string"},"max_tokens":{"type":"string","format":"uint64"},"model":{"type":"string"},"node_version":{"type":"string"},"prompt_hash":{"type":"string"},"prompt_payload":{"type":"string"},"prompt_token_count":{"type":"string","format":"uint64"},"proposal_details":{"$ref":"#/definitions/inference.inference.ProposalDetails"},"requested_by":{"type":"string"},"response_hash":{"type":"string"},"response_payload":{"type":"string"},"start_block_height":{"type":"string","format":"int64"},"start_block_timestamp":{"type":"string","format":"int64"},"status":{"$ref":"#/definitions/inference.inference.InferenceStatus"},"validated_by":{"type":"array","items":{"type":"string"}}}},"inference.inference.InferenceStats":{"type":"object","properties":{"ai_tokens_used":{"type":"string","format":"uint64"},"status":{"$ref":"#/definitions/inference.inference.InferenceStatus"}}},"inference.inference.InferenceStatus":{"type":"string","default":"STARTED","enum":["STARTED","FINISHED","VALIDATED","INVALIDATED","VOTING","EXPIRED"]},"inference.inference.InferenceTimeout":{"type":"object","properties":{"expiration_height":{"type":"string","format":"uint64"},"inference_id":{"type":"string"}}},"inference.inference.InferenceValidationDetails":{"type":"object","properties":{"epoch_id":{"type":"string","format":"uint64"},"executor_id":{"type":"string"},"executor_power":{"type":"string","format":"uint64"},"executor_reputation":{"type":"integer","format":"int32"},"inference_id":{"type":"string"},"model":{"type":"string"},"total_power":{"type":"string","format":"uint64"},"traffic_basis":{"type":"string","format":"uint64"}}},"inference.inference.Model":{"type":"object","properties":{"id":{"type":"string"},"proposed_by":{"type":"string"},"units_of_compute_per_token":{"type":"string","format":"uint64"}}},"inference.inference.MsgAssignTrainingTask":{"type":"object","properties":{"assignees":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTaskAssignee"}},"creator":{"type":"string"},"task_id":{"type":"string","format":"uint64"}}},"inference.inference.MsgAssignTrainingTaskResponse":{"type":"object"},"inference.inference.MsgClaimRewards":{"type":"object","properties":{"creator":{"type":"string"},"poc_start_height":{"type":"string","format":"uint64"},"seed":{"type":"string","format":"int64"}}},"inference.inference.MsgClaimRewardsResponse":{"type":"object","properties":{"amount":{"type":"string","format":"uint64"},"result":{"type":"string"}}},"inference.inference.MsgClaimTrainingTaskForAssignment":{"type":"object","properties":{"creator":{"type":"string"},"task_id":{"type":"string","format":"uint64"}}},"inference.inference.MsgClaimTrainingTaskForAssignmentResponse":{"type":"object"},"inference.inference.MsgCreatePartialUpgrade":{"type":"object","properties":{"apiBinariesJson":{"type":"string"},"authority":{"type":"string"},"height":{"type":"string","format":"uint64"},"nodeVersion":{"type":"string"}}},"inference.inference.MsgCreatePartialUpgradeResponse":{"type":"object"},"inference.inference.MsgCreateTrainingTask":{"type":"object","properties":{"config":{"$ref":"#/definitions/inference.inference.TrainingConfig"},"creator":{"type":"string"},"hardware_resources":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingHardwareResources"}}}},"inference.inference.MsgCreateTrainingTaskResponse":{"type":"object","properties":{"task":{"$ref":"#/definitions/inference.inference.TrainingTask"}}},"inference.inference.MsgFinishInference":{"type":"object","properties":{"completion_token_count":{"type":"string","format":"uint64"},"creator":{"type":"string"},"executed_by":{"type":"string"},"inference_id":{"type":"string"},"prompt_token_count":{"type":"string","format":"uint64"},"response_hash":{"type":"string"},"response_payload":{"type":"string"}}},"inference.inference.MsgFinishInferenceResponse":{"type":"object","properties":{"inference_index":{"type":"string"}}},"inference.inference.MsgInvalidateInference":{"type":"object","properties":{"creator":{"type":"string"},"inference_id":{"type":"string"}}},"inference.inference.MsgInvalidateInferenceResponse":{"type":"object"},"inference.inference.MsgRegisterModel":{"type":"object","properties":{"authority":{"type":"string"},"id":{"type":"string"},"proposed_by":{"type":"string"},"units_of_compute_per_token":{"type":"string","format":"uint64"}}},"inference.inference.MsgRegisterModelResponse":{"type":"object"},"inference.inference.MsgRevalidateInference":{"type":"object","properties":{"creator":{"type":"string"},"inference_id":{"type":"string"}}},"inference.inference.MsgRevalidateInferenceResponse":{"type":"object"},"inference.inference.MsgStartInference":{"type":"object","properties":{"assigned_to":{"type":"string"},"creator":{"type":"string"},"inference_id":{"type":"string"},"model":{"type":"string"},"node_version":{"type":"string"},"prompt_hash":{"type":"string"},"prompt_payload":{"type":"string"},"requested_by":{"type":"string"}}},"inference.inference.MsgStartInferenceResponse":{"type":"object","properties":{"inference_index":{"type":"string"}}},"inference.inference.MsgSubmitHardwareDiff":{"type":"object","properties":{"creator":{"type":"string"},"newOrModified":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.HardwareNode"}},"removed":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.HardwareNode"}}}},"inference.inference.MsgSubmitHardwareDiffResponse":{"type":"object"},"inference.inference.MsgSubmitNewParticipant":{"type":"object","properties":{"creator":{"type":"string"},"url":{"type":"string"},"validator_key":{"type":"string"},"worker_key":{"type":"string"}}},"inference.inference.MsgSubmitNewParticipantResponse":{"type":"object","properties":{"participant_index":{"type":"string"},"status":{"type":"string"}}},"inference.inference.MsgSubmitNewUnfundedParticipant":{"type":"object","properties":{"address":{"type":"string"},"creator":{"type":"string"},"pub_key":{"type":"string"},"url":{"type":"string"},"validator_key":{"type":"string"},"worker_key":{"type":"string"}}},"inference.inference.MsgSubmitNewUnfundedParticipantResponse":{"type":"object"},"inference.inference.MsgSubmitPocBatch":{"type":"object","properties":{"batch_id":{"type":"string"},"creator":{"type":"string"},"dist":{"type":"array","items":{"type":"number","format":"double"}},"nonces":{"type":"array","items":{"type":"string","format":"int64"}},"poc_stage_start_block_height":{"type":"string","format":"int64"}}},"inference.inference.MsgSubmitPocBatchResponse":{"type":"object"},"inference.inference.MsgSubmitPocValidation":{"type":"object","properties":{"creator":{"type":"string"},"dist":{"type":"array","items":{"type":"number","format":"double"}},"fraud_detected":{"type":"boolean"},"fraud_threshold":{"type":"number","format":"double"},"n_invalid":{"type":"string","format":"int64"},"nonces":{"type":"array","items":{"type":"string","format":"int64"}},"participant_address":{"type":"string"},"poc_stage_start_block_height":{"type":"string","format":"int64"},"probability_honest":{"type":"number","format":"double"},"r_target":{"type":"number","format":"double"},"received_dist":{"type":"array","items":{"type":"number","format":"double"}}}},"inference.inference.MsgSubmitPocValidationResponse":{"type":"object"},"inference.inference.MsgSubmitSeed":{"type":"object","properties":{"block_height":{"type":"string","format":"int64"},"creator":{"type":"string"},"signature":{"type":"string"}}},"inference.inference.MsgSubmitSeedResponse":{"type":"object"},"inference.inference.MsgSubmitUnitOfComputePriceProposal":{"type":"object","properties":{"creator":{"type":"string"},"price":{"type":"string","format":"uint64"}}},"inference.inference.MsgSubmitUnitOfComputePriceProposalResponse":{"type":"object"},"inference.inference.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/inference.inference.Params"}}},"inference.inference.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.inference.MsgValidation":{"type":"object","properties":{"creator":{"type":"string"},"id":{"type":"string"},"inference_id":{"type":"string"},"response_hash":{"type":"string"},"response_payload":{"type":"string"},"revalidation":{"type":"boolean"},"value":{"type":"number","format":"double"}}},"inference.inference.MsgValidationResponse":{"type":"object"},"inference.inference.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"epoch_params":{"$ref":"#/definitions/inference.inference.EpochParams"},"poc_params":{"$ref":"#/definitions/inference.inference.PocParams"},"tokenomics_params":{"$ref":"#/definitions/inference.inference.TokenomicsParams"},"validation_params":{"$ref":"#/definitions/inference.inference.ValidationParams"}}},"inference.inference.PartialUpgrade":{"type":"object","properties":{"api_binaries_json":{"type":"string"},"height":{"type":"string","format":"uint64"},"name":{"type":"string"},"node_version":{"type":"string"}}},"inference.inference.Participant":{"type":"object","properties":{"address":{"type":"string"},"coin_balance":{"type":"string","format":"int64"},"consecutive_invalid_inferences":{"type":"string","format":"int64"},"current_epoch_stats":{"$ref":"#/definitions/inference.inference.CurrentEpochStats"},"epochs_completed":{"type":"integer","format":"int64"},"index":{"type":"string"},"inference_url":{"type":"string"},"join_height":{"type":"string","format":"int64"},"join_time":{"type":"string","format":"int64"},"last_inference_time":{"type":"string","format":"int64"},"status":{"$ref":"#/definitions/inference.inference.ParticipantStatus"},"validator_key":{"type":"string"},"weight":{"type":"integer","format":"int32"},"worker_public_key":{"type":"string"}}},"inference.inference.ParticipantCurrentStats":{"type":"object","properties":{"participant_id":{"type":"string"},"reputation":{"type":"integer","format":"int32"},"weight":{"type":"string","format":"uint64"}}},"inference.inference.ParticipantFullStats":{"type":"object","properties":{"account_address":{"type":"string"},"earned_coins_current_epoch":{"type":"string","format":"uint64"},"epochs_completed":{"type":"integer","format":"int64"},"reputation":{"type":"integer","format":"int32"},"rewarded_coins_current_epoch":{"type":"string","format":"uint64"},"rewarded_coins_latest_epoch":{"type":"string","format":"uint64"},"validator_operator_addres":{"type":"string"}}},"inference.inference.ParticipantStatus":{"type":"string","default":"UNSPECIFIED","enum":["UNSPECIFIED","ACTIVE","INACTIVE","INVALID","RAMPING"]},"inference.inference.PoCBatch":{"type":"object","properties":{"batch_id":{"type":"string"},"dist":{"type":"array","items":{"type":"number","format":"double"}},"nonces":{"type":"array","items":{"type":"string","format":"int64"}},"participant_address":{"type":"string"},"poc_stage_start_block_height":{"type":"string","format":"int64"},"received_at_block_height":{"type":"string","format":"int64"}}},"inference.inference.PoCBatchesWithParticipants":{"type":"object","properties":{"hex_pub_key":{"type":"string"},"participant":{"type":"string"},"poc_batch":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.PoCBatch"}},"pub_key":{"type":"string"}}},"inference.inference.PocParams":{"type":"object","properties":{"default_difficulty":{"type":"integer","format":"int32"}}},"inference.inference.ProposalDetails":{"type":"object","properties":{"invalidate_policy_id":{"type":"string","format":"uint64"},"policy_address":{"type":"string"},"re_validate_policy_id":{"type":"string","format":"uint64"}}},"inference.inference.QueryAllEpochGroupDataResponse":{"type":"object","properties":{"epoch_group_data":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.EpochGroupData"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllEpochGroupValidationsResponse":{"type":"object","properties":{"epoch_group_validations":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.EpochGroupValidations"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllEpochPerformanceSummaryResponse":{"type":"object","properties":{"epochPerformanceSummary":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.EpochPerformanceSummary"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllInferenceResponse":{"type":"object","properties":{"inference":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Inference"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllInferenceTimeoutResponse":{"type":"object","properties":{"inference_timeout":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.InferenceTimeout"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllInferenceValidationDetailsResponse":{"type":"object","properties":{"inferenceValidationDetails":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.InferenceValidationDetails"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllPartialUpgradeResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"partialUpgrade":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.PartialUpgrade"}}}},"inference.inference.QueryAllParticipantResponse":{"type":"object","properties":{"block_height":{"type":"string","format":"int64"},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"participant":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Participant"}}}},"inference.inference.QueryAllSettleAmountResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"settle_amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.SettleAmount"}}}},"inference.inference.QueryAllTopMinerResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"top_miner":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TopMiner"}}}},"inference.inference.QueryCurrentEpochGroupDataResponse":{"type":"object","properties":{"epoch_group_data":{"$ref":"#/definitions/inference.inference.EpochGroupData"}}},"inference.inference.QueryGetAllParticipantCurrentStatsResponse":{"type":"object","properties":{"block_height":{"type":"string","format":"int64"},"epoch_id":{"type":"string","format":"int64"},"participant_current_stats":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ParticipantCurrentStats"}}}},"inference.inference.QueryGetCurrentEpochResponse":{"type":"object","properties":{"epoch":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetEpochGroupDataResponse":{"type":"object","properties":{"epoch_group_data":{"$ref":"#/definitions/inference.inference.EpochGroupData"}}},"inference.inference.QueryGetEpochGroupValidationsResponse":{"type":"object","properties":{"epoch_group_validations":{"$ref":"#/definitions/inference.inference.EpochGroupValidations"}}},"inference.inference.QueryGetEpochPerformanceSummaryResponse":{"type":"object","properties":{"epochPerformanceSummary":{"$ref":"#/definitions/inference.inference.EpochPerformanceSummary"}}},"inference.inference.QueryGetInferenceResponse":{"type":"object","properties":{"inference":{"$ref":"#/definitions/inference.inference.Inference"}}},"inference.inference.QueryGetInferenceTimeoutResponse":{"type":"object","properties":{"inference_timeout":{"$ref":"#/definitions/inference.inference.InferenceTimeout"}}},"inference.inference.QueryGetInferenceValidationDetailsResponse":{"type":"object","properties":{"inferenceValidationDetails":{"$ref":"#/definitions/inference.inference.InferenceValidationDetails"}}},"inference.inference.QueryGetInferenceValidationParametersResponse":{"type":"object","properties":{"current_height":{"type":"string","format":"uint64"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.InferenceValidationDetails"}},"parameters":{"$ref":"#/definitions/inference.inference.ValidationParams"},"validator_power":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetMinimumValidationAverageResponse":{"type":"object","properties":{"block_height":{"type":"string","format":"uint64"},"minimum_validation_average":{"type":"string"},"traffic_basis":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetPartialUpgradeResponse":{"type":"object","properties":{"partialUpgrade":{"$ref":"#/definitions/inference.inference.PartialUpgrade"}}},"inference.inference.QueryGetParticipantCurrentStatsResponse":{"type":"object","properties":{"reputation":{"type":"integer","format":"int32"},"weight":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetParticipantResponse":{"type":"object","properties":{"participant":{"$ref":"#/definitions/inference.inference.Participant"}}},"inference.inference.QueryGetRandomExecutorResponse":{"type":"object","properties":{"executor":{"$ref":"#/definitions/inference.inference.Participant"}}},"inference.inference.QueryGetSettleAmountResponse":{"type":"object","properties":{"settle_amount":{"$ref":"#/definitions/inference.inference.SettleAmount"}}},"inference.inference.QueryGetTokenomicsDataResponse":{"type":"object","properties":{"tokenomics_data":{"$ref":"#/definitions/inference.inference.TokenomicsData"}}},"inference.inference.QueryGetTopMinerResponse":{"type":"object","properties":{"top_miner":{"$ref":"#/definitions/inference.inference.TopMiner"}}},"inference.inference.QueryGetUnitOfComputePriceProposalResponse":{"type":"object","properties":{"default":{"type":"string","format":"uint64"},"proposal":{"$ref":"#/definitions/inference.inference.UnitOfComputePriceProposal"}}},"inference.inference.QueryHardwareNodesAllResponse":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.HardwareNodes"}}}},"inference.inference.QueryHardwareNodesResponse":{"type":"object","properties":{"nodes":{"$ref":"#/definitions/inference.inference.HardwareNodes"}}},"inference.inference.QueryInProgressTrainingTasksResponse":{"type":"object","properties":{"tasks":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTask"}}}},"inference.inference.QueryInferenceParticipantResponse":{"type":"object","properties":{"balance":{"type":"string","format":"int64"},"pubkey":{"type":"string"}}},"inference.inference.QueryInferencesAndTokensStatsResponse":{"type":"object","properties":{"ai_tokens":{"type":"string","format":"int64"},"inferences":{"type":"integer","format":"int32"}}},"inference.inference.QueryModelsAllResponse":{"type":"object","properties":{"model":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Model"}}}},"inference.inference.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.inference.Params"}}},"inference.inference.QueryParticipantsFullStatsResponse":{"type":"object","properties":{"participants_stats":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ParticipantFullStats"}}}},"inference.inference.QueryPocBatchesForStageResponse":{"type":"object","properties":{"poc_batch":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.PoCBatchesWithParticipants"}}}},"inference.inference.QueryPreviousEpochGroupDataResponse":{"type":"object","properties":{"epoch_group_data":{"$ref":"#/definitions/inference.inference.EpochGroupData"}}},"inference.inference.QueryQueuedTrainingTasksResponse":{"type":"object","properties":{"tasks":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTask"}}}},"inference.inference.QueryStatsByTimePeriodByDeveloperResponse":{"type":"object","properties":{"stats":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.DeveloperStatsByTime"}}}},"inference.inference.QueryTrainingTaskAllResponse":{"type":"object","properties":{"tasks":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTask"}}}},"inference.inference.QueryTrainingTaskResponse":{"type":"object","properties":{"task":{"$ref":"#/definitions/inference.inference.TrainingTask"}}},"inference.inference.SeedSignature":{"type":"object","properties":{"member_address":{"type":"string"},"signature":{"type":"string"}}},"inference.inference.SettleAmount":{"type":"object","properties":{"participant":{"type":"string"},"poc_start_height":{"type":"string","format":"uint64"},"reward_coins":{"type":"string","format":"uint64"},"seed_signature":{"type":"string"},"work_coins":{"type":"string","format":"uint64"}}},"inference.inference.TokenomicsData":{"type":"object","properties":{"top_reward_start":{"type":"string","format":"int64"},"total_burned":{"type":"string","format":"uint64"},"total_fees":{"type":"string","format":"uint64"},"total_refunded":{"type":"string","format":"uint64"},"total_subsidies":{"type":"string","format":"uint64"}}},"inference.inference.TokenomicsParams":{"type":"object","properties":{"current_subsidy_percentage":{"$ref":"#/definitions/inference.inference.Decimal"},"subsidy_reduction_amount":{"$ref":"#/definitions/inference.inference.Decimal"},"subsidy_reduction_interval":{"$ref":"#/definitions/inference.inference.Decimal"},"top_miner_poc_qualification":{"type":"string","format":"int64"},"top_reward_allowed_failure":{"$ref":"#/definitions/inference.inference.Decimal"}}},"inference.inference.TopMiner":{"type":"object","properties":{"address":{"type":"string"},"first_qualified_started":{"type":"string","format":"int64"},"initial_order":{"type":"integer","format":"int32"},"initial_power":{"type":"string","format":"int64"},"last_qualified_started":{"type":"string","format":"int64"},"last_updated_time":{"type":"string","format":"int64"},"missed_periods":{"type":"integer","format":"int32"},"missed_time":{"type":"string","format":"int64"},"qualified_periods":{"type":"integer","format":"int32"},"qualified_time":{"type":"string","format":"int64"},"rewards_paid":{"type":"array","items":{"type":"string","format":"int64"}},"rewards_paid_count":{"type":"integer","format":"int32"}}},"inference.inference.TrainingConfig":{"type":"object","properties":{"datasets":{"$ref":"#/definitions/inference.inference.TrainingDatasets"},"num_uoc_estimation_steps":{"type":"integer","format":"int64"}}},"inference.inference.TrainingDatasets":{"type":"object","properties":{"test":{"type":"string"},"train":{"type":"string"}}},"inference.inference.TrainingHardwareResources":{"type":"object","properties":{"count":{"type":"integer","format":"int64"},"type":{"type":"string"}}},"inference.inference.TrainingTask":{"type":"object","properties":{"assigned_at_block_height":{"type":"string","format":"uint64"},"assignees":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTaskAssignee"}},"assigner":{"type":"string"},"claimed_by_assigner_at_block_height":{"type":"string","format":"uint64"},"config":{"$ref":"#/definitions/inference.inference.TrainingConfig"},"created_at_block_height":{"type":"string","format":"uint64"},"finished_at_block_height":{"type":"string","format":"uint64"},"hardware_resources":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingHardwareResources"}},"id":{"type":"string","format":"uint64"},"requested_by":{"type":"string"}}},"inference.inference.TrainingTaskAssignee":{"type":"object","properties":{"node_ids":{"type":"array","items":{"type":"string"}},"participant":{"type":"string"}}},"inference.inference.UnitOfComputePriceProposal":{"type":"object","properties":{"participant":{"type":"string"},"price":{"type":"string","format":"uint64"},"proposed_at_block_height":{"type":"string","format":"uint64"},"proposed_at_epoch":{"type":"string","format":"uint64"}}},"inference.inference.ValidationParams":{"type":"object","properties":{"epochs_to_max":{"type":"string","format":"int64"},"expiration_blocks":{"type":"string","format":"int64"},"false_positive_rate":{"$ref":"#/definitions/inference.inference.Decimal"},"full_validation_traffic_cutoff":{"type":"string","format":"int64"},"max_validation_average":{"$ref":"#/definitions/inference.inference.Decimal"},"min_ramp_up_measurements":{"type":"integer","format":"int32"},"min_validation_average":{"$ref":"#/definitions/inference.inference.Decimal"},"min_validation_halfway":{"$ref":"#/definitions/inference.inference.Decimal"},"min_validation_traffic_cutoff":{"type":"string","format":"int64"},"miss_percentage_cutoff":{"$ref":"#/definitions/inference.inference.Decimal"},"miss_requests_penalty":{"$ref":"#/definitions/inference.inference.Decimal"},"pass_value":{"$ref":"#/definitions/inference.inference.Decimal"}}},"inference.inference.ValidationWeight":{"type":"object","properties":{"member_address":{"type":"string"},"reputation":{"type":"integer","format":"int32"},"weight":{"type":"string","format":"int64"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}