{"id":"github.com/productscience/inference","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain github.com/productscience/inference REST API","title":"HTTP API Console","contact":{"name":"github.com/productscience/inference"},"version":"version not set"},"paths":{"/inference.bls.Msg/RequestThresholdSignature":{"post":{"tags":["Msg"],"summary":"RequestThresholdSignature allows external users to request a threshold signature","operationId":"GithubComproductscienceinferenceMsg_RequestThresholdSignature","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.bls.MsgRequestThresholdSignature"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.MsgRequestThresholdSignatureResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.bls.Msg/SubmitDealerPart":{"post":{"tags":["Msg"],"summary":"SubmitDealerPart allows a participant to submit their dealer part during the dealing phase","operationId":"GithubComproductscienceinferenceMsg_SubmitDealerPart","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.bls.MsgSubmitDealerPart"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.MsgSubmitDealerPartResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.bls.Msg/SubmitGroupKeyValidationSignature":{"post":{"tags":["Msg"],"summary":"SubmitGroupKeyValidationSignature allows a participant to submit their partial signature for group key validation","operationId":"GithubComproductscienceinferenceMsg_SubmitGroupKeyValidationSignature","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.bls.MsgSubmitGroupKeyValidationSignature"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.MsgSubmitGroupKeyValidationSignatureResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.bls.Msg/SubmitPartialSignature":{"post":{"tags":["Msg"],"summary":"SubmitPartialSignature allows a participant to submit their partial signature for threshold signing","operationId":"GithubComproductscienceinferenceMsg_SubmitPartialSignature","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.bls.MsgSubmitPartialSignature"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.MsgSubmitPartialSignatureResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.bls.Msg/SubmitVerificationVector":{"post":{"tags":["Msg"],"summary":"SubmitVerificationVector allows a participant to confirm they completed verification during the verifying phase","operationId":"GithubComproductscienceinferenceMsg_SubmitVerificationVector","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.bls.MsgSubmitVerificationVector"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.MsgSubmitVerificationVectorResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.bls.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.bls.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.bookkeeper.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParamsMixin11","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.bookkeeper.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bookkeeper.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.collateral.Msg/DepositCollateral":{"post":{"tags":["Msg"],"summary":"DepositCollateral deposits collateral for the participant","operationId":"GithubComproductscienceinferenceMsg_DepositCollateral","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.collateral.MsgDepositCollateral"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.collateral.MsgDepositCollateralResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.collateral.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParamsMixin17","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.collateral.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.collateral.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.collateral.Msg/WithdrawCollateral":{"post":{"tags":["Msg"],"summary":"WithdrawCollateral initiates withdrawal of collateral (subject to unbonding period)","operationId":"GithubComproductscienceinferenceMsg_WithdrawCollateral","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.collateral.MsgWithdrawCollateral"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.collateral.MsgWithdrawCollateralResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.genesistransfer.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParamsMixin22","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.genesistransfer.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.genesistransfer.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/AssignTrainingTask":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_AssignTrainingTask","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgAssignTrainingTask"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgAssignTrainingTaskResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/BridgeExchange":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_BridgeExchange","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgBridgeExchange"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgBridgeExchangeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/ClaimRewards":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_ClaimRewards","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgClaimRewards"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgClaimRewardsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/ClaimTrainingTaskForAssignment":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_ClaimTrainingTaskForAssignment","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgClaimTrainingTaskForAssignment"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgClaimTrainingTaskForAssignmentResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/CreateDummyTrainingTask":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_CreateDummyTrainingTask","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgCreateDummyTrainingTask"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgCreateDummyTrainingTaskResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/CreatePartialUpgrade":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_CreatePartialUpgrade","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgCreatePartialUpgrade"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgCreatePartialUpgradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/CreateTrainingTask":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_CreateTrainingTask","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgCreateTrainingTask"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgCreateTrainingTaskResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/FinishInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_FinishInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgFinishInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgFinishInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/InvalidateInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_InvalidateInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgInvalidateInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgInvalidateInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/JoinTraining":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_JoinTraining","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgJoinTraining"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgJoinTrainingResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/JoinTrainingStatus":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_JoinTrainingStatus","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgJoinTrainingStatus"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgJoinTrainingStatusResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/RegisterModel":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_RegisterModel","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgRegisterModel"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgRegisterModelResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/RevalidateInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_RevalidateInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgRevalidateInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgRevalidateInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SetBarrier":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SetBarrier","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSetBarrier"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSetBarrierResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/StartInference":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_StartInference","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgStartInference"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgStartInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitHardwareDiff":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitHardwareDiff","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitHardwareDiff"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitHardwareDiffResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitNewParticipant":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitNewParticipant","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewParticipant"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitNewUnfundedParticipant":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitNewUnfundedParticipant","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewUnfundedParticipant"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitNewUnfundedParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitPocBatch":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitPocBatch","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitPocBatch"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitPocBatchResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitPocValidation":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitPocValidation","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitPocValidation"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitPocValidationResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitSeed":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitSeed","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitSeed"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitSeedResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitTrainingKvRecord":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitTrainingKvRecord","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitTrainingKvRecord"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitTrainingKvRecordResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/SubmitUnitOfComputePriceProposal":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_SubmitUnitOfComputePriceProposal","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgSubmitUnitOfComputePriceProposal"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgSubmitUnitOfComputePriceProposalResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/TrainingHeartbeat":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_TrainingHeartbeat","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgTrainingHeartbeat"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgTrainingHeartbeatResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParamsMixin51","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.Msg/Validation":{"post":{"tags":["Msg"],"operationId":"GithubComproductscienceinferenceMsg_Validation","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.MsgValidation"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MsgValidationResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/GetAliveNodes":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_GetAliveNodes","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.GetAliveNodesRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.GetAliveNodesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/GetBarrierStatus":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_GetBarrierStatus","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.GetBarrierStatusRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.GetBarrierStatusResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/GetJoinTrainingStatus":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_GetJoinTrainingStatus","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.JoinTrainingRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MLNodeTrainStatus"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/GetStoreRecord":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_GetStoreRecord","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.GetStoreRecordRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.GetStoreRecordResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/JoinTraining":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_JoinTraining","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.JoinTrainingRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.MLNodeTrainStatus"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/ListStoreKeys":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_ListStoreKeys","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.StoreListKeysRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.StoreListKeysResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/SendHeartbeat":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_SendHeartbeat","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.HeartbeatRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.HeartbeatResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/SetBarrier":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_SetBarrier","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.SetBarrierRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.SetBarrierResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.inference.NetworkNodeService/SetStoreRecord":{"post":{"tags":["NetworkNodeService"],"operationId":"GithubComproductscienceinferenceNetworkNodeService_SetStoreRecord","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.inference.SetStoreRecordRequest"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.SetStoreRecordResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.restrictions.Msg/ExecuteEmergencyTransfer":{"post":{"tags":["Msg"],"summary":"ExecuteEmergencyTransfer allows users to execute governance-approved emergency transfers","operationId":"GithubComproductscienceinferenceMsg_ExecuteEmergencyTransfer","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.restrictions.MsgExecuteEmergencyTransfer"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.restrictions.MsgExecuteEmergencyTransferResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.restrictions.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParamsMixin56","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.restrictions.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.restrictions.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference.streamvesting.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComproductscienceinferenceMsg_UpdateParamsMixin60","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/inference.streamvesting.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.streamvesting.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference/inference/bridge_transaction/{origin_chain}/{block_number}/{receipt_index}":{"get":{"tags":["Query"],"summary":"Queries a bridge transaction by its composite key","operationId":"GithubComproductscienceinferenceQuery_BridgeTransaction","parameters":[{"type":"string","name":"origin_chain","in":"path","required":true},{"type":"string","name":"block_number","in":"path","required":true},{"type":"string","name":"receipt_index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetBridgeTransactionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/inference/inference/bridge_transactions":{"get":{"tags":["Query"],"summary":"Queries all bridge transactions","operationId":"GithubComproductscienceinferenceQuery_BridgeTransactions","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllBridgeTransactionsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/bls/epoch_data/{epoch_id}":{"get":{"tags":["Query"],"summary":"EpochBLSData queries complete BLS data for a specific epoch","operationId":"GithubComproductscienceinferenceQuery_EpochBLSData","parameters":[{"type":"string","format":"uint64","description":"epoch_id identifies the DKG round to query complete data for","name":"epoch_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.QueryEpochBLSDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/bls/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/bls/signing_history":{"get":{"tags":["Query"],"summary":"SigningHistory queries threshold signing requests with filtering and pagination","operationId":"GithubComproductscienceinferenceQuery_SigningHistory","parameters":[{"type":"string","format":"uint64","description":"current_epoch_id filters requests by epoch (optional, 0 means all epochs)","name":"current_epoch_id","in":"query"},{"enum":["THRESHOLD_SIGNING_STATUS_UNDEFINED","THRESHOLD_SIGNING_STATUS_PENDING_SIGNING","THRESHOLD_SIGNING_STATUS_COLLECTING_SIGNATURES","THRESHOLD_SIGNING_STATUS_COMPLETED","THRESHOLD_SIGNING_STATUS_FAILED","THRESHOLD_SIGNING_STATUS_EXPIRED"],"type":"string","default":"THRESHOLD_SIGNING_STATUS_UNDEFINED","description":"status_filter filters requests by status (optional, UNDEFINED means all statuses)\n\n - THRESHOLD_SIGNING_STATUS_UNDEFINED: UNDEFINED represents an uninitialized or unknown status\n - THRESHOLD_SIGNING_STATUS_PENDING_SIGNING: PENDING_SIGNING represents the initial state when a signing request is created\n - THRESHOLD_SIGNING_STATUS_COLLECTING_SIGNATURES: COLLECTING_SIGNATURES represents the state when collecting partial signatures from participants\n - THRESHOLD_SIGNING_STATUS_COMPLETED: COMPLETED represents the state when the threshold signature has been successfully created\n - THRESHOLD_SIGNING_STATUS_FAILED: FAILED represents the state when the threshold signing process has failed\n - THRESHOLD_SIGNING_STATUS_EXPIRED: EXPIRED represents the state when the deadline has passed without sufficient signatures","name":"status_filter","in":"query"},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.QuerySigningHistoryResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/bls/signing_status/{request_id}":{"get":{"tags":["Query"],"summary":"SigningStatus queries the status of a specific threshold signing request","operationId":"GithubComproductscienceinferenceQuery_SigningStatus","parameters":[{"type":"string","format":"byte","description":"request_id uniquely identifies the threshold signing request (32 bytes)","name":"request_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bls.QuerySigningStatusResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/bookkeeper/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_ParamsMixin10","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.bookkeeper.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/collateral/collateral":{"get":{"tags":["Query"],"summary":"Queries all active collateral.","operationId":"GithubComproductscienceinferenceQuery_AllCollaterals","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.collateral.QueryAllCollateralsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/collateral/collateral/{participant}":{"get":{"tags":["Query"],"summary":"Queries a specific participant's active collateral.","operationId":"GithubComproductscienceinferenceQuery_Collateral","parameters":[{"type":"string","name":"participant","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.collateral.QueryCollateralResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/collateral/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_ParamsMixin16","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.collateral.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/collateral/unbonding":{"get":{"tags":["Query"],"summary":"Queries all unbonding collateral.","operationId":"GithubComproductscienceinferenceQuery_AllUnbondingCollaterals","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.collateral.QueryAllUnbondingCollateralsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/collateral/unbonding/{participant}":{"get":{"tags":["Query"],"summary":"Queries a specific participant's unbonding collateral.","operationId":"GithubComproductscienceinferenceQuery_UnbondingCollateral","parameters":[{"type":"string","name":"participant","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.collateral.QueryUnbondingCollateralResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/genesistransfer/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_ParamsMixin21","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.genesistransfer.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/all_model_capacities":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_GetAllModelCapacities","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetAllModelCapacitiesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/all_model_per_token_prices":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_GetAllModelPerTokenPrices","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetAllModelPerTokenPricesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/all_stats_by_time":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferencesAndTokensStatsByTimePeriod","parameters":[{"type":"string","format":"int64","name":"time_from","in":"query"},{"type":"string","format":"int64","name":"time_to","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferencesAndTokensStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/count_po_c_batches_at_height/{blockHeight}":{"get":{"tags":["Query"],"summary":"Queries a list of CountPoCbatchesAtHeight items.","operationId":"GithubComproductscienceinferenceQuery_CountPoCbatchesAtHeight","parameters":[{"type":"integer","format":"int32","name":"blockHeight","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryCountPoCbatchesAtHeightResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/count_po_c_validations_at_height/{blockHeight}":{"get":{"tags":["Query"],"summary":"Queries a list of CountPoCvalidationsAtHeight items.","operationId":"GithubComproductscienceinferenceQuery_CountPoCvalidationsAtHeight","parameters":[{"type":"integer","format":"int32","name":"blockHeight","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryCountPoCvalidationsAtHeightResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/current_epoch_group_data":{"get":{"tags":["Query"],"summary":"Queries a list of CurrentEpochGroupData items.","operationId":"GithubComproductscienceinferenceQuery_CurrentEpochGroupData","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryCurrentEpochGroupDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/debug/developer/all_stats":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_DebugStatsDeveloperStats","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryDebugStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/developer/stats_by_epochs_backwards":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferencesAndTokensStatsByEpochsBackwards","parameters":[{"type":"integer","format":"int32","name":"epochs_n","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferencesAndTokensStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/developer/{developer}/stats_by_epochs_backwards":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_StatsByDeveloperAndEpochsBackwards","parameters":[{"type":"string","name":"developer","in":"path","required":true},{"type":"integer","format":"int32","name":"epochs_n","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferencesAndTokensStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/developer/{developer}/stats_by_time":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_StatsByTimePeriodByDeveloper","parameters":[{"type":"string","name":"developer","in":"path","required":true},{"type":"string","format":"int64","name":"time_from","in":"query"},{"type":"string","format":"int64","name":"time_to","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryStatsByTimePeriodByDeveloperResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_group_data":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_EpochGroupDataAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllEpochGroupDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_group_data/{poc_start_block_height}":{"get":{"tags":["Query"],"summary":"Queries a list of EpochGroupData items.","operationId":"GithubComproductscienceinferenceQuery_EpochGroupData","parameters":[{"type":"string","format":"uint64","name":"poc_start_block_height","in":"path","required":true},{"type":"string","name":"model_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetEpochGroupDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_group_validations":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_EpochGroupValidationsAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllEpochGroupValidationsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_group_validations/{participant}/{poc_start_block_height}":{"get":{"tags":["Query"],"summary":"Queries a list of EpochGroupValidations items.","operationId":"GithubComproductscienceinferenceQuery_EpochGroupValidations","parameters":[{"type":"string","name":"participant","in":"path","required":true},{"type":"string","format":"uint64","name":"poc_start_block_height","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetEpochGroupValidationsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_info":{"get":{"tags":["Query"],"summary":"Queries a list of EpochInfo items.","operationId":"GithubComproductscienceinferenceQuery_EpochInfo","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryEpochInfoResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_performance_summary":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_EpochPerformanceSummaryAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllEpochPerformanceSummaryResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/epoch_performance_summary/{epochStartHeight}/{participantId}":{"get":{"tags":["Query"],"summary":"Queries a list of EpochPerformanceSummary items.","operationId":"GithubComproductscienceinferenceQuery_EpochPerformanceSummary","parameters":[{"type":"string","format":"uint64","name":"epochStartHeight","in":"path","required":true},{"type":"string","name":"participantId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetEpochPerformanceSummaryResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_all_participant_current_stats":{"get":{"tags":["Query"],"summary":"Queries a list of GetAllParticipantCurrentStats items.","operationId":"GithubComproductscienceinferenceQuery_GetAllParticipantCurrentStats","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetAllParticipantCurrentStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_current_epoch":{"get":{"tags":["Query"],"summary":"Queries a list of GetCurrentEpoch items.","operationId":"GithubComproductscienceinferenceQuery_GetCurrentEpoch","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetCurrentEpochResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_inference_validation_parameters/{ids}/{requester}":{"get":{"tags":["Query"],"summary":"Queries a list of GetInferenceValidationParameters items.","operationId":"GithubComproductscienceinferenceQuery_GetInferenceValidationParameters","parameters":[{"minItems":1,"type":"array","items":{"type":"string"},"collectionFormat":"csv","name":"ids","in":"path","required":true},{"type":"string","name":"requester","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceValidationParametersResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_minimum_validation_average":{"get":{"tags":["Query"],"summary":"Queries a list of GetMinimumValidationAverage items.","operationId":"GithubComproductscienceinferenceQuery_GetMinimumValidationAverage","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetMinimumValidationAverageResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_participant_current_stats/{participantId}":{"get":{"tags":["Query"],"summary":"Queries a list of GetParticipantCurrentStats items.","operationId":"GithubComproductscienceinferenceQuery_GetParticipantCurrentStats","parameters":[{"type":"string","name":"participantId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetParticipantCurrentStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_random_executor":{"get":{"tags":["Query"],"summary":"Queries a list of GetRandomExecutor items.","operationId":"GithubComproductscienceinferenceQuery_GetRandomExecutor","parameters":[{"type":"string","name":"model","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetRandomExecutorResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/get_unit_of_compute_price_proposal":{"get":{"tags":["Query"],"summary":"Queries a list of GetUnitOfComputePriceProposal items.","operationId":"GithubComproductscienceinferenceQuery_GetUnitOfComputePriceProposal","parameters":[{"type":"string","name":"participant","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetUnitOfComputePriceProposalResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/grantees_by_message_type/{granter_address}/{message_type_url}":{"get":{"tags":["Query"],"summary":"Queries all authz grantees with specific message type for an account","operationId":"GithubComproductscienceinferenceQuery_GranteesByMessageType","parameters":[{"type":"string","name":"granter_address","in":"path","required":true},{"type":"string","name":"message_type_url","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGranteesByMessageTypeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/hardware_nodes/{participant}":{"get":{"tags":["Query"],"summary":"Queries a list of HardwareNodes items.","operationId":"GithubComproductscienceinferenceQuery_HardwareNodes","parameters":[{"type":"string","name":"participant","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryHardwareNodesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/hardware_nodes_all":{"get":{"tags":["Query"],"summary":"Queries a list of HardwareNodesAll items.","operationId":"GithubComproductscienceinferenceQuery_HardwareNodesAll","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryHardwareNodesAllResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/in_progress_training_tasks":{"get":{"tags":["Query"],"summary":"Queries a list of InProgressTrainingTasks items.","operationId":"GithubComproductscienceinferenceQuery_InProgressTrainingTasks","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInProgressTrainingTasksResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferenceAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference/{index}":{"get":{"tags":["Query"],"summary":"Queries a list of Inference items.","operationId":"GithubComproductscienceinferenceQuery_Inference","parameters":[{"type":"string","name":"index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_participant/{address}":{"get":{"tags":["Query"],"summary":"Queries a list of InferenceParticipant items.","operationId":"GithubComproductscienceinferenceQuery_InferenceParticipant","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferenceParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_timeout":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferenceTimeoutAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllInferenceTimeoutResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_timeout/{expirationHeight}/{inferenceId}":{"get":{"tags":["Query"],"summary":"Queries a list of InferenceTimeout items.","operationId":"GithubComproductscienceinferenceQuery_InferenceTimeout","parameters":[{"type":"string","format":"uint64","name":"expirationHeight","in":"path","required":true},{"type":"string","name":"inferenceId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceTimeoutResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_validation_details":{"get":{"tags":["Query"],"summary":"Queries a list of InferenceValidationDetails items.","operationId":"GithubComproductscienceinferenceQuery_InferenceValidationDetailsAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllInferenceValidationDetailsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/inference_validation_details/{epochId}/{inferenceId}":{"get":{"tags":["Query"],"summary":"BE CAREFUL, epoch_id in the request body meand epoch_group_id!!","operationId":"GithubComproductscienceinferenceQuery_InferenceValidationDetails","parameters":[{"type":"string","format":"uint64","name":"epochId","in":"path","required":true},{"type":"string","name":"inferenceId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetInferenceValidationDetailsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/list_training_kv_record_keys/{taskId}":{"get":{"tags":["Query"],"summary":"Queries a list of ListTrainingKvRecordKeys items.","operationId":"GithubComproductscienceinferenceQuery_ListTrainingKvRecordKeys","parameters":[{"type":"string","format":"uint64","name":"taskId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryListTrainingKvRecordKeysResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/model_capacity/{model_id}":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_GetModelCapacity","parameters":[{"type":"string","name":"model_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetModelCapacityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/model_per_token_price/{model_id}":{"get":{"tags":["Query"],"summary":"Dynamic pricing queries (Task 7.1)","operationId":"GithubComproductscienceinferenceQuery_GetModelPerTokenPrice","parameters":[{"type":"string","name":"model_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetModelPerTokenPriceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/models_all":{"get":{"tags":["Query"],"summary":"Queries a list of ModelsAll items.","operationId":"GithubComproductscienceinferenceQuery_ModelsAll","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryModelsAllResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/models_stats_by_time":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_InferencesAndTokensStatsByModels","parameters":[{"type":"string","format":"int64","name":"time_from","in":"query"},{"type":"string","format":"int64","name":"time_to","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryInferencesAndTokensStatsByModelsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_ParamsMixin43","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/partial_upgrade":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_PartialUpgradeAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllPartialUpgradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/partial_upgrade/{height}":{"get":{"tags":["Query"],"summary":"Queries a list of PartialUpgrade items.","operationId":"GithubComproductscienceinferenceQuery_PartialUpgrade","parameters":[{"type":"string","format":"uint64","name":"height","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetPartialUpgradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participant":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_ParticipantAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participant/{index}":{"get":{"tags":["Query"],"summary":"Queries a list of Participant items.","operationId":"GithubComproductscienceinferenceQuery_Participant","parameters":[{"type":"string","name":"index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetParticipantResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participants/count":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_CountParticipants","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryCountAllParticipantsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/participants_stats":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_GetParticipantsFullStats","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryParticipantsFullStatsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/poc_batches_for_stage/{block_height}":{"get":{"tags":["Query"],"summary":"Queries a list of PocBatchesForStage items.","operationId":"GithubComproductscienceinferenceQuery_PocBatchesForStage","parameters":[{"type":"string","format":"int64","name":"block_height","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryPocBatchesForStageResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/queued_training_tasks":{"get":{"tags":["Query"],"summary":"Queries a list of QueuedTrainingTasks items.","operationId":"GithubComproductscienceinferenceQuery_QueuedTrainingTasks","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryQueuedTrainingTasksResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/settle_amount":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_SettleAmountAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllSettleAmountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/settle_amount/{participant}":{"get":{"tags":["Query"],"summary":"Queries a list of SettleAmount items.","operationId":"GithubComproductscienceinferenceQuery_SettleAmount","parameters":[{"type":"string","name":"participant","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetSettleAmountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/tokenomics_data":{"get":{"tags":["Query"],"summary":"Queries a TokenomicsData by index.","operationId":"GithubComproductscienceinferenceQuery_TokenomicsData","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetTokenomicsDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/top_miner":{"get":{"tags":["Query"],"operationId":"GithubComproductscienceinferenceQuery_TopMinerAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryAllTopMinerResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/top_miner/{address}":{"get":{"tags":["Query"],"summary":"Queries a list of TopMiner items.","operationId":"GithubComproductscienceinferenceQuery_TopMiner","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryGetTopMinerResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/training_alive_nodes":{"get":{"tags":["Query"],"summary":"Queries a list of TrainingAliveNodes items.","operationId":"GithubComproductscienceinferenceQuery_TrainingAliveNodes","parameters":[{"type":"string","format":"uint64","name":"req.run_id","in":"query"},{"type":"integer","format":"int32","name":"req.outer_step","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryTrainingAliveNodesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/training_barrier":{"get":{"tags":["Query"],"summary":"Queries a list of TrainingBarrier items.","operationId":"GithubComproductscienceinferenceQuery_TrainingBarrier","parameters":[{"type":"string","name":"req.barrier_id","in":"query"},{"type":"string","format":"uint64","name":"req.run_id","in":"query"},{"type":"integer","format":"int32","name":"req.outer_step","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryTrainingBarrierResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/training_kv_record/{taskId}/{key}":{"get":{"tags":["Query"],"summary":"Queries a list of TrainingKvRecord items.","operationId":"GithubComproductscienceinferenceQuery_TrainingKvRecord","parameters":[{"type":"string","format":"uint64","name":"taskId","in":"path","required":true},{"type":"string","name":"key","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryTrainingKvRecordResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/training_task":{"get":{"tags":["Query"],"summary":"Queries a list of TrainingTask items.","operationId":"GithubComproductscienceinferenceQuery_TrainingTask","parameters":[{"type":"string","format":"uint64","name":"id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryTrainingTaskResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/inference/training_task_all":{"get":{"tags":["Query"],"summary":"Queries a list of TrainingTaskAll items.","operationId":"GithubComproductscienceinferenceQuery_TrainingTaskAll","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.inference.QueryTrainingTaskAllResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/restrictions/exemption_usage":{"get":{"tags":["Query"],"summary":"ExemptionUsage queries usage statistics for emergency exemptions","operationId":"GithubComproductscienceinferenceQuery_ExemptionUsage","parameters":[{"type":"string","description":"exemption_id filters usage by specific exemption ID (optional)","name":"exemption_id","in":"query"},{"type":"string","description":"account_address filters usage by specific account address (optional)","name":"account_address","in":"query"},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.restrictions.QueryExemptionUsageResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/restrictions/exemptions":{"get":{"tags":["Query"],"summary":"TransferExemptions queries all active emergency transfer exemptions","operationId":"GithubComproductscienceinferenceQuery_TransferExemptions","parameters":[{"type":"boolean","description":"include_expired indicates whether to include expired exemptions in the response","name":"include_expired","in":"query"},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.restrictions.QueryTransferExemptionsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/restrictions/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_ParamsMixin55","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.restrictions.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/restrictions/status":{"get":{"tags":["Query"],"summary":"TransferRestrictionStatus queries the current transfer restriction status","operationId":"GithubComproductscienceinferenceQuery_TransferRestrictionStatus","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.restrictions.QueryTransferRestrictionStatusResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/streamvesting/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComproductscienceinferenceQuery_ParamsMixin59","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.streamvesting.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/streamvesting/total_vesting/{participant_address}":{"get":{"tags":["Query"],"summary":"TotalVestingAmount queries the total vesting amount for a participant.","operationId":"GithubComproductscienceinferenceQuery_TotalVestingAmount","parameters":[{"type":"string","name":"participant_address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.streamvesting.QueryTotalVestingAmountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/productscience/inference/streamvesting/vesting_schedule/{participant_address}":{"get":{"tags":["Query"],"summary":"VestingSchedule queries a participant's full vesting schedule.","operationId":"GithubComproductscienceinferenceQuery_VestingSchedule","parameters":[{"type":"string","name":"participant_address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/inference.streamvesting.QueryVestingScheduleResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"cosmos.base.v1beta1.Coin":{"description":"Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto.","type":"object","properties":{"amount":{"type":"string"},"denom":{"type":"string"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}},"inference.bls.BLSParticipantInfo":{"type":"object","title":"BLSParticipantInfo contains information about a participant in the DKG process","properties":{"address":{"type":"string","title":"address is the participant's address"},"percentage_weight":{"type":"string","title":"percentage_weight is the participant's weight in the validation set (as string for sdk.Dec compatibility)"},"secp256k1_public_key":{"type":"string","format":"byte","title":"secp256k1_public_key is the participant's secp256k1 public key for encryption"},"slot_end_index":{"type":"integer","format":"int64","title":"slot_end_index is the last slot index assigned to this participant (inclusive)"},"slot_start_index":{"type":"integer","format":"int64","title":"slot_start_index is the first slot index assigned to this participant"}}},"inference.bls.DKGPhase":{"description":"- DKG_PHASE_UNDEFINED: UNDEFINED represents an uninitialized or unknown phase\n - DKG_PHASE_DEALING: DEALING represents the phase where participants submit their dealing parts\n - DKG_PHASE_VERIFYING: VERIFYING represents the phase where participants verify dealing parts\n - DKG_PHASE_COMPLETED: COMPLETED represents the phase where DKG has successfully completed\n - DKG_PHASE_FAILED: FAILED represents the phase where DKG has failed\n - DKG_PHASE_SIGNED: SIGNED represents the phase where DKG has completed and been validated by previous epoch","type":"string","title":"DKGPhase defines the different phases of the Distributed Key Generation process","default":"DKG_PHASE_UNDEFINED","enum":["DKG_PHASE_UNDEFINED","DKG_PHASE_DEALING","DKG_PHASE_VERIFYING","DKG_PHASE_COMPLETED","DKG_PHASE_FAILED","DKG_PHASE_SIGNED"]},"inference.bls.DealerPartStorage":{"type":"object","title":"DealerPartStorage contains the storage format for a dealer's contribution to DKG","properties":{"commitments":{"type":"array","title":"commitments are the G2 points C_kj = g * a_kj representing polynomial commitments","items":{"type":"string","format":"byte"}},"dealer_address":{"type":"string","title":"dealer_address is the address of the dealer who submitted this part"},"participant_shares":{"type":"array","title":"participant_shares contains encrypted shares for all participants in order\nIndex i = shares for EpochBLSData.participants[i]","items":{"type":"object","$ref":"#/definitions/inference.bls.EncryptedSharesForParticipant"}}}},"inference.bls.EncryptedSharesForParticipant":{"type":"object","title":"EncryptedSharesForParticipant contains encrypted shares for a specific participant","properties":{"encrypted_shares":{"type":"array","title":"encrypted_shares contains shares for participant's slot range in order\nIndex i = share for slot (participant.slot_start_index + i)","items":{"type":"string","format":"byte"}}}},"inference.bls.EpochBLSData":{"type":"object","title":"EpochBLSData contains all information about a DKG round for a specific epoch","properties":{"dealer_parts":{"type":"array","title":"dealer_parts contains dealer contributions in the same order as participants array\ndealer_parts[i] corresponds to participants[i]'s dealer contribution\nnil/empty entries indicate that participant has not submitted their dealer part yet","items":{"type":"object","$ref":"#/definitions/inference.bls.DealerPartStorage"}},"dealing_phase_deadline_block":{"type":"string","format":"int64","title":"dealing_phase_deadline_block is the block height deadline for the dealing phase"},"dkg_phase":{"title":"dkg_phase indicates the current phase of the DKG process","$ref":"#/definitions/inference.bls.DKGPhase"},"epoch_id":{"type":"string","format":"uint64","title":"epoch_id uniquely identifies this DKG round"},"group_public_key":{"type":"string","format":"byte","title":"group_public_key is the final group public key (G2 point) when DKG completes"},"i_total_slots":{"type":"integer","format":"int64","title":"i_total_slots is the total number of slots in the DKG"},"participants":{"type":"array","title":"participants contains information about all participants in this DKG round","items":{"type":"object","$ref":"#/definitions/inference.bls.BLSParticipantInfo"}},"t_slots_degree":{"type":"integer","format":"int64","title":"t_slots_degree is the polynomial degree t for the threshold scheme"},"valid_dealers":{"type":"array","title":"valid_dealers contains the validity of each dealer that was determined during DKG completion\nThis is populated when the DKG transitions to COMPLETED phase\nIndex i corresponds to whether dealer i (participants[i]) is valid","items":{"type":"boolean"}},"validation_signature":{"type":"string","format":"byte","title":"validation_signature is the final aggregated signature validating this epoch's group public key\nThis signature is created by the previous epoch's validators using their BLS slot shares\nFor Epoch 1 (genesis), this field remains empty (no previous epoch to validate)\nFor Epoch N+1, stores the signature from Epoch N validators confirming the new group public key\nFormat: 48-byte G1 compressed signature"},"verification_submissions":{"type":"array","title":"verification_submissions contains verification results from each participant\nEach entry tracks which dealers that participant verified as valid","items":{"type":"object","$ref":"#/definitions/inference.bls.VerificationVectorSubmission"}},"verifying_phase_deadline_block":{"type":"string","format":"int64","title":"verifying_phase_deadline_block is the block height deadline for the verification phase"}}},"inference.bls.MsgRequestThresholdSignature":{"type":"object","title":"MsgRequestThresholdSignature allows external users to request a threshold signature via transaction","properties":{"chain_id":{"type":"string","format":"byte","title":"chain_id is the chain ID for EIP-155 compatibility (32 bytes)"},"creator":{"type":"string","title":"creator is the address of the user requesting the threshold signature"},"current_epoch_id":{"type":"string","format":"uint64","title":"current_epoch_id identifies the epoch to use for signing"},"data":{"type":"array","title":"data is the arbitrary data to be signed (array of 32-byte chunks)","items":{"type":"string","format":"byte"}},"request_id":{"type":"string","format":"byte","title":"request_id is the user-provided unique identifier for this request (32 bytes)"}}},"inference.bls.MsgRequestThresholdSignatureResponse":{"description":"MsgRequestThresholdSignatureResponse defines the response structure for executing a\nMsgRequestThresholdSignature message.","type":"object"},"inference.bls.MsgSubmitDealerPart":{"type":"object","title":"MsgSubmitDealerPart is the message for submitting dealer parts during the dealing phase","properties":{"commitments":{"type":"array","title":"commitments are the G2 points C_kj = g * a_kj representing polynomial commitments","items":{"type":"string","format":"byte"}},"creator":{"type":"string","title":"creator is the address of the dealer submitting their part"},"encrypted_shares_for_participants":{"type":"array","title":"encrypted_shares_for_participants contains encrypted shares for all participants in order\nIndex i = shares for EpochBLSData.participants[i]","items":{"type":"object","$ref":"#/definitions/inference.bls.EncryptedSharesForParticipant"}},"epoch_id":{"type":"string","format":"uint64","title":"epoch_id identifies the DKG round this dealer part belongs to"}}},"inference.bls.MsgSubmitDealerPartResponse":{"description":"MsgSubmitDealerPartResponse defines the response structure for executing a\nMsgSubmitDealerPart message.","type":"object"},"inference.bls.MsgSubmitGroupKeyValidationSignature":{"type":"object","title":"MsgSubmitGroupKeyValidationSignature is the message for submitting partial signatures for group key validation","properties":{"creator":{"type":"string","title":"creator is the address of the participant submitting their partial signature"},"new_epoch_id":{"type":"string","format":"uint64","title":"new_epoch_id identifies the epoch whose group public key is being validated"},"partial_signature":{"type":"string","format":"byte","title":"partial_signature is the BLS partial signature (G1 point, 48-byte compressed format)"},"slot_indices":{"type":"array","title":"slot_indices are the slot indices this participant is signing for (from their previous epoch assignment)","items":{"type":"integer","format":"int64"}}}},"inference.bls.MsgSubmitGroupKeyValidationSignatureResponse":{"description":"MsgSubmitGroupKeyValidationSignatureResponse defines the response structure for executing a\nMsgSubmitGroupKeyValidationSignature message.","type":"object"},"inference.bls.MsgSubmitPartialSignature":{"type":"object","title":"MsgSubmitPartialSignature is the message for submitting partial signatures for threshold signing","properties":{"creator":{"type":"string","title":"creator is the address of the participant submitting their partial signature"},"partial_signature":{"type":"string","format":"byte","title":"partial_signature is the aggregated BLS partial signature for all participant's slots (G1 point, 48-byte compressed format)"},"request_id":{"type":"string","format":"byte","title":"request_id identifies the threshold signing request this partial signature is for"},"slot_indices":{"type":"array","title":"slot_indices are the slot indices this participant is signing for (from their current epoch assignment)","items":{"type":"integer","format":"int64"}}}},"inference.bls.MsgSubmitPartialSignatureResponse":{"description":"MsgSubmitPartialSignatureResponse defines the response structure for executing a\nMsgSubmitPartialSignature message.","type":"object"},"inference.bls.MsgSubmitVerificationVector":{"type":"object","title":"MsgSubmitVerificationVector is the message for confirming verification completion during the verifying phase","properties":{"creator":{"type":"string","title":"creator is the address of the participant confirming verification completion"},"dealer_validity":{"type":"array","title":"dealer_validity is a bitmap indicating which dealers provided valid shares\nIndex i corresponds to EpochBLSData.participants[i] as dealer\ntrue = dealer's shares verified correctly against their commitments\nfalse = dealer's shares failed verification or dealer didn't submit","items":{"type":"boolean"}},"epoch_id":{"type":"string","format":"uint64","title":"epoch_id identifies the DKG round this verification confirmation belongs to"}}},"inference.bls.MsgSubmitVerificationVectorResponse":{"description":"MsgSubmitVerificationVectorResponse defines the response structure for executing a\nMsgSubmitVerificationVector message.","type":"object"},"inference.bls.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/inference.bls.Params"}}},"inference.bls.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.bls.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"dealing_phase_duration_blocks":{"type":"string","format":"int64","title":"Duration in blocks for the dealing phase (e.g., 5 blocks for PoC)"},"i_total_slots":{"type":"integer","format":"int64","title":"Total number of slots for DKG (e.g., 100 for PoC)"},"signing_deadline_blocks":{"type":"string","format":"int64","title":"Duration in blocks for threshold signing deadline (e.g., 10 blocks for PoC)"},"t_slots_degree_offset":{"type":"integer","format":"int64","title":"Polynomial degree offset (e.g., floor(i_total_slots / 2))"},"verification_phase_duration_blocks":{"type":"string","format":"int64","title":"Duration in blocks for the verification phase (e.g., 3 blocks for PoC)"}}},"inference.bls.PartialSignature":{"type":"object","title":"PartialSignature represents a partial signature from a single participant in threshold signing","properties":{"participant_address":{"type":"string","title":"participant_address is the address of the participant who submitted this partial signature"},"signature":{"type":"string","format":"byte","title":"signature is the BLS partial signature (G1 point, 48-byte compressed format)"},"slot_indices":{"type":"array","title":"slot_indices are the slot indices this participant is signing for (from their current epoch assignment)","items":{"type":"integer","format":"int64"}}}},"inference.bls.QueryEpochBLSDataResponse":{"description":"QueryEpochBLSDataResponse is response type for the Query/EpochBLSData RPC method.","type":"object","properties":{"epoch_data":{"title":"epoch_data contains complete BLS data for the specified epoch","$ref":"#/definitions/inference.bls.EpochBLSData"}}},"inference.bls.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.bls.Params"}}},"inference.bls.QuerySigningHistoryResponse":{"description":"QuerySigningHistoryResponse is response type for the Query/SigningHistory RPC method.","type":"object","properties":{"pagination":{"title":"pagination defines the pagination in the response","$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"signing_requests":{"type":"array","title":"signing_requests contains the filtered threshold signing requests","items":{"type":"object","$ref":"#/definitions/inference.bls.ThresholdSigningRequest"}}}},"inference.bls.QuerySigningStatusResponse":{"description":"QuerySigningStatusResponse is response type for the Query/SigningStatus RPC method.","type":"object","properties":{"signing_request":{"title":"signing_request contains the complete threshold signing request data","$ref":"#/definitions/inference.bls.ThresholdSigningRequest"}}},"inference.bls.ThresholdSigningRequest":{"type":"object","title":"ThresholdSigningRequest represents a complete threshold signing request stored on-chain","properties":{"chain_id":{"type":"string","format":"byte","title":"chain_id is the 32-byte chain identifier for cross-chain security"},"created_block_height":{"type":"string","format":"int64","title":"created_block_height is the block height when this request was created"},"current_epoch_id":{"type":"string","format":"uint64","title":"current_epoch_id is the epoch being used for signing"},"data":{"type":"array","title":"data is the original array of 32-byte data chunks to be signed","items":{"type":"string","format":"byte"}},"deadline_block_height":{"type":"string","format":"int64","title":"deadline_block_height is the block height after which this request expires"},"encoded_data":{"type":"string","format":"byte","title":"encoded_data is the Ethereum-compatible abi.encodePacked result"},"final_signature":{"type":"string","format":"byte","title":"final_signature is the aggregated BLS signature (G1 point, 48-byte compressed format)\nOnly set when status is COMPLETED"},"message_hash":{"type":"string","format":"byte","title":"message_hash is the keccak256 hash of the encoded_data (32 bytes)"},"partial_signatures":{"type":"array","title":"partial_signatures contains all partial signatures submitted by participants","items":{"type":"object","$ref":"#/definitions/inference.bls.PartialSignature"}},"request_id":{"type":"string","format":"byte","title":"request_id is the unique 32-byte identifier for this signing request"},"status":{"title":"status is the current state of the signing request","$ref":"#/definitions/inference.bls.ThresholdSigningStatus"}}},"inference.bls.ThresholdSigningStatus":{"description":"- THRESHOLD_SIGNING_STATUS_UNDEFINED: UNDEFINED represents an uninitialized or unknown status\n - THRESHOLD_SIGNING_STATUS_PENDING_SIGNING: PENDING_SIGNING represents the initial state when a signing request is created\n - THRESHOLD_SIGNING_STATUS_COLLECTING_SIGNATURES: COLLECTING_SIGNATURES represents the state when collecting partial signatures from participants\n - THRESHOLD_SIGNING_STATUS_COMPLETED: COMPLETED represents the state when the threshold signature has been successfully created\n - THRESHOLD_SIGNING_STATUS_FAILED: FAILED represents the state when the threshold signing process has failed\n - THRESHOLD_SIGNING_STATUS_EXPIRED: EXPIRED represents the state when the deadline has passed without sufficient signatures","type":"string","title":"ThresholdSigningStatus defines the different states of a threshold signing request","default":"THRESHOLD_SIGNING_STATUS_UNDEFINED","enum":["THRESHOLD_SIGNING_STATUS_UNDEFINED","THRESHOLD_SIGNING_STATUS_PENDING_SIGNING","THRESHOLD_SIGNING_STATUS_COLLECTING_SIGNATURES","THRESHOLD_SIGNING_STATUS_COMPLETED","THRESHOLD_SIGNING_STATUS_FAILED","THRESHOLD_SIGNING_STATUS_EXPIRED"]},"inference.bls.VerificationVectorSubmission":{"type":"object","title":"VerificationVectorSubmission contains verification results from a specific participant","properties":{"dealer_validity":{"type":"array","title":"dealer_validity bitmap indicating which dealers this participant verified as valid\nIndex i corresponds to EpochBLSData.participants[i] as dealer\ntrue = dealer's shares verified correctly; false = failed verification or no submission\nEmpty array indicates participant has not submitted verification yet","items":{"type":"boolean"}}}},"inference.bookkeeper.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/inference.bookkeeper.Params"}}},"inference.bookkeeper.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.bookkeeper.Params":{"description":"Params defines the parameters for the module.","type":"object"},"inference.bookkeeper.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.bookkeeper.Params"}}},"inference.collateral.CollateralBalance":{"type":"object","title":"CollateralBalance represents a participant's collateral balance","properties":{"amount":{"title":"amount is the collateral amount held by the participant","$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"participant":{"type":"string","title":"participant is the address of the participant"}}},"inference.collateral.MsgDepositCollateral":{"type":"object","title":"MsgDepositCollateral defines a message to deposit collateral","properties":{"amount":{"title":"amount is the collateral to deposit","$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"participant":{"type":"string","title":"participant is the address depositing collateral"}}},"inference.collateral.MsgDepositCollateralResponse":{"description":"MsgDepositCollateralResponse defines the response structure for executing a\nMsgDepositCollateral message.","type":"object"},"inference.collateral.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/inference.collateral.Params"}}},"inference.collateral.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.collateral.MsgWithdrawCollateral":{"type":"object","title":"MsgWithdrawCollateral defines a message to withdraw collateral","properties":{"amount":{"title":"amount is the collateral to withdraw","$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"participant":{"type":"string","title":"participant is the address withdrawing collateral"}}},"inference.collateral.MsgWithdrawCollateralResponse":{"description":"MsgWithdrawCollateralResponse defines the response structure for executing a\nMsgWithdrawCollateral message.","type":"object","properties":{"completion_epoch":{"type":"string","format":"uint64","title":"completion_epoch is the epoch when the withdrawal will complete"}}},"inference.collateral.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"unbonding_period_epochs":{"type":"string","format":"uint64","title":"UnbondingPeriodEpochs is the number of epochs a withdrawal must wait before being released"}}},"inference.collateral.QueryAllCollateralsResponse":{"description":"QueryAllCollateralsResponse is the response type for the Query/AllCollaterals RPC method.","type":"object","properties":{"collateral":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.collateral.CollateralBalance"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.collateral.QueryAllUnbondingCollateralsResponse":{"description":"QueryAllUnbondingCollateralsResponse is the response type for the Query/AllUnbondingCollaterals RPC method.","type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"unbondings":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.collateral.UnbondingCollateral"}}}},"inference.collateral.QueryCollateralResponse":{"description":"QueryCollateralResponse is the response type for the Query/Collateral RPC method.","type":"object","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"inference.collateral.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.collateral.Params"}}},"inference.collateral.QueryUnbondingCollateralResponse":{"description":"QueryUnbondingCollateralResponse is the response type for the Query/UnbondingCollateral RPC method.","type":"object","properties":{"unbondings":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.collateral.UnbondingCollateral"}}}},"inference.collateral.UnbondingCollateral":{"type":"object","title":"UnbondingCollateral represents collateral that is in the process of being withdrawn","properties":{"amount":{"title":"amount is the collateral amount being withdrawn","$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"completion_epoch":{"type":"string","format":"uint64","title":"completion_epoch is the epoch when the funds will be released"},"participant":{"type":"string","title":"participant is the address of the participant withdrawing collateral"}}},"inference.genesistransfer.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/inference.genesistransfer.Params"}}},"inference.genesistransfer.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.genesistransfer.Params":{"description":"Params defines the parameters for the module.","type":"object"},"inference.genesistransfer.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.genesistransfer.Params"}}},"inference.inference.BandwidthLimitsParams":{"description":"BandwidthLimitsParams defines the parameters for request bandwidth limitations.","type":"object","properties":{"estimated_limits_per_block_kb":{"type":"string","format":"uint64","title":"estimated_limits_per_block_kb is the maximum KB per block that can be consumed"},"kb_per_input_token":{"title":"kb_per_input_token is the estimated KB per input token","$ref":"#/definitions/inference.inference.Decimal"},"kb_per_output_token":{"title":"kb_per_output_token is the estimated KB per output token","$ref":"#/definitions/inference.inference.Decimal"}}},"inference.inference.BarrierStatusEnum":{"type":"string","default":"READY","enum":["READY","NOT_READY"]},"inference.inference.BitcoinRewardParams":{"description":"BitcoinRewardParams defines the parameters for Bitcoin-style reward system.","type":"object","properties":{"decay_rate":{"title":"decay_rate is the exponential decay rate per epoch for reward halving","$ref":"#/definitions/inference.inference.Decimal"},"full_coverage_bonus_factor":{"title":"full_coverage_bonus_factor is the multiplier for participants supporting all governance models (Phase 2)","$ref":"#/definitions/inference.inference.Decimal"},"genesis_epoch":{"type":"string","format":"uint64","title":"genesis_epoch is the starting epoch for Bitcoin-style calculations"},"initial_epoch_reward":{"type":"string","format":"uint64","title":"initial_epoch_reward is the base reward amount per epoch (in native tokens)"},"partial_coverage_bonus_factor":{"title":"partial_coverage_bonus_factor is the scaling factor for partial model coverage (Phase 2)","$ref":"#/definitions/inference.inference.Decimal"},"use_bitcoin_rewards":{"type":"boolean","title":"use_bitcoin_rewards enables/disables the Bitcoin-style reward system (default: true for production, false for safe deployment)"},"utilization_bonus_factor":{"title":"utilization_bonus_factor controls bonus multipliers for high-demand models (Phase 2)","$ref":"#/definitions/inference.inference.Decimal"}}},"inference.inference.BridgeTransaction":{"type":"object","properties":{"amount":{"type":"string"},"blockHeight":{"type":"string","format":"int64"},"blockNumber":{"type":"string","title":"block number where the transaction occurred on the origin chain"},"contractAddress":{"type":"string"},"id":{"type":"string"},"originChain":{"type":"string"},"ownerAddress":{"type":"string"},"receiptIndex":{"type":"string","title":"index of the transaction receipt in the block"},"receiptsRoot":{"type":"string","title":"merkle root of receipts trie for transaction verification"},"recipient":{"type":"string"},"status":{"$ref":"#/definitions/inference.inference.BridgeTransactionStatus"},"timestamp":{"type":"string","format":"int64"},"validationCount":{"type":"integer","format":"int64"},"validators":{"type":"array","items":{"type":"string"}}}},"inference.inference.BridgeTransactionStatus":{"type":"string","default":"BRIDGE_PENDING","enum":["BRIDGE_PENDING","BRIDGE_COMPLETED"]},"inference.inference.CollateralParams":{"description":"CollateralParams defines the parameters for collateral slashing.","type":"object","properties":{"base_weight_ratio":{"title":"BaseWeightRatio is the portion of potential weight granted unconditionally (0-1)","$ref":"#/definitions/inference.inference.Decimal"},"collateral_per_weight_unit":{"title":"CollateralPerWeightUnit is the amount of collateral required per unit of weight","$ref":"#/definitions/inference.inference.Decimal"},"downtime_missed_percentage_threshold":{"description":"downtime_missed_percentage_threshold is the missed request percentage that triggers a downtime slash.","$ref":"#/definitions/inference.inference.Decimal"},"grace_period_end_epoch":{"type":"string","format":"uint64"},"slash_fraction_downtime":{"description":"slash_fraction_downtime is the percentage of collateral to slash for downtime.","$ref":"#/definitions/inference.inference.Decimal"},"slash_fraction_invalid":{"description":"slash_fraction_invalid is the percentage of collateral to slash when a participant is marked INVALID.","$ref":"#/definitions/inference.inference.Decimal"}}},"inference.inference.CurrentEpochStats":{"type":"object","properties":{"burned_coins":{"type":"string","format":"uint64"},"earned_coins":{"type":"string","format":"uint64"},"inference_count":{"type":"string","format":"uint64"},"invalidated_inferences":{"type":"string","format":"uint64"},"missed_requests":{"type":"string","format":"uint64"},"rewarded_coins":{"type":"string","format":"uint64"},"validated_inferences":{"type":"string","format":"uint64"}}},"inference.inference.Decimal":{"type":"object","properties":{"exponent":{"type":"integer","format":"int32"},"value":{"type":"string","format":"int64"}}},"inference.inference.DeveloperStatsByEpoch":{"type":"object","properties":{"epoch_id":{"type":"string","format":"uint64"},"inference_ids":{"type":"array","items":{"type":"string"}}}},"inference.inference.DeveloperStatsByTime":{"type":"object","properties":{"epoch_id":{"type":"string","format":"uint64"},"inference":{"$ref":"#/definitions/inference.inference.InferenceStats"},"timestamp":{"type":"string","format":"int64"}}},"inference.inference.DynamicPricingParams":{"description":"DynamicPricingParams defines the parameters for the dynamic pricing system.","type":"object","properties":{"base_per_token_price":{"type":"string","format":"uint64","title":"base_per_token_price is the initial per-token price after grace period (in native token units)"},"grace_period_end_epoch":{"type":"string","format":"uint64","title":"grace_period_end_epoch is the epoch when free inference period ends"},"grace_period_per_token_price":{"type":"string","format":"uint64","title":"grace_period_per_token_price is the per-token price during grace period (default 0 for free)"},"min_per_token_price":{"type":"string","format":"uint64","title":"min_per_token_price is the minimum per-token price floor to prevent zero pricing (in native token units)"},"price_elasticity":{"title":"price_elasticity controls price adjustment magnitude - determines maximum change at maximum utilization deviation (0-1)","$ref":"#/definitions/inference.inference.Decimal"},"stability_zone_lower_bound":{"title":"stability_zone_lower_bound is the lower bound of the stability zone where price doesn't change (0-1)","$ref":"#/definitions/inference.inference.Decimal"},"stability_zone_upper_bound":{"title":"stability_zone_upper_bound is the upper bound of the stability zone where price doesn't change (0-1)","$ref":"#/definitions/inference.inference.Decimal"},"utilization_window_duration":{"type":"string","format":"uint64","title":"utilization_window_duration is the time window in seconds for utilization calculation"}}},"inference.inference.Epoch":{"type":"object","properties":{"index":{"type":"string","format":"uint64"},"poc_start_block_height":{"type":"string","format":"int64"}}},"inference.inference.EpochGroupData":{"description":"These top two values are uint64s because they are IDs, not numerical values.","type":"object","properties":{"effective_block_height":{"type":"string","format":"int64"},"epoch_group_id":{"type":"string","format":"uint64"},"epoch_id":{"type":"string","format":"uint64"},"epoch_policy":{"type":"string"},"last_block_height":{"type":"string","format":"int64"},"member_seed_signatures":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.SeedSignature"}},"model_id":{"type":"string","title":"If model_id is empty, this is the parent EpochGroup\nIf model_id is set, this is a sub EpochGroup for that specific model"},"model_snapshot":{"$ref":"#/definitions/inference.inference.Model"},"number_of_requests":{"type":"string","format":"int64"},"poc_start_block_height":{"type":"string","format":"uint64"},"previous_epoch_requests":{"type":"string","format":"int64"},"sub_group_models":{"type":"array","title":"List of model IDs for sub EpochGroups, only used in parent EpochGroup","items":{"type":"string"}},"total_throughput":{"type":"string","format":"int64"},"total_weight":{"type":"string","format":"int64"},"unit_of_compute_price":{"type":"string","format":"int64"},"validation_params":{"$ref":"#/definitions/inference.inference.ValidationParams"},"validation_weights":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ValidationWeight"}}}},"inference.inference.EpochGroupValidations":{"type":"object","properties":{"participant":{"type":"string"},"poc_start_block_height":{"type":"string","format":"uint64"},"validated_inferences":{"type":"array","items":{"type":"string"}}}},"inference.inference.EpochInfo":{"type":"object","properties":{"last_epoch":{"type":"integer","format":"int32"},"last_epoch_block_height":{"type":"string","format":"int64"},"last_epoch_is_finished":{"type":"boolean"},"last_epoch_timestamp":{"type":"string","format":"int64","title":"Equals to the block time"}}},"inference.inference.EpochParams":{"type":"object","properties":{"default_unit_of_compute_price":{"type":"string","format":"int64"},"epoch_length":{"type":"string","format":"int64"},"epoch_multiplier":{"type":"string","format":"int64"},"epoch_shift":{"type":"string","format":"int64"},"inference_pruning_epoch_threshold":{"type":"string","format":"uint64"},"inference_validation_cutoff":{"type":"string","format":"int64"},"poc_exchange_duration":{"type":"string","format":"int64"},"poc_stage_duration":{"type":"string","format":"int64"},"poc_validation_delay":{"type":"string","format":"int64"},"poc_validation_duration":{"type":"string","format":"int64"},"set_new_validators_delay":{"type":"string","format":"int64"}}},"inference.inference.EpochPerformanceSummary":{"type":"object","properties":{"burned_coins":{"type":"string","format":"uint64"},"claimed":{"type":"boolean"},"earned_coins":{"type":"string","format":"uint64"},"epoch_start_height":{"type":"string","format":"uint64"},"inference_count":{"type":"string","format":"uint64"},"invalidated_inferences":{"type":"string","format":"uint64"},"missed_requests":{"type":"string","format":"uint64"},"participant_id":{"type":"string"},"rewarded_coins":{"type":"string","format":"uint64"},"validated_inferences":{"type":"string","format":"uint64"}}},"inference.inference.GetAliveNodesRequest":{"type":"object","properties":{"outer_step":{"type":"integer","format":"int32"},"run_id":{"type":"string","format":"uint64"}}},"inference.inference.GetAliveNodesResponse":{"type":"object","properties":{"alive_nodes":{"type":"array","items":{"type":"string"}}}},"inference.inference.GetBarrierStatusRequest":{"type":"object","properties":{"barrier_id":{"type":"string"},"outer_step":{"type":"integer","format":"int32"},"run_id":{"type":"string","format":"uint64"}}},"inference.inference.GetBarrierStatusResponse":{"type":"object","properties":{"alive_nodes":{"type":"array","items":{"type":"string"}},"all_ready":{"type":"boolean"},"not_ready":{"type":"array","items":{"type":"string"}}}},"inference.inference.GetStoreRecordRequest":{"type":"object","properties":{"key":{"type":"string"},"run_id":{"type":"string","format":"uint64"}}},"inference.inference.GetStoreRecordResponse":{"type":"object","properties":{"record":{"$ref":"#/definitions/inference.inference.Record"}}},"inference.inference.Grantee":{"type":"object","properties":{"address":{"type":"string"},"pub_key":{"type":"string"}}},"inference.inference.Hardware":{"type":"object","properties":{"count":{"type":"integer","format":"int64"},"type":{"type":"string"}}},"inference.inference.HardwareNode":{"type":"object","properties":{"hardware":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Hardware"}},"host":{"type":"string"},"local_id":{"type":"string"},"models":{"type":"array","items":{"type":"string"}},"port":{"type":"string"},"status":{"$ref":"#/definitions/inference.inference.HardwareNodeStatus"}}},"inference.inference.HardwareNodeStatus":{"type":"string","default":"UNKNOWN","enum":["UNKNOWN","INFERENCE","POC","TRAINING","STOPPED","FAILED"]},"inference.inference.HardwareNodes":{"type":"object","title":"IF YOU CHANGE ANY OF THESE STRUCTURES BE SURE TO CHANGE InferenceNode struct in decentralized-api!!!","properties":{"hardware_nodes":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.HardwareNode"}},"participant":{"type":"string"}}},"inference.inference.HeartbeatRequest":{"type":"object","properties":{"epoch":{"type":"integer","format":"int32"},"inner_step":{"type":"integer","format":"int32"},"local_rank":{"type":"integer","format":"int32"},"node_id":{"type":"string"},"outer_step":{"type":"integer","format":"int32"},"run_id":{"type":"string","format":"uint64"},"timestamp":{"type":"number","format":"double"}}},"inference.inference.HeartbeatResponse":{"type":"object","properties":{"status":{"$ref":"#/definitions/inference.inference.HeartbeatStatusEnum"}}},"inference.inference.HeartbeatStatusEnum":{"type":"string","default":"HEARTBEAT_OK","enum":["HEARTBEAT_OK","HEARTBEAT_ERROR"]},"inference.inference.Inference":{"type":"object","properties":{"actual_cost":{"type":"string","format":"int64"},"assigned_to":{"type":"string"},"completion_token_count":{"type":"string","format":"uint64"},"end_block_height":{"type":"string","format":"int64"},"end_block_timestamp":{"type":"string","format":"int64"},"epoch_group_id":{"type":"string","format":"uint64","title":"DEPRECATED: now use epoch_poc_start_block_height. Renaming"},"epoch_id":{"type":"string","format":"uint64"},"epoch_poc_start_block_height":{"type":"string","format":"uint64"},"escrow_amount":{"type":"string","format":"int64"},"executed_by":{"type":"string"},"execution_signature":{"type":"string"},"index":{"type":"string"},"inference_id":{"type":"string"},"max_tokens":{"type":"string","format":"uint64"},"model":{"type":"string"},"node_version":{"type":"string"},"original_prompt":{"type":"string"},"per_token_price":{"type":"string","format":"uint64","title":"Locked-in per-token price when inference started (for dynamic pricing)"},"prompt_hash":{"type":"string"},"prompt_payload":{"type":"string"},"prompt_token_count":{"type":"string","format":"uint64"},"proposal_details":{"$ref":"#/definitions/inference.inference.ProposalDetails"},"request_timestamp":{"type":"string","format":"int64"},"requested_by":{"type":"string"},"response_hash":{"type":"string"},"response_payload":{"type":"string"},"start_block_height":{"type":"string","format":"int64"},"start_block_timestamp":{"type":"string","format":"int64"},"status":{"$ref":"#/definitions/inference.inference.InferenceStatus"},"transfer_signature":{"type":"string"},"transferred_by":{"type":"string"},"validated_by":{"type":"array","items":{"type":"string"}}}},"inference.inference.InferenceStats":{"type":"object","properties":{"actual_cost_in_coins":{"type":"string","format":"int64"},"epoch_id":{"type":"string","format":"uint64"},"inference_id":{"type":"string"},"model":{"type":"string"},"status":{"$ref":"#/definitions/inference.inference.InferenceStatus"},"total_token_count":{"type":"string","format":"uint64"}}},"inference.inference.InferenceStatus":{"type":"string","default":"STARTED","enum":["STARTED","FINISHED","VALIDATED","INVALIDATED","VOTING","EXPIRED"]},"inference.inference.InferenceTimeout":{"type":"object","properties":{"expiration_height":{"type":"string","format":"uint64"},"inference_id":{"type":"string"}}},"inference.inference.InferenceValidationDetails":{"type":"object","properties":{"created_at_block_height":{"type":"string","format":"int64","title":"Should be the same as block_finished for the inference"},"epoch_id":{"type":"string","format":"uint64","title":"The ID of the epoch!"},"executor_id":{"type":"string"},"executor_power":{"type":"string","format":"uint64"},"executor_reputation":{"type":"integer","format":"int32"},"inference_id":{"type":"string"},"model":{"type":"string"},"total_power":{"type":"string","format":"uint64"},"traffic_basis":{"type":"string","format":"uint64"}}},"inference.inference.JoinTrainingRequest":{"type":"object","properties":{"node_id":{"type":"string"},"outer_step":{"type":"integer","format":"int32"},"run_id":{"type":"string","format":"uint64"}}},"inference.inference.MLNodeInfo":{"type":"object","properties":{"node_id":{"type":"string"},"poc_weight":{"type":"string","format":"int64"},"throughput":{"type":"string","format":"int64"},"timeslot_allocation":{"type":"array","items":{"type":"boolean"}}}},"inference.inference.MLNodeTrainStatus":{"type":"object","properties":{"active_nodes":{"type":"array","items":{"type":"string"}},"node_id":{"type":"string"},"outer_step":{"type":"integer","format":"int32"},"rank":{"type":"integer","format":"int32"},"status":{"$ref":"#/definitions/inference.inference.MLNodeTrainStatusEnum"}}},"inference.inference.MLNodeTrainStatusEnum":{"type":"string","default":"OK","enum":["OK","ERROR","JOINED","NOT_JOINED"]},"inference.inference.Model":{"type":"object","properties":{"coins_per_input_token":{"type":"string","format":"uint64"},"coins_per_output_token":{"type":"string","format":"uint64"},"context_window":{"type":"string","format":"uint64"},"hf_commit":{"type":"string"},"hf_repo":{"type":"string"},"id":{"type":"string"},"model_args":{"type":"array","items":{"type":"string"}},"proposed_by":{"type":"string"},"quantization":{"type":"string"},"throughput_per_nonce":{"type":"string","format":"uint64"},"units_of_compute_per_token":{"type":"string","format":"uint64"},"v_ram":{"type":"string","format":"uint64"},"validation_threshold":{"$ref":"#/definitions/inference.inference.Decimal"}}},"inference.inference.ModelCapacity":{"type":"object","properties":{"capacity":{"type":"string","format":"uint64"},"model_id":{"type":"string"}}},"inference.inference.ModelPrice":{"type":"object","properties":{"model_id":{"type":"string"},"price":{"type":"string","format":"uint64"}}},"inference.inference.ModelStats":{"type":"object","properties":{"ai_tokens":{"type":"string","format":"int64"},"inferences":{"type":"integer","format":"int32"},"model":{"type":"string"}}},"inference.inference.MsgAssignTrainingTask":{"type":"object","properties":{"assignees":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTaskAssignee"}},"creator":{"type":"string"},"task_id":{"type":"string","format":"uint64"}}},"inference.inference.MsgAssignTrainingTaskResponse":{"type":"object"},"inference.inference.MsgBridgeExchange":{"type":"object","properties":{"amount":{"type":"string","title":"amount of tokens being bridged"},"blockNumber":{"type":"string","title":"block number where the transaction occurred"},"contractAddress":{"type":"string","title":"original chain smart contract address"},"originChain":{"type":"string","title":"e.g., \"ethereum\""},"ownerAddress":{"type":"string","title":"token owner's address on the origin chain"},"ownerPubKey":{"type":"string","title":"public key of the token owner"},"receiptIndex":{"type":"string","title":"index of the transaction receipt in the block"},"receiptsRoot":{"type":"string","title":"merkle root of receipts trie for transaction verification"},"validator":{"type":"string"}}},"inference.inference.MsgBridgeExchangeResponse":{"type":"object","properties":{"id":{"type":"string","title":"Unique bridge transaction ID (originChain_blockNumber_receiptIndex)"}}},"inference.inference.MsgClaimRewards":{"type":"object","properties":{"creator":{"type":"string"},"poc_start_height":{"type":"string","format":"uint64"},"seed":{"type":"string","format":"int64"}}},"inference.inference.MsgClaimRewardsResponse":{"type":"object","properties":{"amount":{"type":"string","format":"uint64"},"result":{"type":"string"}}},"inference.inference.MsgClaimTrainingTaskForAssignment":{"type":"object","properties":{"creator":{"type":"string"},"task_id":{"type":"string","format":"uint64"}}},"inference.inference.MsgClaimTrainingTaskForAssignmentResponse":{"type":"object"},"inference.inference.MsgCreateDummyTrainingTask":{"type":"object","properties":{"creator":{"type":"string"},"task":{"$ref":"#/definitions/inference.inference.TrainingTask"}}},"inference.inference.MsgCreateDummyTrainingTaskResponse":{"type":"object","properties":{"task":{"$ref":"#/definitions/inference.inference.TrainingTask"}}},"inference.inference.MsgCreatePartialUpgrade":{"type":"object","properties":{"apiBinariesJson":{"type":"string"},"authority":{"type":"string"},"height":{"type":"string","format":"uint64"},"nodeVersion":{"type":"string"}}},"inference.inference.MsgCreatePartialUpgradeResponse":{"type":"object"},"inference.inference.MsgCreateTrainingTask":{"type":"object","properties":{"config":{"$ref":"#/definitions/inference.inference.TrainingConfig"},"creator":{"type":"string"},"hardware_resources":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingHardwareResources"}}}},"inference.inference.MsgCreateTrainingTaskResponse":{"type":"object","properties":{"task":{"$ref":"#/definitions/inference.inference.TrainingTask"}}},"inference.inference.MsgFinishInference":{"type":"object","properties":{"completion_token_count":{"type":"string","format":"uint64"},"creator":{"type":"string"},"executed_by":{"type":"string"},"executor_signature":{"type":"string"},"inference_id":{"type":"string"},"model":{"type":"string"},"original_prompt":{"type":"string"},"prompt_token_count":{"type":"string","format":"uint64"},"request_timestamp":{"type":"string","format":"int64"},"requested_by":{"type":"string"},"response_hash":{"type":"string"},"response_payload":{"type":"string"},"transfer_signature":{"type":"string"},"transferred_by":{"type":"string"}}},"inference.inference.MsgFinishInferenceResponse":{"type":"object","properties":{"inference_index":{"type":"string"}}},"inference.inference.MsgInvalidateInference":{"type":"object","properties":{"creator":{"type":"string"},"inference_id":{"type":"string"}}},"inference.inference.MsgInvalidateInferenceResponse":{"type":"object"},"inference.inference.MsgJoinTraining":{"type":"object","properties":{"creator":{"type":"string"},"req":{"$ref":"#/definitions/inference.inference.JoinTrainingRequest"}}},"inference.inference.MsgJoinTrainingResponse":{"type":"object","properties":{"status":{"$ref":"#/definitions/inference.inference.MLNodeTrainStatus"}}},"inference.inference.MsgJoinTrainingStatus":{"type":"object","properties":{"creator":{"type":"string"},"req":{"$ref":"#/definitions/inference.inference.JoinTrainingRequest"}}},"inference.inference.MsgJoinTrainingStatusResponse":{"type":"object","properties":{"status":{"$ref":"#/definitions/inference.inference.MLNodeTrainStatus"}}},"inference.inference.MsgRegisterModel":{"type":"object","properties":{"authority":{"type":"string"},"hf_commit":{"type":"string"},"hf_repo":{"type":"string"},"id":{"type":"string"},"model_args":{"type":"array","items":{"type":"string"}},"proposed_by":{"type":"string"},"throughput_per_nonce":{"type":"string","format":"uint64"},"units_of_compute_per_token":{"type":"string","format":"uint64"},"v_ram":{"type":"string","format":"uint64"},"validation_threshold":{"$ref":"#/definitions/inference.inference.Decimal"}}},"inference.inference.MsgRegisterModelResponse":{"type":"object"},"inference.inference.MsgRevalidateInference":{"type":"object","properties":{"creator":{"type":"string"},"inference_id":{"type":"string"}}},"inference.inference.MsgRevalidateInferenceResponse":{"type":"object"},"inference.inference.MsgSetBarrier":{"type":"object","properties":{"creator":{"type":"string"},"req":{"$ref":"#/definitions/inference.inference.SetBarrierRequest"}}},"inference.inference.MsgSetBarrierResponse":{"type":"object","properties":{"resp":{"$ref":"#/definitions/inference.inference.SetBarrierResponse"}}},"inference.inference.MsgStartInference":{"type":"object","properties":{"assigned_to":{"type":"string"},"creator":{"type":"string"},"inference_id":{"type":"string"},"max_tokens":{"type":"string","format":"uint64"},"model":{"type":"string"},"node_version":{"type":"string"},"original_prompt":{"type":"string"},"prompt_hash":{"type":"string"},"prompt_payload":{"type":"string"},"prompt_token_count":{"type":"string","format":"uint64"},"request_timestamp":{"type":"string","format":"int64"},"requested_by":{"type":"string"},"transfer_signature":{"type":"string"}}},"inference.inference.MsgStartInferenceResponse":{"type":"object","properties":{"inference_index":{"type":"string"}}},"inference.inference.MsgSubmitHardwareDiff":{"type":"object","properties":{"creator":{"type":"string"},"newOrModified":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.HardwareNode"}},"removed":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.HardwareNode"}}}},"inference.inference.MsgSubmitHardwareDiffResponse":{"type":"object"},"inference.inference.MsgSubmitNewParticipant":{"type":"object","properties":{"creator":{"type":"string"},"url":{"type":"string"},"validator_key":{"type":"string"},"worker_key":{"type":"string"}}},"inference.inference.MsgSubmitNewParticipantResponse":{"type":"object","properties":{"participant_index":{"type":"string"},"status":{"type":"string"}}},"inference.inference.MsgSubmitNewUnfundedParticipant":{"type":"object","properties":{"address":{"type":"string"},"creator":{"type":"string"},"pub_key":{"type":"string"},"url":{"type":"string"},"validator_key":{"type":"string"},"worker_key":{"type":"string"}}},"inference.inference.MsgSubmitNewUnfundedParticipantResponse":{"type":"object"},"inference.inference.MsgSubmitPocBatch":{"type":"object","properties":{"batch_id":{"type":"string"},"creator":{"type":"string"},"dist":{"type":"array","items":{"type":"number","format":"double"}},"node_id":{"type":"string"},"nonces":{"type":"array","items":{"type":"string","format":"int64"}},"poc_stage_start_block_height":{"type":"string","format":"int64"}}},"inference.inference.MsgSubmitPocBatchResponse":{"type":"object"},"inference.inference.MsgSubmitPocValidation":{"type":"object","properties":{"creator":{"type":"string"},"dist":{"type":"array","items":{"type":"number","format":"double"}},"fraud_detected":{"type":"boolean"},"fraud_threshold":{"type":"number","format":"double"},"n_invalid":{"type":"string","format":"int64"},"nonces":{"type":"array","items":{"type":"string","format":"int64"}},"participant_address":{"type":"string"},"poc_stage_start_block_height":{"type":"string","format":"int64"},"probability_honest":{"type":"number","format":"double"},"r_target":{"type":"number","format":"double"},"received_dist":{"type":"array","items":{"type":"number","format":"double"}}}},"inference.inference.MsgSubmitPocValidationResponse":{"type":"object"},"inference.inference.MsgSubmitSeed":{"type":"object","properties":{"block_height":{"type":"string","format":"int64"},"creator":{"type":"string"},"signature":{"type":"string"}}},"inference.inference.MsgSubmitSeedResponse":{"type":"object"},"inference.inference.MsgSubmitTrainingKvRecord":{"type":"object","properties":{"creator":{"type":"string"},"key":{"type":"string"},"participant":{"type":"string"},"taskId":{"type":"string","format":"uint64"},"value":{"type":"string"}}},"inference.inference.MsgSubmitTrainingKvRecordResponse":{"type":"object"},"inference.inference.MsgSubmitUnitOfComputePriceProposal":{"type":"object","properties":{"creator":{"type":"string"},"price":{"type":"string","format":"uint64"}}},"inference.inference.MsgSubmitUnitOfComputePriceProposalResponse":{"type":"object"},"inference.inference.MsgTrainingHeartbeat":{"type":"object","properties":{"creator":{"type":"string"},"req":{"$ref":"#/definitions/inference.inference.HeartbeatRequest"}}},"inference.inference.MsgTrainingHeartbeatResponse":{"type":"object","properties":{"resp":{"$ref":"#/definitions/inference.inference.HeartbeatResponse"}}},"inference.inference.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/inference.inference.Params"}}},"inference.inference.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.inference.MsgValidation":{"type":"object","properties":{"creator":{"type":"string"},"id":{"type":"string"},"inference_id":{"type":"string"},"response_hash":{"type":"string"},"response_payload":{"type":"string"},"revalidation":{"type":"boolean"},"value":{"type":"number","format":"double"}}},"inference.inference.MsgValidationResponse":{"type":"object"},"inference.inference.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"bandwidth_limits_params":{"$ref":"#/definitions/inference.inference.BandwidthLimitsParams"},"bitcoin_reward_params":{"$ref":"#/definitions/inference.inference.BitcoinRewardParams"},"collateral_params":{"$ref":"#/definitions/inference.inference.CollateralParams"},"dynamic_pricing_params":{"$ref":"#/definitions/inference.inference.DynamicPricingParams"},"epoch_params":{"$ref":"#/definitions/inference.inference.EpochParams"},"poc_params":{"$ref":"#/definitions/inference.inference.PocParams"},"tokenomics_params":{"$ref":"#/definitions/inference.inference.TokenomicsParams"},"validation_params":{"$ref":"#/definitions/inference.inference.ValidationParams"}}},"inference.inference.PartialUpgrade":{"type":"object","properties":{"api_binaries_json":{"type":"string"},"height":{"type":"string","format":"uint64"},"name":{"type":"string"},"node_version":{"type":"string"}}},"inference.inference.Participant":{"type":"object","properties":{"address":{"type":"string"},"coin_balance":{"type":"string","format":"int64"},"consecutive_invalid_inferences":{"type":"string","format":"int64"},"current_epoch_stats":{"$ref":"#/definitions/inference.inference.CurrentEpochStats"},"epochs_completed":{"type":"integer","format":"int64"},"index":{"type":"string"},"inference_url":{"type":"string"},"join_height":{"type":"string","format":"int64"},"join_time":{"type":"string","format":"int64"},"last_inference_time":{"type":"string","format":"int64"},"status":{"$ref":"#/definitions/inference.inference.ParticipantStatus"},"validator_key":{"type":"string"},"weight":{"type":"integer","format":"int32"},"worker_public_key":{"type":"string"}}},"inference.inference.ParticipantCurrentStats":{"type":"object","properties":{"participant_id":{"type":"string"},"reputation":{"type":"integer","format":"int32"},"weight":{"type":"string","format":"uint64"}}},"inference.inference.ParticipantFullStats":{"type":"object","properties":{"account_address":{"type":"string"},"earned_coins_current_epoch":{"type":"string","format":"uint64"},"epochs_completed":{"type":"integer","format":"int64"},"operator_address":{"type":"string"},"reputation":{"type":"integer","format":"int32"},"rewarded_coins_latest_epoch":{"type":"string","format":"uint64"}}},"inference.inference.ParticipantStatus":{"type":"string","default":"UNSPECIFIED","enum":["UNSPECIFIED","ACTIVE","INACTIVE","INVALID","RAMPING"]},"inference.inference.PoCBatch":{"type":"object","properties":{"batch_id":{"type":"string"},"dist":{"type":"array","items":{"type":"number","format":"double"}},"node_id":{"type":"string"},"nonces":{"type":"array","items":{"type":"string","format":"int64"}},"participant_address":{"type":"string"},"poc_stage_start_block_height":{"type":"string","format":"int64"},"received_at_block_height":{"type":"string","format":"int64"}}},"inference.inference.PoCBatchesWithParticipants":{"type":"object","properties":{"hex_pub_key":{"type":"string"},"participant":{"type":"string"},"poc_batch":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.PoCBatch"}},"pub_key":{"type":"string"}}},"inference.inference.PocParams":{"type":"object","properties":{"default_difficulty":{"type":"integer","format":"int32"},"poc_data_pruning_epoch_threshold":{"type":"string","format":"uint64"},"validation_sample_size":{"type":"integer","format":"int32"}}},"inference.inference.ProposalDetails":{"type":"object","properties":{"invalidate_policy_id":{"type":"string","format":"uint64"},"policy_address":{"type":"string"},"re_validate_policy_id":{"type":"string","format":"uint64"}}},"inference.inference.QueryAllBridgeTransactionsResponse":{"type":"object","properties":{"bridgeTransactions":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.BridgeTransaction"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllEpochGroupDataResponse":{"type":"object","properties":{"epoch_group_data":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.EpochGroupData"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllEpochGroupValidationsResponse":{"type":"object","properties":{"epoch_group_validations":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.EpochGroupValidations"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllEpochPerformanceSummaryResponse":{"type":"object","properties":{"epochPerformanceSummary":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.EpochPerformanceSummary"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllInferenceResponse":{"type":"object","properties":{"inference":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Inference"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllInferenceTimeoutResponse":{"type":"object","properties":{"inference_timeout":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.InferenceTimeout"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllInferenceValidationDetailsResponse":{"type":"object","properties":{"inferenceValidationDetails":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.InferenceValidationDetails"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.inference.QueryAllPartialUpgradeResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"partialUpgrade":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.PartialUpgrade"}}}},"inference.inference.QueryAllParticipantResponse":{"type":"object","properties":{"block_height":{"type":"string","format":"int64"},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"participant":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Participant"}}}},"inference.inference.QueryAllSettleAmountResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"settle_amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.SettleAmount"}}}},"inference.inference.QueryAllTopMinerResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"top_miner":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TopMiner"}}}},"inference.inference.QueryCountAllParticipantsResponse":{"type":"object","properties":{"total":{"type":"string","format":"int64"}}},"inference.inference.QueryCountPoCbatchesAtHeightResponse":{"type":"object","properties":{"count":{"type":"string","format":"uint64"}}},"inference.inference.QueryCountPoCvalidationsAtHeightResponse":{"type":"object","properties":{"count":{"type":"string","format":"uint64"}}},"inference.inference.QueryCurrentEpochGroupDataResponse":{"type":"object","properties":{"epoch_group_data":{"$ref":"#/definitions/inference.inference.EpochGroupData"}}},"inference.inference.QueryDebugStatsResponse":{"type":"object","properties":{"stats_by_epoch":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.QueryDebugStatsResponse.TemporaryEpochStat"}},"stats_by_time":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.QueryDebugStatsResponse.TemporaryTimeStat"}}}},"inference.inference.QueryDebugStatsResponse.TemporaryEpochStat":{"type":"object","properties":{"developer":{"type":"string"},"stats":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.DeveloperStatsByEpoch"}}}},"inference.inference.QueryDebugStatsResponse.TemporaryTimeStat":{"type":"object","properties":{"developer":{"type":"string"},"stats":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.DeveloperStatsByTime"}}}},"inference.inference.QueryEpochInfoResponse":{"type":"object","properties":{"block_height":{"type":"string","format":"int64"},"latest_epoch":{"$ref":"#/definitions/inference.inference.Epoch"},"params":{"$ref":"#/definitions/inference.inference.Params"}}},"inference.inference.QueryGetAllModelCapacitiesResponse":{"type":"object","properties":{"model_capacities":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ModelCapacity"}}}},"inference.inference.QueryGetAllModelPerTokenPricesResponse":{"type":"object","properties":{"model_prices":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ModelPrice"}}}},"inference.inference.QueryGetAllParticipantCurrentStatsResponse":{"type":"object","properties":{"block_height":{"type":"string","format":"int64"},"epoch_id":{"type":"string","format":"int64"},"participant_current_stats":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ParticipantCurrentStats"}}}},"inference.inference.QueryGetBridgeTransactionResponse":{"type":"object","properties":{"bridgeTransaction":{"$ref":"#/definitions/inference.inference.BridgeTransaction"}}},"inference.inference.QueryGetCurrentEpochResponse":{"type":"object","title":"DEPRECATED: ambiguous query, re-check what it expect as epoch: id, poc_start_block_height, or epoch_group_id","properties":{"epoch":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetEpochGroupDataResponse":{"type":"object","properties":{"epoch_group_data":{"$ref":"#/definitions/inference.inference.EpochGroupData"}}},"inference.inference.QueryGetEpochGroupValidationsResponse":{"type":"object","properties":{"epoch_group_validations":{"$ref":"#/definitions/inference.inference.EpochGroupValidations"}}},"inference.inference.QueryGetEpochPerformanceSummaryResponse":{"type":"object","properties":{"epochPerformanceSummary":{"$ref":"#/definitions/inference.inference.EpochPerformanceSummary"}}},"inference.inference.QueryGetInferenceResponse":{"type":"object","properties":{"inference":{"$ref":"#/definitions/inference.inference.Inference"}}},"inference.inference.QueryGetInferenceTimeoutResponse":{"type":"object","properties":{"inference_timeout":{"$ref":"#/definitions/inference.inference.InferenceTimeout"}}},"inference.inference.QueryGetInferenceValidationDetailsResponse":{"type":"object","properties":{"inferenceValidationDetails":{"$ref":"#/definitions/inference.inference.InferenceValidationDetails"}}},"inference.inference.QueryGetInferenceValidationParametersResponse":{"type":"object","properties":{"current_height":{"type":"string","format":"uint64"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.InferenceValidationDetails"}},"parameters":{"$ref":"#/definitions/inference.inference.ValidationParams"},"validator_power":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetMinimumValidationAverageResponse":{"type":"object","properties":{"block_height":{"type":"string","format":"uint64"},"minimum_validation_average":{"type":"string"},"traffic_basis":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetModelCapacityResponse":{"type":"object","properties":{"capacity":{"type":"string","format":"uint64"},"found":{"type":"boolean"}}},"inference.inference.QueryGetModelPerTokenPriceResponse":{"type":"object","properties":{"found":{"type":"boolean"},"price":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetPartialUpgradeResponse":{"type":"object","properties":{"partialUpgrade":{"$ref":"#/definitions/inference.inference.PartialUpgrade"}}},"inference.inference.QueryGetParticipantCurrentStatsResponse":{"type":"object","properties":{"reputation":{"type":"integer","format":"int32"},"weight":{"type":"string","format":"uint64"}}},"inference.inference.QueryGetParticipantResponse":{"type":"object","properties":{"participant":{"$ref":"#/definitions/inference.inference.Participant"}}},"inference.inference.QueryGetRandomExecutorResponse":{"type":"object","properties":{"executor":{"$ref":"#/definitions/inference.inference.Participant"}}},"inference.inference.QueryGetSettleAmountResponse":{"type":"object","properties":{"settle_amount":{"$ref":"#/definitions/inference.inference.SettleAmount"}}},"inference.inference.QueryGetTokenomicsDataResponse":{"type":"object","properties":{"tokenomics_data":{"$ref":"#/definitions/inference.inference.TokenomicsData"}}},"inference.inference.QueryGetTopMinerResponse":{"type":"object","properties":{"top_miner":{"$ref":"#/definitions/inference.inference.TopMiner"}}},"inference.inference.QueryGetUnitOfComputePriceProposalResponse":{"type":"object","properties":{"default":{"type":"string","format":"uint64"},"proposal":{"$ref":"#/definitions/inference.inference.UnitOfComputePriceProposal"}}},"inference.inference.QueryGranteesByMessageTypeResponse":{"type":"object","properties":{"grantees":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Grantee"}}}},"inference.inference.QueryHardwareNodesAllResponse":{"type":"object","properties":{"nodes":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.HardwareNodes"}}}},"inference.inference.QueryHardwareNodesResponse":{"type":"object","properties":{"nodes":{"$ref":"#/definitions/inference.inference.HardwareNodes"}}},"inference.inference.QueryInProgressTrainingTasksResponse":{"type":"object","properties":{"tasks":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTask"}}}},"inference.inference.QueryInferenceParticipantResponse":{"type":"object","properties":{"balance":{"type":"string","format":"int64"},"pubkey":{"type":"string"}}},"inference.inference.QueryInferencesAndTokensStatsByModelsResponse":{"type":"object","properties":{"stats_models":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ModelStats"}}}},"inference.inference.QueryInferencesAndTokensStatsResponse":{"type":"object","properties":{"actual_inferences_cost":{"type":"string","format":"int64"},"ai_tokens":{"type":"string","format":"int64"},"inferences":{"type":"integer","format":"int32"}}},"inference.inference.QueryListTrainingKvRecordKeysResponse":{"type":"object","properties":{"keys":{"type":"array","items":{"type":"string"}}}},"inference.inference.QueryModelsAllResponse":{"type":"object","properties":{"model":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.Model"}}}},"inference.inference.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.inference.Params"}}},"inference.inference.QueryParticipantsFullStatsResponse":{"type":"object","properties":{"participants_stats":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.ParticipantFullStats"}}}},"inference.inference.QueryPocBatchesForStageResponse":{"type":"object","properties":{"poc_batch":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.PoCBatchesWithParticipants"}}}},"inference.inference.QueryQueuedTrainingTasksResponse":{"type":"object","properties":{"tasks":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTask"}}}},"inference.inference.QueryStatsByTimePeriodByDeveloperResponse":{"type":"object","properties":{"stats":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.DeveloperStatsByTime"}}}},"inference.inference.QueryTrainingAliveNodesResponse":{"type":"object","properties":{"resp":{"$ref":"#/definitions/inference.inference.GetAliveNodesResponse"}}},"inference.inference.QueryTrainingBarrierResponse":{"type":"object","properties":{"resp":{"$ref":"#/definitions/inference.inference.GetBarrierStatusResponse"}}},"inference.inference.QueryTrainingKvRecordResponse":{"type":"object","properties":{"record":{"$ref":"#/definitions/inference.inference.TrainingTaskKVRecord"}}},"inference.inference.QueryTrainingTaskAllResponse":{"type":"object","properties":{"tasks":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTask"}}}},"inference.inference.QueryTrainingTaskResponse":{"type":"object","properties":{"task":{"$ref":"#/definitions/inference.inference.TrainingTask"}}},"inference.inference.Record":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"inference.inference.SeedSignature":{"type":"object","properties":{"member_address":{"type":"string"},"signature":{"type":"string"}}},"inference.inference.SetBarrierRequest":{"type":"object","properties":{"barrier_id":{"type":"string"},"node_id":{"type":"string"},"outer_step":{"type":"integer","format":"int32"},"run_id":{"type":"string","format":"uint64"}}},"inference.inference.SetBarrierResponse":{"type":"object","properties":{"status":{"$ref":"#/definitions/inference.inference.BarrierStatusEnum"}}},"inference.inference.SetStoreRecordRequest":{"type":"object","properties":{"record":{"$ref":"#/definitions/inference.inference.Record"},"run_id":{"type":"string","format":"uint64"}}},"inference.inference.SetStoreRecordResponse":{"type":"object","properties":{"status":{"$ref":"#/definitions/inference.inference.StoreRecordStatusEnum"}}},"inference.inference.SettleAmount":{"type":"object","properties":{"participant":{"type":"string"},"poc_start_height":{"type":"string","format":"uint64"},"reward_coins":{"type":"string","format":"uint64"},"seed_signature":{"type":"string"},"work_coins":{"type":"string","format":"uint64"}}},"inference.inference.StoreListKeysRequest":{"type":"object","properties":{"run_id":{"type":"string","format":"uint64"}}},"inference.inference.StoreListKeysResponse":{"type":"object","properties":{"keys":{"type":"array","items":{"type":"string"}}}},"inference.inference.StoreRecordStatusEnum":{"type":"string","default":"SET_RECORD_OK","enum":["SET_RECORD_OK","SET_RECORD_ERROR"]},"inference.inference.TokenomicsData":{"type":"object","properties":{"top_reward_start":{"type":"string","format":"int64"},"total_burned":{"type":"string","format":"uint64"},"total_fees":{"type":"string","format":"uint64"},"total_refunded":{"type":"string","format":"uint64"},"total_subsidies":{"type":"string","format":"uint64"}}},"inference.inference.TokenomicsParams":{"type":"object","properties":{"current_subsidy_percentage":{"$ref":"#/definitions/inference.inference.Decimal"},"reward_vesting_period":{"type":"string","format":"uint64"},"subsidy_reduction_amount":{"$ref":"#/definitions/inference.inference.Decimal"},"subsidy_reduction_interval":{"$ref":"#/definitions/inference.inference.Decimal"},"top_miner_poc_qualification":{"type":"string","format":"int64"},"top_miner_vesting_period":{"type":"string","format":"uint64"},"top_reward_allowed_failure":{"$ref":"#/definitions/inference.inference.Decimal"},"work_vesting_period":{"type":"string","format":"uint64"}}},"inference.inference.TopMiner":{"type":"object","properties":{"address":{"type":"string"},"first_qualified_started":{"type":"string","format":"int64"},"initial_order":{"type":"integer","format":"int32"},"initial_power":{"type":"string","format":"int64"},"last_qualified_started":{"type":"string","format":"int64"},"last_updated_time":{"type":"string","format":"int64"},"missed_periods":{"type":"integer","format":"int32"},"missed_time":{"type":"string","format":"int64"},"qualified_periods":{"type":"integer","format":"int32"},"qualified_time":{"type":"string","format":"int64"},"rewards_paid":{"type":"array","items":{"type":"string","format":"int64"}},"rewards_paid_count":{"type":"integer","format":"int32"}}},"inference.inference.TrainingConfig":{"type":"object","properties":{"datasets":{"$ref":"#/definitions/inference.inference.TrainingDatasets"},"num_uoc_estimation_steps":{"type":"integer","format":"int64"}}},"inference.inference.TrainingDatasets":{"type":"object","properties":{"test":{"type":"string"},"train":{"type":"string"}}},"inference.inference.TrainingHardwareResources":{"type":"object","properties":{"count":{"type":"integer","format":"int64"},"type":{"type":"string"}}},"inference.inference.TrainingTask":{"type":"object","properties":{"assigned_at_block_height":{"type":"string","format":"uint64"},"assignees":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingTaskAssignee"}},"assigner":{"type":"string"},"claimed_by_assigner_at_block_height":{"type":"string","format":"uint64"},"config":{"$ref":"#/definitions/inference.inference.TrainingConfig"},"created_at_block_height":{"type":"string","format":"uint64"},"epoch":{"$ref":"#/definitions/inference.inference.EpochInfo"},"finished_at_block_height":{"type":"string","format":"uint64"},"hardware_resources":{"type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.TrainingHardwareResources"}},"id":{"type":"string","format":"uint64"},"requested_by":{"type":"string"}}},"inference.inference.TrainingTaskAssignee":{"type":"object","properties":{"node_ids":{"type":"array","items":{"type":"string"}},"participant":{"type":"string"}}},"inference.inference.TrainingTaskKVRecord":{"type":"object","properties":{"key":{"type":"string"},"participant":{"type":"string"},"task_id":{"type":"string","format":"uint64"},"value":{"type":"string"}}},"inference.inference.UnitOfComputePriceProposal":{"type":"object","properties":{"participant":{"type":"string"},"price":{"type":"string","format":"uint64"},"proposed_at_block_height":{"type":"string","format":"uint64"},"proposed_at_epoch":{"type":"string","format":"uint64","title":"Legit epoch ID"}}},"inference.inference.ValidationParams":{"type":"object","properties":{"epochs_to_max":{"type":"string","format":"int64"},"estimated_limits_per_block_kb":{"type":"string","format":"uint64","title":"Max estimated KB per block per Transfer Agent"},"expiration_blocks":{"type":"string","format":"int64"},"false_positive_rate":{"$ref":"#/definitions/inference.inference.Decimal"},"full_validation_traffic_cutoff":{"type":"string","format":"int64"},"max_validation_average":{"$ref":"#/definitions/inference.inference.Decimal"},"min_ramp_up_measurements":{"type":"integer","format":"int32"},"min_validation_average":{"$ref":"#/definitions/inference.inference.Decimal"},"min_validation_halfway":{"$ref":"#/definitions/inference.inference.Decimal"},"min_validation_traffic_cutoff":{"type":"string","format":"int64"},"miss_percentage_cutoff":{"$ref":"#/definitions/inference.inference.Decimal"},"miss_requests_penalty":{"$ref":"#/definitions/inference.inference.Decimal"},"pass_value":{"$ref":"#/definitions/inference.inference.Decimal"},"timestamp_advance":{"type":"string","format":"int64","title":"Max time in seconds until timestamps are \"in the future\""},"timestamp_expiration":{"type":"string","format":"int64","title":"Max time in seconds until timestamps are \"too old\""}}},"inference.inference.ValidationWeight":{"type":"object","properties":{"member_address":{"type":"string"},"ml_nodes":{"description":"We may decide to move ml_nodes directly to EpochGroupData,\nbut for now, this is a good solution.","type":"array","items":{"type":"object","$ref":"#/definitions/inference.inference.MLNodeInfo"}},"reputation":{"type":"integer","format":"int32"},"weight":{"type":"string","format":"int64"}}},"inference.restrictions.EmergencyTransferExemption":{"type":"object","title":"EmergencyTransferExemption defines an exemption template for emergency transfers","properties":{"exemption_id":{"type":"string"},"expiry_block":{"type":"string","format":"uint64","title":"block height when exemption expires"},"from_address":{"type":"string","title":"specific address or \"*\" for wildcard"},"justification":{"type":"string","title":"description of emergency use case"},"max_amount":{"type":"string","title":"maximum amount per transfer (as string to avoid precision loss)"},"to_address":{"type":"string","title":"specific address or \"*\" for wildcard"},"usage_limit":{"type":"string","format":"uint64","title":"maximum number of uses per account"}}},"inference.restrictions.ExemptionUsage":{"type":"object","title":"ExemptionUsage tracks usage of exemptions per account","properties":{"account_address":{"type":"string"},"exemption_id":{"type":"string"},"usage_count":{"type":"string","format":"uint64"}}},"inference.restrictions.MsgExecuteEmergencyTransfer":{"type":"object","title":"MsgExecuteEmergencyTransfer executes a governance-approved emergency transfer","properties":{"amount":{"type":"string","title":"amount is the amount to transfer (must be within exemption limits)"},"denom":{"type":"string","title":"denom is the coin denomination to transfer"},"exemption_id":{"type":"string","title":"exemption_id is the ID of the governance-approved exemption template"},"from_address":{"type":"string","title":"from_address is the sender of the transfer (must match exemption or be wildcard)"},"to_address":{"type":"string","title":"to_address is the recipient of the transfer (must match exemption or be wildcard)"}}},"inference.restrictions.MsgExecuteEmergencyTransferResponse":{"type":"object","title":"MsgExecuteEmergencyTransferResponse is the response for emergency transfer execution","properties":{"remaining_uses":{"type":"string","format":"uint64","title":"remaining_uses is the number of uses left for this account with this exemption"}}},"inference.restrictions.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/inference.restrictions.Params"}}},"inference.restrictions.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.restrictions.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"emergency_transfer_exemptions":{"type":"array","title":"Array of governance-approved emergency transfer exemption templates","items":{"type":"object","$ref":"#/definitions/inference.restrictions.EmergencyTransferExemption"}},"exemption_usage_tracking":{"type":"array","title":"Usage tracking for emergency exemptions per account","items":{"type":"object","$ref":"#/definitions/inference.restrictions.ExemptionUsage"}},"restriction_end_block":{"type":"string","format":"uint64","title":"Block height when transfer restrictions end (default: 1,555,000)"}}},"inference.restrictions.QueryExemptionUsageResponse":{"description":"QueryExemptionUsageResponse is response type for the Query/ExemptionUsage RPC method.","type":"object","properties":{"pagination":{"description":"pagination defines the pagination in the response.","$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"usage_entries":{"type":"array","title":"usage_entries is the list of exemption usage entries","items":{"type":"object","$ref":"#/definitions/inference.restrictions.ExemptionUsage"}}}},"inference.restrictions.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.restrictions.Params"}}},"inference.restrictions.QueryTransferExemptionsResponse":{"description":"QueryTransferExemptionsResponse is response type for the Query/TransferExemptions RPC method.","type":"object","properties":{"exemptions":{"type":"array","title":"exemptions is the list of emergency transfer exemptions","items":{"type":"object","$ref":"#/definitions/inference.restrictions.EmergencyTransferExemption"}},"pagination":{"description":"pagination defines the pagination in the response.","$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"inference.restrictions.QueryTransferRestrictionStatusResponse":{"description":"QueryTransferRestrictionStatusResponse is response type for the Query/TransferRestrictionStatus RPC method.","type":"object","properties":{"current_block_height":{"type":"string","format":"uint64","title":"current_block_height is the current blockchain height"},"is_active":{"type":"boolean","title":"is_active indicates if transfer restrictions are currently active"},"remaining_blocks":{"type":"string","format":"uint64","title":"remaining_blocks is the number of blocks until restrictions end (0 if inactive)"},"restriction_end_block":{"type":"string","format":"uint64","title":"restriction_end_block is the block height when restrictions end"}}},"inference.streamvesting.EpochCoins":{"type":"object","title":"EpochCoins represents the coins to be unlocked in a specific epoch","properties":{"coins":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"inference.streamvesting.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/inference.streamvesting.Params"}}},"inference.streamvesting.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"inference.streamvesting.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"reward_vesting_period":{"type":"string","format":"uint64","title":"reward_vesting_period defines how many epochs rewards vest for\nDefault is 180 epochs, but can be overridden to 2 in tests"}}},"inference.streamvesting.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/inference.streamvesting.Params"}}},"inference.streamvesting.QueryTotalVestingAmountResponse":{"description":"QueryTotalVestingAmountResponse is response type for the Query/TotalVestingAmount RPC method.","type":"object","properties":{"total_amount":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}}},"inference.streamvesting.QueryVestingScheduleResponse":{"description":"QueryVestingScheduleResponse is response type for the Query/VestingSchedule RPC method.","type":"object","properties":{"vesting_schedule":{"$ref":"#/definitions/inference.streamvesting.VestingSchedule"}}},"inference.streamvesting.VestingSchedule":{"type":"object","title":"VestingSchedule defines a participant's vesting schedule","properties":{"epoch_amounts":{"type":"array","title":"epoch_amounts contains the coins to vest for each epoch\nThe first element is unlocked in the next epoch, second in epoch+1, etc.\nEach element contains sdk.Coins supporting multiple denominations per epoch","items":{"type":"object","$ref":"#/definitions/inference.streamvesting.EpochCoins"}},"participant_address":{"type":"string","title":"participant_address is the address of the participant"}}}},"tags":[{"name":"Query"},{"name":"Msg"},{"name":"NetworkNodeService"}]}