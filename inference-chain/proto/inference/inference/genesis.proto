syntax = "proto3";

package inference.inference;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "inference/inference/params.proto";
import "inference/inference/inference.proto";
import "inference/inference/participant.proto";
import "inference/inference/epoch_group_data.proto";
import "inference/inference/settle_amount.proto";
import "inference/inference/epoch_group_validations.proto";
import "inference/inference/tokenomics_data.proto";
import "inference/inference/model.proto";
import "inference/inference/top_miner.proto";
import "inference/inference/inference_timeout.proto";
import "inference/inference/inference_validation_details.proto";
import "inference/inference/epoch_performance_summary.proto";
import "inference/inference/partial_upgrade.proto";
import "inference/inference/contracts.proto";
import "inference/inference/bridge.proto";

option go_package = "github.com/productscience/inference/x/inference/types";

// GenesisState defines the inference module's genesis state.
message GenesisState {

  // params defines all the parameters of the module.
           Params                     params                         =  1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
           GenesisOnlyParams          genesis_only_params            =  2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
  repeated Model                      model_list                     =  3 [(gogoproto.nullable) = false] ;
           Bridge                     bridge                         =  4;
  repeated Participant                participant_list               =  5 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}
