syntax = "proto3";
package inference.collateral;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/productscience/inference/x/collateral/types";

// Params defines the parameters for the module.
message Params {
  option (amino.name) = "inference/x/collateral/Params";
  option (gogoproto.equal) = true;

  // BaseWeightRatio is the portion of potential weight granted unconditionally (0-1)
  string base_weight_ratio = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];

  // CollateralPerWeightUnit is the amount of collateral required per unit of weight
  string collateral_per_weight_unit = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];

  // UnbondingPeriodEpochs is the number of epochs a withdrawal must wait before being released
  uint64 unbonding_period_epochs = 3;
}