// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package inference

import (
	binary "encoding/binary"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	math "math"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_Model_6_list)(nil)

type _Model_6_list struct {
	list *[]string
}

func (x *_Model_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Model_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_Model_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Model_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Model_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Model at list field ModelArgs as it is not of Message kind"))
}

func (x *_Model_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Model_6_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_Model_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Model                            protoreflect.MessageDescriptor
	fd_Model_proposed_by                protoreflect.FieldDescriptor
	fd_Model_id                         protoreflect.FieldDescriptor
	fd_Model_units_of_compute_per_token protoreflect.FieldDescriptor
	fd_Model_hf_repo                    protoreflect.FieldDescriptor
	fd_Model_hf_commit                  protoreflect.FieldDescriptor
	fd_Model_model_args                 protoreflect.FieldDescriptor
	fd_Model_v_ram                      protoreflect.FieldDescriptor
	fd_Model_throughput_per_nonce       protoreflect.FieldDescriptor
	fd_Model_validation_threshold       protoreflect.FieldDescriptor
)

func init() {
	file_inference_inference_model_proto_init()
	md_Model = File_inference_inference_model_proto.Messages().ByName("Model")
	fd_Model_proposed_by = md_Model.Fields().ByName("proposed_by")
	fd_Model_id = md_Model.Fields().ByName("id")
	fd_Model_units_of_compute_per_token = md_Model.Fields().ByName("units_of_compute_per_token")
	fd_Model_hf_repo = md_Model.Fields().ByName("hf_repo")
	fd_Model_hf_commit = md_Model.Fields().ByName("hf_commit")
	fd_Model_model_args = md_Model.Fields().ByName("model_args")
	fd_Model_v_ram = md_Model.Fields().ByName("v_ram")
	fd_Model_throughput_per_nonce = md_Model.Fields().ByName("throughput_per_nonce")
	fd_Model_validation_threshold = md_Model.Fields().ByName("validation_threshold")
}

var _ protoreflect.Message = (*fastReflection_Model)(nil)

type fastReflection_Model Model

func (x *Model) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Model)(x)
}

func (x *Model) slowProtoReflect() protoreflect.Message {
	mi := &file_inference_inference_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Model_messageType fastReflection_Model_messageType
var _ protoreflect.MessageType = fastReflection_Model_messageType{}

type fastReflection_Model_messageType struct{}

func (x fastReflection_Model_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Model)(nil)
}
func (x fastReflection_Model_messageType) New() protoreflect.Message {
	return new(fastReflection_Model)
}
func (x fastReflection_Model_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Model
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Model) Descriptor() protoreflect.MessageDescriptor {
	return md_Model
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Model) Type() protoreflect.MessageType {
	return _fastReflection_Model_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Model) New() protoreflect.Message {
	return new(fastReflection_Model)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Model) Interface() protoreflect.ProtoMessage {
	return (*Model)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Model) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProposedBy != "" {
		value := protoreflect.ValueOfString(x.ProposedBy)
		if !f(fd_Model_proposed_by, value) {
			return
		}
	}
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_Model_id, value) {
			return
		}
	}
	if x.UnitsOfComputePerToken != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UnitsOfComputePerToken)
		if !f(fd_Model_units_of_compute_per_token, value) {
			return
		}
	}
	if x.HfRepo != "" {
		value := protoreflect.ValueOfString(x.HfRepo)
		if !f(fd_Model_hf_repo, value) {
			return
		}
	}
	if x.HfCommit != "" {
		value := protoreflect.ValueOfString(x.HfCommit)
		if !f(fd_Model_hf_commit, value) {
			return
		}
	}
	if len(x.ModelArgs) != 0 {
		value := protoreflect.ValueOfList(&_Model_6_list{list: &x.ModelArgs})
		if !f(fd_Model_model_args, value) {
			return
		}
	}
	if x.VRam != uint64(0) {
		value := protoreflect.ValueOfUint64(x.VRam)
		if !f(fd_Model_v_ram, value) {
			return
		}
	}
	if x.ThroughputPerNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ThroughputPerNonce)
		if !f(fd_Model_throughput_per_nonce, value) {
			return
		}
	}
	if x.ValidationThreshold != float32(0) || math.Signbit(float64(x.ValidationThreshold)) {
		value := protoreflect.ValueOfFloat32(x.ValidationThreshold)
		if !f(fd_Model_validation_threshold, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Model) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "inference.inference.Model.proposed_by":
		return x.ProposedBy != ""
	case "inference.inference.Model.id":
		return x.Id != ""
	case "inference.inference.Model.units_of_compute_per_token":
		return x.UnitsOfComputePerToken != uint64(0)
	case "inference.inference.Model.hf_repo":
		return x.HfRepo != ""
	case "inference.inference.Model.hf_commit":
		return x.HfCommit != ""
	case "inference.inference.Model.model_args":
		return len(x.ModelArgs) != 0
	case "inference.inference.Model.v_ram":
		return x.VRam != uint64(0)
	case "inference.inference.Model.throughput_per_nonce":
		return x.ThroughputPerNonce != uint64(0)
	case "inference.inference.Model.validation_threshold":
		return x.ValidationThreshold != float32(0) || math.Signbit(float64(x.ValidationThreshold))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.inference.Model"))
		}
		panic(fmt.Errorf("message inference.inference.Model does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Model) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "inference.inference.Model.proposed_by":
		x.ProposedBy = ""
	case "inference.inference.Model.id":
		x.Id = ""
	case "inference.inference.Model.units_of_compute_per_token":
		x.UnitsOfComputePerToken = uint64(0)
	case "inference.inference.Model.hf_repo":
		x.HfRepo = ""
	case "inference.inference.Model.hf_commit":
		x.HfCommit = ""
	case "inference.inference.Model.model_args":
		x.ModelArgs = nil
	case "inference.inference.Model.v_ram":
		x.VRam = uint64(0)
	case "inference.inference.Model.throughput_per_nonce":
		x.ThroughputPerNonce = uint64(0)
	case "inference.inference.Model.validation_threshold":
		x.ValidationThreshold = float32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.inference.Model"))
		}
		panic(fmt.Errorf("message inference.inference.Model does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Model) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "inference.inference.Model.proposed_by":
		value := x.ProposedBy
		return protoreflect.ValueOfString(value)
	case "inference.inference.Model.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "inference.inference.Model.units_of_compute_per_token":
		value := x.UnitsOfComputePerToken
		return protoreflect.ValueOfUint64(value)
	case "inference.inference.Model.hf_repo":
		value := x.HfRepo
		return protoreflect.ValueOfString(value)
	case "inference.inference.Model.hf_commit":
		value := x.HfCommit
		return protoreflect.ValueOfString(value)
	case "inference.inference.Model.model_args":
		if len(x.ModelArgs) == 0 {
			return protoreflect.ValueOfList(&_Model_6_list{})
		}
		listValue := &_Model_6_list{list: &x.ModelArgs}
		return protoreflect.ValueOfList(listValue)
	case "inference.inference.Model.v_ram":
		value := x.VRam
		return protoreflect.ValueOfUint64(value)
	case "inference.inference.Model.throughput_per_nonce":
		value := x.ThroughputPerNonce
		return protoreflect.ValueOfUint64(value)
	case "inference.inference.Model.validation_threshold":
		value := x.ValidationThreshold
		return protoreflect.ValueOfFloat32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.inference.Model"))
		}
		panic(fmt.Errorf("message inference.inference.Model does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Model) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "inference.inference.Model.proposed_by":
		x.ProposedBy = value.Interface().(string)
	case "inference.inference.Model.id":
		x.Id = value.Interface().(string)
	case "inference.inference.Model.units_of_compute_per_token":
		x.UnitsOfComputePerToken = value.Uint()
	case "inference.inference.Model.hf_repo":
		x.HfRepo = value.Interface().(string)
	case "inference.inference.Model.hf_commit":
		x.HfCommit = value.Interface().(string)
	case "inference.inference.Model.model_args":
		lv := value.List()
		clv := lv.(*_Model_6_list)
		x.ModelArgs = *clv.list
	case "inference.inference.Model.v_ram":
		x.VRam = value.Uint()
	case "inference.inference.Model.throughput_per_nonce":
		x.ThroughputPerNonce = value.Uint()
	case "inference.inference.Model.validation_threshold":
		x.ValidationThreshold = float32(value.Float())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.inference.Model"))
		}
		panic(fmt.Errorf("message inference.inference.Model does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Model) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "inference.inference.Model.model_args":
		if x.ModelArgs == nil {
			x.ModelArgs = []string{}
		}
		value := &_Model_6_list{list: &x.ModelArgs}
		return protoreflect.ValueOfList(value)
	case "inference.inference.Model.proposed_by":
		panic(fmt.Errorf("field proposed_by of message inference.inference.Model is not mutable"))
	case "inference.inference.Model.id":
		panic(fmt.Errorf("field id of message inference.inference.Model is not mutable"))
	case "inference.inference.Model.units_of_compute_per_token":
		panic(fmt.Errorf("field units_of_compute_per_token of message inference.inference.Model is not mutable"))
	case "inference.inference.Model.hf_repo":
		panic(fmt.Errorf("field hf_repo of message inference.inference.Model is not mutable"))
	case "inference.inference.Model.hf_commit":
		panic(fmt.Errorf("field hf_commit of message inference.inference.Model is not mutable"))
	case "inference.inference.Model.v_ram":
		panic(fmt.Errorf("field v_ram of message inference.inference.Model is not mutable"))
	case "inference.inference.Model.throughput_per_nonce":
		panic(fmt.Errorf("field throughput_per_nonce of message inference.inference.Model is not mutable"))
	case "inference.inference.Model.validation_threshold":
		panic(fmt.Errorf("field validation_threshold of message inference.inference.Model is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.inference.Model"))
		}
		panic(fmt.Errorf("message inference.inference.Model does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Model) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "inference.inference.Model.proposed_by":
		return protoreflect.ValueOfString("")
	case "inference.inference.Model.id":
		return protoreflect.ValueOfString("")
	case "inference.inference.Model.units_of_compute_per_token":
		return protoreflect.ValueOfUint64(uint64(0))
	case "inference.inference.Model.hf_repo":
		return protoreflect.ValueOfString("")
	case "inference.inference.Model.hf_commit":
		return protoreflect.ValueOfString("")
	case "inference.inference.Model.model_args":
		list := []string{}
		return protoreflect.ValueOfList(&_Model_6_list{list: &list})
	case "inference.inference.Model.v_ram":
		return protoreflect.ValueOfUint64(uint64(0))
	case "inference.inference.Model.throughput_per_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "inference.inference.Model.validation_threshold":
		return protoreflect.ValueOfFloat32(float32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.inference.Model"))
		}
		panic(fmt.Errorf("message inference.inference.Model does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Model) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in inference.inference.Model", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Model) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Model) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Model) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Model) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Model)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ProposedBy)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UnitsOfComputePerToken != 0 {
			n += 1 + runtime.Sov(uint64(x.UnitsOfComputePerToken))
		}
		l = len(x.HfRepo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HfCommit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ModelArgs) > 0 {
			for _, s := range x.ModelArgs {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.VRam != 0 {
			n += 1 + runtime.Sov(uint64(x.VRam))
		}
		if x.ThroughputPerNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.ThroughputPerNonce))
		}
		if x.ValidationThreshold != 0 || math.Signbit(float64(x.ValidationThreshold)) {
			n += 5
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Model)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ValidationThreshold != 0 || math.Signbit(float64(x.ValidationThreshold)) {
			i -= 4
			binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(x.ValidationThreshold))))
			i--
			dAtA[i] = 0x4d
		}
		if x.ThroughputPerNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ThroughputPerNonce))
			i--
			dAtA[i] = 0x40
		}
		if x.VRam != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VRam))
			i--
			dAtA[i] = 0x38
		}
		if len(x.ModelArgs) > 0 {
			for iNdEx := len(x.ModelArgs) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.ModelArgs[iNdEx])
				copy(dAtA[i:], x.ModelArgs[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ModelArgs[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.HfCommit) > 0 {
			i -= len(x.HfCommit)
			copy(dAtA[i:], x.HfCommit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HfCommit)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.HfRepo) > 0 {
			i -= len(x.HfRepo)
			copy(dAtA[i:], x.HfRepo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HfRepo)))
			i--
			dAtA[i] = 0x22
		}
		if x.UnitsOfComputePerToken != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UnitsOfComputePerToken))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ProposedBy) > 0 {
			i -= len(x.ProposedBy)
			copy(dAtA[i:], x.ProposedBy)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProposedBy)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Model)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Model: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Model: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProposedBy", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProposedBy = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnitsOfComputePerToken", wireType)
				}
				x.UnitsOfComputePerToken = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UnitsOfComputePerToken |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HfRepo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HfRepo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HfCommit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HfCommit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ModelArgs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ModelArgs = append(x.ModelArgs, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VRam", wireType)
				}
				x.VRam = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VRam |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ThroughputPerNonce", wireType)
				}
				x.ThroughputPerNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ThroughputPerNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 5 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidationThreshold", wireType)
				}
				var v uint32
				if (iNdEx + 4) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
				iNdEx += 4
				x.ValidationThreshold = float32(math.Float32frombits(v))
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: inference/inference/model.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposedBy             string   `protobuf:"bytes,1,opt,name=proposed_by,json=proposedBy,proto3" json:"proposed_by,omitempty"`
	Id                     string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	UnitsOfComputePerToken uint64   `protobuf:"varint,3,opt,name=units_of_compute_per_token,json=unitsOfComputePerToken,proto3" json:"units_of_compute_per_token,omitempty"`
	HfRepo                 string   `protobuf:"bytes,4,opt,name=hf_repo,json=hfRepo,proto3" json:"hf_repo,omitempty"`
	HfCommit               string   `protobuf:"bytes,5,opt,name=hf_commit,json=hfCommit,proto3" json:"hf_commit,omitempty"`
	ModelArgs              []string `protobuf:"bytes,6,rep,name=model_args,json=modelArgs,proto3" json:"model_args,omitempty"`
	VRam                   uint64   `protobuf:"varint,7,opt,name=v_ram,json=vRam,proto3" json:"v_ram,omitempty"`
	ThroughputPerNonce     uint64   `protobuf:"varint,8,opt,name=throughput_per_nonce,json=throughputPerNonce,proto3" json:"throughput_per_nonce,omitempty"`
	ValidationThreshold    float32  `protobuf:"fixed32,9,opt,name=validation_threshold,json=validationThreshold,proto3" json:"validation_threshold,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inference_inference_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_inference_inference_model_proto_rawDescGZIP(), []int{0}
}

func (x *Model) GetProposedBy() string {
	if x != nil {
		return x.ProposedBy
	}
	return ""
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetUnitsOfComputePerToken() uint64 {
	if x != nil {
		return x.UnitsOfComputePerToken
	}
	return 0
}

func (x *Model) GetHfRepo() string {
	if x != nil {
		return x.HfRepo
	}
	return ""
}

func (x *Model) GetHfCommit() string {
	if x != nil {
		return x.HfCommit
	}
	return ""
}

func (x *Model) GetModelArgs() []string {
	if x != nil {
		return x.ModelArgs
	}
	return nil
}

func (x *Model) GetVRam() uint64 {
	if x != nil {
		return x.VRam
	}
	return 0
}

func (x *Model) GetThroughputPerNonce() uint64 {
	if x != nil {
		return x.ThroughputPerNonce
	}
	return 0
}

func (x *Model) GetValidationThreshold() float32 {
	if x != nil {
		return x.ValidationThreshold
	}
	return 0
}

var File_inference_inference_model_proto protoreflect.FileDescriptor

var file_inference_inference_model_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xc3, 0x02, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3a, 0x0a, 0x1a, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x4f, 0x66, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x68, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x66, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x66, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x66, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x76, 0x5f, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x76, 0x52, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75,
	0x74, 0x50, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0xb8, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0xa2, 0x02, 0x03, 0x49,
	0x49, 0x58, 0xaa, 0x02, 0x13, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0xca, 0x02, 0x13, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5c, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0xe2, 0x02,
	0x1f, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5c, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x14, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x3a, 0x3a, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inference_inference_model_proto_rawDescOnce sync.Once
	file_inference_inference_model_proto_rawDescData = file_inference_inference_model_proto_rawDesc
)

func file_inference_inference_model_proto_rawDescGZIP() []byte {
	file_inference_inference_model_proto_rawDescOnce.Do(func() {
		file_inference_inference_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_inference_inference_model_proto_rawDescData)
	})
	return file_inference_inference_model_proto_rawDescData
}

var file_inference_inference_model_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_inference_inference_model_proto_goTypes = []interface{}{
	(*Model)(nil), // 0: inference.inference.Model
}
var file_inference_inference_model_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_inference_inference_model_proto_init() }
func file_inference_inference_model_proto_init() {
	if File_inference_inference_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inference_inference_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inference_inference_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_inference_inference_model_proto_goTypes,
		DependencyIndexes: file_inference_inference_model_proto_depIdxs,
		MessageInfos:      file_inference_inference_model_proto_msgTypes,
	}.Build()
	File_inference_inference_model_proto = out.File
	file_inference_inference_model_proto_rawDesc = nil
	file_inference_inference_model_proto_goTypes = nil
	file_inference_inference_model_proto_depIdxs = nil
}
