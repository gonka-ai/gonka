// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package bls

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_SigningData_4_list)(nil)

type _SigningData_4_list struct {
	list *[][]byte
}

func (x *_SigningData_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SigningData_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_SigningData_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_SigningData_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_SigningData_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message SigningData at list field Data as it is not of Message kind"))
}

func (x *_SigningData_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_SigningData_4_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_SigningData_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SigningData                     protoreflect.MessageDescriptor
	fd_SigningData_current_epoch_index protoreflect.FieldDescriptor
	fd_SigningData_chain_id            protoreflect.FieldDescriptor
	fd_SigningData_request_id          protoreflect.FieldDescriptor
	fd_SigningData_data                protoreflect.FieldDescriptor
)

func init() {
	file_inference_bls_threshold_signing_proto_init()
	md_SigningData = File_inference_bls_threshold_signing_proto.Messages().ByName("SigningData")
	fd_SigningData_current_epoch_index = md_SigningData.Fields().ByName("current_epoch_index")
	fd_SigningData_chain_id = md_SigningData.Fields().ByName("chain_id")
	fd_SigningData_request_id = md_SigningData.Fields().ByName("request_id")
	fd_SigningData_data = md_SigningData.Fields().ByName("data")
}

var _ protoreflect.Message = (*fastReflection_SigningData)(nil)

type fastReflection_SigningData SigningData

func (x *SigningData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SigningData)(x)
}

func (x *SigningData) slowProtoReflect() protoreflect.Message {
	mi := &file_inference_bls_threshold_signing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SigningData_messageType fastReflection_SigningData_messageType
var _ protoreflect.MessageType = fastReflection_SigningData_messageType{}

type fastReflection_SigningData_messageType struct{}

func (x fastReflection_SigningData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SigningData)(nil)
}
func (x fastReflection_SigningData_messageType) New() protoreflect.Message {
	return new(fastReflection_SigningData)
}
func (x fastReflection_SigningData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SigningData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SigningData) Descriptor() protoreflect.MessageDescriptor {
	return md_SigningData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SigningData) Type() protoreflect.MessageType {
	return _fastReflection_SigningData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SigningData) New() protoreflect.Message {
	return new(fastReflection_SigningData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SigningData) Interface() protoreflect.ProtoMessage {
	return (*SigningData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SigningData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CurrentEpochIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentEpochIndex)
		if !f(fd_SigningData_current_epoch_index, value) {
			return
		}
	}
	if len(x.ChainId) != 0 {
		value := protoreflect.ValueOfBytes(x.ChainId)
		if !f(fd_SigningData_chain_id, value) {
			return
		}
	}
	if len(x.RequestId) != 0 {
		value := protoreflect.ValueOfBytes(x.RequestId)
		if !f(fd_SigningData_request_id, value) {
			return
		}
	}
	if len(x.Data) != 0 {
		value := protoreflect.ValueOfList(&_SigningData_4_list{list: &x.Data})
		if !f(fd_SigningData_data, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SigningData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "inference.bls.SigningData.current_epoch_index":
		return x.CurrentEpochIndex != uint64(0)
	case "inference.bls.SigningData.chain_id":
		return len(x.ChainId) != 0
	case "inference.bls.SigningData.request_id":
		return len(x.RequestId) != 0
	case "inference.bls.SigningData.data":
		return len(x.Data) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.SigningData"))
		}
		panic(fmt.Errorf("message inference.bls.SigningData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SigningData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "inference.bls.SigningData.current_epoch_index":
		x.CurrentEpochIndex = uint64(0)
	case "inference.bls.SigningData.chain_id":
		x.ChainId = nil
	case "inference.bls.SigningData.request_id":
		x.RequestId = nil
	case "inference.bls.SigningData.data":
		x.Data = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.SigningData"))
		}
		panic(fmt.Errorf("message inference.bls.SigningData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SigningData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "inference.bls.SigningData.current_epoch_index":
		value := x.CurrentEpochIndex
		return protoreflect.ValueOfUint64(value)
	case "inference.bls.SigningData.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfBytes(value)
	case "inference.bls.SigningData.request_id":
		value := x.RequestId
		return protoreflect.ValueOfBytes(value)
	case "inference.bls.SigningData.data":
		if len(x.Data) == 0 {
			return protoreflect.ValueOfList(&_SigningData_4_list{})
		}
		listValue := &_SigningData_4_list{list: &x.Data}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.SigningData"))
		}
		panic(fmt.Errorf("message inference.bls.SigningData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SigningData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "inference.bls.SigningData.current_epoch_index":
		x.CurrentEpochIndex = value.Uint()
	case "inference.bls.SigningData.chain_id":
		x.ChainId = value.Bytes()
	case "inference.bls.SigningData.request_id":
		x.RequestId = value.Bytes()
	case "inference.bls.SigningData.data":
		lv := value.List()
		clv := lv.(*_SigningData_4_list)
		x.Data = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.SigningData"))
		}
		panic(fmt.Errorf("message inference.bls.SigningData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SigningData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "inference.bls.SigningData.data":
		if x.Data == nil {
			x.Data = [][]byte{}
		}
		value := &_SigningData_4_list{list: &x.Data}
		return protoreflect.ValueOfList(value)
	case "inference.bls.SigningData.current_epoch_index":
		panic(fmt.Errorf("field current_epoch_index of message inference.bls.SigningData is not mutable"))
	case "inference.bls.SigningData.chain_id":
		panic(fmt.Errorf("field chain_id of message inference.bls.SigningData is not mutable"))
	case "inference.bls.SigningData.request_id":
		panic(fmt.Errorf("field request_id of message inference.bls.SigningData is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.SigningData"))
		}
		panic(fmt.Errorf("message inference.bls.SigningData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SigningData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "inference.bls.SigningData.current_epoch_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "inference.bls.SigningData.chain_id":
		return protoreflect.ValueOfBytes(nil)
	case "inference.bls.SigningData.request_id":
		return protoreflect.ValueOfBytes(nil)
	case "inference.bls.SigningData.data":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_SigningData_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.SigningData"))
		}
		panic(fmt.Errorf("message inference.bls.SigningData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SigningData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in inference.bls.SigningData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SigningData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SigningData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SigningData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SigningData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SigningData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.CurrentEpochIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentEpochIndex))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RequestId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Data) > 0 {
			for _, b := range x.Data {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SigningData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Data) > 0 {
			for iNdEx := len(x.Data) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Data[iNdEx])
				copy(dAtA[i:], x.Data[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Data[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.RequestId) > 0 {
			i -= len(x.RequestId)
			copy(dAtA[i:], x.RequestId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RequestId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if x.CurrentEpochIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentEpochIndex))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SigningData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SigningData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SigningData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentEpochIndex", wireType)
				}
				x.CurrentEpochIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentEpochIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = append(x.ChainId[:0], dAtA[iNdEx:postIndex]...)
				if x.ChainId == nil {
					x.ChainId = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RequestId = append(x.RequestId[:0], dAtA[iNdEx:postIndex]...)
				if x.RequestId == nil {
					x.RequestId = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Data = append(x.Data, make([]byte, postIndex-iNdEx))
				copy(x.Data[len(x.Data)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ThresholdSigningRequest_4_list)(nil)

type _ThresholdSigningRequest_4_list struct {
	list *[][]byte
}

func (x *_ThresholdSigningRequest_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ThresholdSigningRequest_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_ThresholdSigningRequest_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ThresholdSigningRequest_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ThresholdSigningRequest_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ThresholdSigningRequest at list field Data as it is not of Message kind"))
}

func (x *_ThresholdSigningRequest_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ThresholdSigningRequest_4_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_ThresholdSigningRequest_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ThresholdSigningRequest_8_list)(nil)

type _ThresholdSigningRequest_8_list struct {
	list *[]*PartialSignature
}

func (x *_ThresholdSigningRequest_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ThresholdSigningRequest_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ThresholdSigningRequest_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PartialSignature)
	(*x.list)[i] = concreteValue
}

func (x *_ThresholdSigningRequest_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PartialSignature)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ThresholdSigningRequest_8_list) AppendMutable() protoreflect.Value {
	v := new(PartialSignature)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ThresholdSigningRequest_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ThresholdSigningRequest_8_list) NewElement() protoreflect.Value {
	v := new(PartialSignature)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ThresholdSigningRequest_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ThresholdSigningRequest                       protoreflect.MessageDescriptor
	fd_ThresholdSigningRequest_request_id            protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_current_epoch_index   protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_chain_id              protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_data                  protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_encoded_data          protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_message_hash          protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_status                protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_partial_signatures    protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_final_signature       protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_created_block_height  protoreflect.FieldDescriptor
	fd_ThresholdSigningRequest_deadline_block_height protoreflect.FieldDescriptor
)

func init() {
	file_inference_bls_threshold_signing_proto_init()
	md_ThresholdSigningRequest = File_inference_bls_threshold_signing_proto.Messages().ByName("ThresholdSigningRequest")
	fd_ThresholdSigningRequest_request_id = md_ThresholdSigningRequest.Fields().ByName("request_id")
	fd_ThresholdSigningRequest_current_epoch_index = md_ThresholdSigningRequest.Fields().ByName("current_epoch_index")
	fd_ThresholdSigningRequest_chain_id = md_ThresholdSigningRequest.Fields().ByName("chain_id")
	fd_ThresholdSigningRequest_data = md_ThresholdSigningRequest.Fields().ByName("data")
	fd_ThresholdSigningRequest_encoded_data = md_ThresholdSigningRequest.Fields().ByName("encoded_data")
	fd_ThresholdSigningRequest_message_hash = md_ThresholdSigningRequest.Fields().ByName("message_hash")
	fd_ThresholdSigningRequest_status = md_ThresholdSigningRequest.Fields().ByName("status")
	fd_ThresholdSigningRequest_partial_signatures = md_ThresholdSigningRequest.Fields().ByName("partial_signatures")
	fd_ThresholdSigningRequest_final_signature = md_ThresholdSigningRequest.Fields().ByName("final_signature")
	fd_ThresholdSigningRequest_created_block_height = md_ThresholdSigningRequest.Fields().ByName("created_block_height")
	fd_ThresholdSigningRequest_deadline_block_height = md_ThresholdSigningRequest.Fields().ByName("deadline_block_height")
}

var _ protoreflect.Message = (*fastReflection_ThresholdSigningRequest)(nil)

type fastReflection_ThresholdSigningRequest ThresholdSigningRequest

func (x *ThresholdSigningRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ThresholdSigningRequest)(x)
}

func (x *ThresholdSigningRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_inference_bls_threshold_signing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ThresholdSigningRequest_messageType fastReflection_ThresholdSigningRequest_messageType
var _ protoreflect.MessageType = fastReflection_ThresholdSigningRequest_messageType{}

type fastReflection_ThresholdSigningRequest_messageType struct{}

func (x fastReflection_ThresholdSigningRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ThresholdSigningRequest)(nil)
}
func (x fastReflection_ThresholdSigningRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_ThresholdSigningRequest)
}
func (x fastReflection_ThresholdSigningRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ThresholdSigningRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ThresholdSigningRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_ThresholdSigningRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ThresholdSigningRequest) Type() protoreflect.MessageType {
	return _fastReflection_ThresholdSigningRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ThresholdSigningRequest) New() protoreflect.Message {
	return new(fastReflection_ThresholdSigningRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ThresholdSigningRequest) Interface() protoreflect.ProtoMessage {
	return (*ThresholdSigningRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ThresholdSigningRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RequestId) != 0 {
		value := protoreflect.ValueOfBytes(x.RequestId)
		if !f(fd_ThresholdSigningRequest_request_id, value) {
			return
		}
	}
	if x.CurrentEpochIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentEpochIndex)
		if !f(fd_ThresholdSigningRequest_current_epoch_index, value) {
			return
		}
	}
	if len(x.ChainId) != 0 {
		value := protoreflect.ValueOfBytes(x.ChainId)
		if !f(fd_ThresholdSigningRequest_chain_id, value) {
			return
		}
	}
	if len(x.Data) != 0 {
		value := protoreflect.ValueOfList(&_ThresholdSigningRequest_4_list{list: &x.Data})
		if !f(fd_ThresholdSigningRequest_data, value) {
			return
		}
	}
	if len(x.EncodedData) != 0 {
		value := protoreflect.ValueOfBytes(x.EncodedData)
		if !f(fd_ThresholdSigningRequest_encoded_data, value) {
			return
		}
	}
	if len(x.MessageHash) != 0 {
		value := protoreflect.ValueOfBytes(x.MessageHash)
		if !f(fd_ThresholdSigningRequest_message_hash, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_ThresholdSigningRequest_status, value) {
			return
		}
	}
	if len(x.PartialSignatures) != 0 {
		value := protoreflect.ValueOfList(&_ThresholdSigningRequest_8_list{list: &x.PartialSignatures})
		if !f(fd_ThresholdSigningRequest_partial_signatures, value) {
			return
		}
	}
	if len(x.FinalSignature) != 0 {
		value := protoreflect.ValueOfBytes(x.FinalSignature)
		if !f(fd_ThresholdSigningRequest_final_signature, value) {
			return
		}
	}
	if x.CreatedBlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.CreatedBlockHeight)
		if !f(fd_ThresholdSigningRequest_created_block_height, value) {
			return
		}
	}
	if x.DeadlineBlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.DeadlineBlockHeight)
		if !f(fd_ThresholdSigningRequest_deadline_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ThresholdSigningRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "inference.bls.ThresholdSigningRequest.request_id":
		return len(x.RequestId) != 0
	case "inference.bls.ThresholdSigningRequest.current_epoch_index":
		return x.CurrentEpochIndex != uint64(0)
	case "inference.bls.ThresholdSigningRequest.chain_id":
		return len(x.ChainId) != 0
	case "inference.bls.ThresholdSigningRequest.data":
		return len(x.Data) != 0
	case "inference.bls.ThresholdSigningRequest.encoded_data":
		return len(x.EncodedData) != 0
	case "inference.bls.ThresholdSigningRequest.message_hash":
		return len(x.MessageHash) != 0
	case "inference.bls.ThresholdSigningRequest.status":
		return x.Status != 0
	case "inference.bls.ThresholdSigningRequest.partial_signatures":
		return len(x.PartialSignatures) != 0
	case "inference.bls.ThresholdSigningRequest.final_signature":
		return len(x.FinalSignature) != 0
	case "inference.bls.ThresholdSigningRequest.created_block_height":
		return x.CreatedBlockHeight != int64(0)
	case "inference.bls.ThresholdSigningRequest.deadline_block_height":
		return x.DeadlineBlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.ThresholdSigningRequest"))
		}
		panic(fmt.Errorf("message inference.bls.ThresholdSigningRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ThresholdSigningRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "inference.bls.ThresholdSigningRequest.request_id":
		x.RequestId = nil
	case "inference.bls.ThresholdSigningRequest.current_epoch_index":
		x.CurrentEpochIndex = uint64(0)
	case "inference.bls.ThresholdSigningRequest.chain_id":
		x.ChainId = nil
	case "inference.bls.ThresholdSigningRequest.data":
		x.Data = nil
	case "inference.bls.ThresholdSigningRequest.encoded_data":
		x.EncodedData = nil
	case "inference.bls.ThresholdSigningRequest.message_hash":
		x.MessageHash = nil
	case "inference.bls.ThresholdSigningRequest.status":
		x.Status = 0
	case "inference.bls.ThresholdSigningRequest.partial_signatures":
		x.PartialSignatures = nil
	case "inference.bls.ThresholdSigningRequest.final_signature":
		x.FinalSignature = nil
	case "inference.bls.ThresholdSigningRequest.created_block_height":
		x.CreatedBlockHeight = int64(0)
	case "inference.bls.ThresholdSigningRequest.deadline_block_height":
		x.DeadlineBlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.ThresholdSigningRequest"))
		}
		panic(fmt.Errorf("message inference.bls.ThresholdSigningRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ThresholdSigningRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "inference.bls.ThresholdSigningRequest.request_id":
		value := x.RequestId
		return protoreflect.ValueOfBytes(value)
	case "inference.bls.ThresholdSigningRequest.current_epoch_index":
		value := x.CurrentEpochIndex
		return protoreflect.ValueOfUint64(value)
	case "inference.bls.ThresholdSigningRequest.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfBytes(value)
	case "inference.bls.ThresholdSigningRequest.data":
		if len(x.Data) == 0 {
			return protoreflect.ValueOfList(&_ThresholdSigningRequest_4_list{})
		}
		listValue := &_ThresholdSigningRequest_4_list{list: &x.Data}
		return protoreflect.ValueOfList(listValue)
	case "inference.bls.ThresholdSigningRequest.encoded_data":
		value := x.EncodedData
		return protoreflect.ValueOfBytes(value)
	case "inference.bls.ThresholdSigningRequest.message_hash":
		value := x.MessageHash
		return protoreflect.ValueOfBytes(value)
	case "inference.bls.ThresholdSigningRequest.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "inference.bls.ThresholdSigningRequest.partial_signatures":
		if len(x.PartialSignatures) == 0 {
			return protoreflect.ValueOfList(&_ThresholdSigningRequest_8_list{})
		}
		listValue := &_ThresholdSigningRequest_8_list{list: &x.PartialSignatures}
		return protoreflect.ValueOfList(listValue)
	case "inference.bls.ThresholdSigningRequest.final_signature":
		value := x.FinalSignature
		return protoreflect.ValueOfBytes(value)
	case "inference.bls.ThresholdSigningRequest.created_block_height":
		value := x.CreatedBlockHeight
		return protoreflect.ValueOfInt64(value)
	case "inference.bls.ThresholdSigningRequest.deadline_block_height":
		value := x.DeadlineBlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.ThresholdSigningRequest"))
		}
		panic(fmt.Errorf("message inference.bls.ThresholdSigningRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ThresholdSigningRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "inference.bls.ThresholdSigningRequest.request_id":
		x.RequestId = value.Bytes()
	case "inference.bls.ThresholdSigningRequest.current_epoch_index":
		x.CurrentEpochIndex = value.Uint()
	case "inference.bls.ThresholdSigningRequest.chain_id":
		x.ChainId = value.Bytes()
	case "inference.bls.ThresholdSigningRequest.data":
		lv := value.List()
		clv := lv.(*_ThresholdSigningRequest_4_list)
		x.Data = *clv.list
	case "inference.bls.ThresholdSigningRequest.encoded_data":
		x.EncodedData = value.Bytes()
	case "inference.bls.ThresholdSigningRequest.message_hash":
		x.MessageHash = value.Bytes()
	case "inference.bls.ThresholdSigningRequest.status":
		x.Status = (ThresholdSigningStatus)(value.Enum())
	case "inference.bls.ThresholdSigningRequest.partial_signatures":
		lv := value.List()
		clv := lv.(*_ThresholdSigningRequest_8_list)
		x.PartialSignatures = *clv.list
	case "inference.bls.ThresholdSigningRequest.final_signature":
		x.FinalSignature = value.Bytes()
	case "inference.bls.ThresholdSigningRequest.created_block_height":
		x.CreatedBlockHeight = value.Int()
	case "inference.bls.ThresholdSigningRequest.deadline_block_height":
		x.DeadlineBlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.ThresholdSigningRequest"))
		}
		panic(fmt.Errorf("message inference.bls.ThresholdSigningRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ThresholdSigningRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "inference.bls.ThresholdSigningRequest.data":
		if x.Data == nil {
			x.Data = [][]byte{}
		}
		value := &_ThresholdSigningRequest_4_list{list: &x.Data}
		return protoreflect.ValueOfList(value)
	case "inference.bls.ThresholdSigningRequest.partial_signatures":
		if x.PartialSignatures == nil {
			x.PartialSignatures = []*PartialSignature{}
		}
		value := &_ThresholdSigningRequest_8_list{list: &x.PartialSignatures}
		return protoreflect.ValueOfList(value)
	case "inference.bls.ThresholdSigningRequest.request_id":
		panic(fmt.Errorf("field request_id of message inference.bls.ThresholdSigningRequest is not mutable"))
	case "inference.bls.ThresholdSigningRequest.current_epoch_index":
		panic(fmt.Errorf("field current_epoch_index of message inference.bls.ThresholdSigningRequest is not mutable"))
	case "inference.bls.ThresholdSigningRequest.chain_id":
		panic(fmt.Errorf("field chain_id of message inference.bls.ThresholdSigningRequest is not mutable"))
	case "inference.bls.ThresholdSigningRequest.encoded_data":
		panic(fmt.Errorf("field encoded_data of message inference.bls.ThresholdSigningRequest is not mutable"))
	case "inference.bls.ThresholdSigningRequest.message_hash":
		panic(fmt.Errorf("field message_hash of message inference.bls.ThresholdSigningRequest is not mutable"))
	case "inference.bls.ThresholdSigningRequest.status":
		panic(fmt.Errorf("field status of message inference.bls.ThresholdSigningRequest is not mutable"))
	case "inference.bls.ThresholdSigningRequest.final_signature":
		panic(fmt.Errorf("field final_signature of message inference.bls.ThresholdSigningRequest is not mutable"))
	case "inference.bls.ThresholdSigningRequest.created_block_height":
		panic(fmt.Errorf("field created_block_height of message inference.bls.ThresholdSigningRequest is not mutable"))
	case "inference.bls.ThresholdSigningRequest.deadline_block_height":
		panic(fmt.Errorf("field deadline_block_height of message inference.bls.ThresholdSigningRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.ThresholdSigningRequest"))
		}
		panic(fmt.Errorf("message inference.bls.ThresholdSigningRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ThresholdSigningRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "inference.bls.ThresholdSigningRequest.request_id":
		return protoreflect.ValueOfBytes(nil)
	case "inference.bls.ThresholdSigningRequest.current_epoch_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "inference.bls.ThresholdSigningRequest.chain_id":
		return protoreflect.ValueOfBytes(nil)
	case "inference.bls.ThresholdSigningRequest.data":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_ThresholdSigningRequest_4_list{list: &list})
	case "inference.bls.ThresholdSigningRequest.encoded_data":
		return protoreflect.ValueOfBytes(nil)
	case "inference.bls.ThresholdSigningRequest.message_hash":
		return protoreflect.ValueOfBytes(nil)
	case "inference.bls.ThresholdSigningRequest.status":
		return protoreflect.ValueOfEnum(0)
	case "inference.bls.ThresholdSigningRequest.partial_signatures":
		list := []*PartialSignature{}
		return protoreflect.ValueOfList(&_ThresholdSigningRequest_8_list{list: &list})
	case "inference.bls.ThresholdSigningRequest.final_signature":
		return protoreflect.ValueOfBytes(nil)
	case "inference.bls.ThresholdSigningRequest.created_block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "inference.bls.ThresholdSigningRequest.deadline_block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: inference.bls.ThresholdSigningRequest"))
		}
		panic(fmt.Errorf("message inference.bls.ThresholdSigningRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ThresholdSigningRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in inference.bls.ThresholdSigningRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ThresholdSigningRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ThresholdSigningRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ThresholdSigningRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ThresholdSigningRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ThresholdSigningRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RequestId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CurrentEpochIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentEpochIndex))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Data) > 0 {
			for _, b := range x.Data {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.EncodedData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MessageHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if len(x.PartialSignatures) > 0 {
			for _, e := range x.PartialSignatures {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.FinalSignature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CreatedBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.CreatedBlockHeight))
		}
		if x.DeadlineBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.DeadlineBlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ThresholdSigningRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.DeadlineBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DeadlineBlockHeight))
			i--
			dAtA[i] = 0x58
		}
		if x.CreatedBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CreatedBlockHeight))
			i--
			dAtA[i] = 0x50
		}
		if len(x.FinalSignature) > 0 {
			i -= len(x.FinalSignature)
			copy(dAtA[i:], x.FinalSignature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FinalSignature)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.PartialSignatures) > 0 {
			for iNdEx := len(x.PartialSignatures) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PartialSignatures[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x38
		}
		if len(x.MessageHash) > 0 {
			i -= len(x.MessageHash)
			copy(dAtA[i:], x.MessageHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MessageHash)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.EncodedData) > 0 {
			i -= len(x.EncodedData)
			copy(dAtA[i:], x.EncodedData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncodedData)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Data) > 0 {
			for iNdEx := len(x.Data) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Data[iNdEx])
				copy(dAtA[i:], x.Data[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Data[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x1a
		}
		if x.CurrentEpochIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentEpochIndex))
			i--
			dAtA[i] = 0x10
		}
		if len(x.RequestId) > 0 {
			i -= len(x.RequestId)
			copy(dAtA[i:], x.RequestId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RequestId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ThresholdSigningRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ThresholdSigningRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ThresholdSigningRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RequestId = append(x.RequestId[:0], dAtA[iNdEx:postIndex]...)
				if x.RequestId == nil {
					x.RequestId = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentEpochIndex", wireType)
				}
				x.CurrentEpochIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentEpochIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = append(x.ChainId[:0], dAtA[iNdEx:postIndex]...)
				if x.ChainId == nil {
					x.ChainId = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Data = append(x.Data, make([]byte, postIndex-iNdEx))
				copy(x.Data[len(x.Data)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncodedData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncodedData = append(x.EncodedData[:0], dAtA[iNdEx:postIndex]...)
				if x.EncodedData == nil {
					x.EncodedData = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MessageHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MessageHash = append(x.MessageHash[:0], dAtA[iNdEx:postIndex]...)
				if x.MessageHash == nil {
					x.MessageHash = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= ThresholdSigningStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PartialSignatures", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PartialSignatures = append(x.PartialSignatures, &PartialSignature{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PartialSignatures[len(x.PartialSignatures)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinalSignature", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FinalSignature = append(x.FinalSignature[:0], dAtA[iNdEx:postIndex]...)
				if x.FinalSignature == nil {
					x.FinalSignature = []byte{}
				}
				iNdEx = postIndex
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatedBlockHeight", wireType)
				}
				x.CreatedBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CreatedBlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DeadlineBlockHeight", wireType)
				}
				x.DeadlineBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DeadlineBlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: inference/bls/threshold_signing.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ThresholdSigningStatus defines the different states of a threshold signing request
type ThresholdSigningStatus int32

const (
	// UNDEFINED represents an uninitialized or unknown status
	ThresholdSigningStatus_THRESHOLD_SIGNING_STATUS_UNDEFINED ThresholdSigningStatus = 0
	// PENDING_SIGNING represents the initial state when a signing request is created
	ThresholdSigningStatus_THRESHOLD_SIGNING_STATUS_PENDING_SIGNING ThresholdSigningStatus = 1
	// COLLECTING_SIGNATURES represents the state when collecting partial signatures from participants
	ThresholdSigningStatus_THRESHOLD_SIGNING_STATUS_COLLECTING_SIGNATURES ThresholdSigningStatus = 2
	// COMPLETED represents the state when the threshold signature has been successfully created
	ThresholdSigningStatus_THRESHOLD_SIGNING_STATUS_COMPLETED ThresholdSigningStatus = 3
	// FAILED represents the state when the threshold signing process has failed
	ThresholdSigningStatus_THRESHOLD_SIGNING_STATUS_FAILED ThresholdSigningStatus = 4
	// EXPIRED represents the state when the deadline has passed without sufficient signatures
	ThresholdSigningStatus_THRESHOLD_SIGNING_STATUS_EXPIRED ThresholdSigningStatus = 5
)

// Enum value maps for ThresholdSigningStatus.
var (
	ThresholdSigningStatus_name = map[int32]string{
		0: "THRESHOLD_SIGNING_STATUS_UNDEFINED",
		1: "THRESHOLD_SIGNING_STATUS_PENDING_SIGNING",
		2: "THRESHOLD_SIGNING_STATUS_COLLECTING_SIGNATURES",
		3: "THRESHOLD_SIGNING_STATUS_COMPLETED",
		4: "THRESHOLD_SIGNING_STATUS_FAILED",
		5: "THRESHOLD_SIGNING_STATUS_EXPIRED",
	}
	ThresholdSigningStatus_value = map[string]int32{
		"THRESHOLD_SIGNING_STATUS_UNDEFINED":             0,
		"THRESHOLD_SIGNING_STATUS_PENDING_SIGNING":       1,
		"THRESHOLD_SIGNING_STATUS_COLLECTING_SIGNATURES": 2,
		"THRESHOLD_SIGNING_STATUS_COMPLETED":             3,
		"THRESHOLD_SIGNING_STATUS_FAILED":                4,
		"THRESHOLD_SIGNING_STATUS_EXPIRED":               5,
	}
)

func (x ThresholdSigningStatus) Enum() *ThresholdSigningStatus {
	p := new(ThresholdSigningStatus)
	*p = x
	return p
}

func (x ThresholdSigningStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThresholdSigningStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_inference_bls_threshold_signing_proto_enumTypes[0].Descriptor()
}

func (ThresholdSigningStatus) Type() protoreflect.EnumType {
	return &file_inference_bls_threshold_signing_proto_enumTypes[0]
}

func (x ThresholdSigningStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThresholdSigningStatus.Descriptor instead.
func (ThresholdSigningStatus) EnumDescriptor() ([]byte, []int) {
	return file_inference_bls_threshold_signing_proto_rawDescGZIP(), []int{0}
}

// SigningData represents the data structure for requesting a threshold signature
// Used as input to the RequestThresholdSignature keeper method
type SigningData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// current_epoch_index is the epoch to use for signing (must have completed DKG)
	CurrentEpochIndex uint64 `protobuf:"varint,1,opt,name=current_epoch_index,json=currentEpochIndex,proto3" json:"current_epoch_index,omitempty"`
	// chain_id is the 32-byte chain identifier for cross-chain security
	ChainId []byte `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// request_id is the unique 32-byte identifier provided by the calling module (e.g., tx_hash)
	RequestId []byte `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// data is the array of 32-byte data chunks to be signed (Ethereum-compatible format)
	Data [][]byte `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SigningData) Reset() {
	*x = SigningData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inference_bls_threshold_signing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningData) ProtoMessage() {}

// Deprecated: Use SigningData.ProtoReflect.Descriptor instead.
func (*SigningData) Descriptor() ([]byte, []int) {
	return file_inference_bls_threshold_signing_proto_rawDescGZIP(), []int{0}
}

func (x *SigningData) GetCurrentEpochIndex() uint64 {
	if x != nil {
		return x.CurrentEpochIndex
	}
	return 0
}

func (x *SigningData) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *SigningData) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *SigningData) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ThresholdSigningRequest represents a complete threshold signing request stored on-chain
type ThresholdSigningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// request_id is the unique 32-byte identifier for this signing request
	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// current_epoch_index is the epoch being used for signing
	CurrentEpochIndex uint64 `protobuf:"varint,2,opt,name=current_epoch_index,json=currentEpochIndex,proto3" json:"current_epoch_index,omitempty"`
	// chain_id is the 32-byte chain identifier for cross-chain security
	ChainId []byte `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// data is the original array of 32-byte data chunks to be signed
	Data [][]byte `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	// encoded_data is the Ethereum-compatible abi.encodePacked result
	EncodedData []byte `protobuf:"bytes,5,opt,name=encoded_data,json=encodedData,proto3" json:"encoded_data,omitempty"`
	// message_hash is the keccak256 hash of the encoded_data (32 bytes)
	MessageHash []byte `protobuf:"bytes,6,opt,name=message_hash,json=messageHash,proto3" json:"message_hash,omitempty"`
	// status is the current state of the signing request
	Status ThresholdSigningStatus `protobuf:"varint,7,opt,name=status,proto3,enum=inference.bls.ThresholdSigningStatus" json:"status,omitempty"`
	// partial_signatures contains all partial signatures submitted by participants
	PartialSignatures []*PartialSignature `protobuf:"bytes,8,rep,name=partial_signatures,json=partialSignatures,proto3" json:"partial_signatures,omitempty"`
	// final_signature is the aggregated BLS signature (G1 point, 48-byte compressed format)
	// Only set when status is COMPLETED
	FinalSignature []byte `protobuf:"bytes,9,opt,name=final_signature,json=finalSignature,proto3" json:"final_signature,omitempty"`
	// created_block_height is the block height when this request was created
	CreatedBlockHeight int64 `protobuf:"varint,10,opt,name=created_block_height,json=createdBlockHeight,proto3" json:"created_block_height,omitempty"`
	// deadline_block_height is the block height after which this request expires
	DeadlineBlockHeight int64 `protobuf:"varint,11,opt,name=deadline_block_height,json=deadlineBlockHeight,proto3" json:"deadline_block_height,omitempty"`
}

func (x *ThresholdSigningRequest) Reset() {
	*x = ThresholdSigningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inference_bls_threshold_signing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThresholdSigningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThresholdSigningRequest) ProtoMessage() {}

// Deprecated: Use ThresholdSigningRequest.ProtoReflect.Descriptor instead.
func (*ThresholdSigningRequest) Descriptor() ([]byte, []int) {
	return file_inference_bls_threshold_signing_proto_rawDescGZIP(), []int{1}
}

func (x *ThresholdSigningRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *ThresholdSigningRequest) GetCurrentEpochIndex() uint64 {
	if x != nil {
		return x.CurrentEpochIndex
	}
	return 0
}

func (x *ThresholdSigningRequest) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *ThresholdSigningRequest) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ThresholdSigningRequest) GetEncodedData() []byte {
	if x != nil {
		return x.EncodedData
	}
	return nil
}

func (x *ThresholdSigningRequest) GetMessageHash() []byte {
	if x != nil {
		return x.MessageHash
	}
	return nil
}

func (x *ThresholdSigningRequest) GetStatus() ThresholdSigningStatus {
	if x != nil {
		return x.Status
	}
	return ThresholdSigningStatus_THRESHOLD_SIGNING_STATUS_UNDEFINED
}

func (x *ThresholdSigningRequest) GetPartialSignatures() []*PartialSignature {
	if x != nil {
		return x.PartialSignatures
	}
	return nil
}

func (x *ThresholdSigningRequest) GetFinalSignature() []byte {
	if x != nil {
		return x.FinalSignature
	}
	return nil
}

func (x *ThresholdSigningRequest) GetCreatedBlockHeight() int64 {
	if x != nil {
		return x.CreatedBlockHeight
	}
	return 0
}

func (x *ThresholdSigningRequest) GetDeadlineBlockHeight() int64 {
	if x != nil {
		return x.DeadlineBlockHeight
	}
	return 0
}

var File_inference_bls_threshold_signing_proto protoreflect.FileDescriptor

var file_inference_bls_threshold_signing_proto_rawDesc = []byte{
	0x0a, 0x25, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x62, 0x6c, 0x73, 0x2f,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x62, 0x6c, 0x73, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d,
	0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x62, 0x6c, 0x73, 0x2f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x0b,
	0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x04, 0x0a, 0x17, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x62, 0x6c, 0x73, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x54, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x62, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x11, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2a, 0x95, 0x02,
	0x0a, 0x16, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x22, 0x54, 0x48, 0x52, 0x45,
	0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x2c, 0x0a, 0x28, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x32,
	0x0a, 0x2e, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45,
	0x43, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x53,
	0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x48,
	0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x24, 0x0a, 0x20, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49,
	0x52, 0x45, 0x44, 0x10, 0x05, 0x42, 0x9f, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x62, 0x6c, 0x73, 0x42, 0x15, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2f, 0x62, 0x6c, 0x73, 0xa2, 0x02, 0x03, 0x49, 0x42, 0x58, 0xaa, 0x02, 0x0d, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x6c, 0x73, 0xca, 0x02, 0x0d, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5c, 0x42, 0x6c, 0x73, 0xe2, 0x02, 0x19, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5c, 0x42, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x3a, 0x3a, 0x42, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inference_bls_threshold_signing_proto_rawDescOnce sync.Once
	file_inference_bls_threshold_signing_proto_rawDescData = file_inference_bls_threshold_signing_proto_rawDesc
)

func file_inference_bls_threshold_signing_proto_rawDescGZIP() []byte {
	file_inference_bls_threshold_signing_proto_rawDescOnce.Do(func() {
		file_inference_bls_threshold_signing_proto_rawDescData = protoimpl.X.CompressGZIP(file_inference_bls_threshold_signing_proto_rawDescData)
	})
	return file_inference_bls_threshold_signing_proto_rawDescData
}

var file_inference_bls_threshold_signing_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_inference_bls_threshold_signing_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_inference_bls_threshold_signing_proto_goTypes = []interface{}{
	(ThresholdSigningStatus)(0),     // 0: inference.bls.ThresholdSigningStatus
	(*SigningData)(nil),             // 1: inference.bls.SigningData
	(*ThresholdSigningRequest)(nil), // 2: inference.bls.ThresholdSigningRequest
	(*PartialSignature)(nil),        // 3: inference.bls.PartialSignature
}
var file_inference_bls_threshold_signing_proto_depIdxs = []int32{
	0, // 0: inference.bls.ThresholdSigningRequest.status:type_name -> inference.bls.ThresholdSigningStatus
	3, // 1: inference.bls.ThresholdSigningRequest.partial_signatures:type_name -> inference.bls.PartialSignature
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_inference_bls_threshold_signing_proto_init() }
func file_inference_bls_threshold_signing_proto_init() {
	if File_inference_bls_threshold_signing_proto != nil {
		return
	}
	file_inference_bls_params_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_inference_bls_threshold_signing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inference_bls_threshold_signing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThresholdSigningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inference_bls_threshold_signing_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_inference_bls_threshold_signing_proto_goTypes,
		DependencyIndexes: file_inference_bls_threshold_signing_proto_depIdxs,
		EnumInfos:         file_inference_bls_threshold_signing_proto_enumTypes,
		MessageInfos:      file_inference_bls_threshold_signing_proto_msgTypes,
	}.Build()
	File_inference_bls_threshold_signing_proto = out.File
	file_inference_bls_threshold_signing_proto_rawDesc = nil
	file_inference_bls_threshold_signing_proto_goTypes = nil
	file_inference_bls_threshold_signing_proto_depIdxs = nil
}
