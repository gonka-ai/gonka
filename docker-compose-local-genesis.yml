services:
  chain-node:
    container_name: ${KEY_NAME}-node
    command: ["sh", "./init-docker-genesis.sh"]
    image: gcr.io/decentralized-ai/inferenced
    volumes:
      - ./prod-local/${KEY_NAME}:/root/.inference
    environment:
      - KEY_NAME=${KEY_NAME}
    networks:
      - chain-public
    ports:
      - "26656:26656" #p2p
      - "26657:26657" #rpc

  api:
    container_name: ${KEY_NAME}-api
    image: gcr.io/decentralized-ai/api
    volumes:
        - ./prod-local/${KEY_NAME}:/root/.inference
        - ./${NODE_CONFIG}:/root/node_config.json
    ports:
      - "${PORT}:8080"
    environment:
      - KEY_NAME=${KEY_NAME}
      - NODE_HOST=${KEY_NAME}-node
      - DAPI_API__POC_CALLBACK_URL=${DAPI_API__POC_CALLBACK_URL}
      - DAPI_API__PUBLIC_URL=${DAPI_API__PUBLIC_URL}
      - DAPI_API__CHAIN_NODE__IS_GENESIS=true
      - NODE_CONFIG_PATH=/root/node_config.json
    networks:
      - chain-public

  wiremock:
    container_name: ${KEY_NAME}-wiremock
    image: "wiremock/wiremock:latest"
    ports:
      - "8090:8080"
    entrypoint: [ "/docker-entrypoint.sh", "--global-response-templating", "--disable-gzip", "--verbose" ]
    networks:
      - chain-public
  binary-server:
    image: httpd:latest
    container_name: binary-server
    ports:
      - '8781:80'
    volumes:
      - ./public-html:/usr/local/apache2/htdocs/
    networks:
      - chain-public

networks:
  chain-public:
    name: chain-public
