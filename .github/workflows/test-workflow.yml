name: Reusable Test Workflow

on:
  workflow_call:
    inputs:
      test_name:
        required: true
        type: string
        description: 'Name of the test suite (e.g., "Integration Tests" or "Sanity Tests")'
      test_command:
        required: true
        type: string
        description: 'Make command to run the tests (e.g., "run-tests" or "run-sanity")'
      pr_number:
        required: false
        type: string
        description: 'PR number when triggered by comment'
      is_pr_comment:
        required: false
        type: boolean
        default: false
        description: 'Whether this workflow was triggered by a PR comment'
      enable_upgrades:
        required: false
        type: boolean
        default: false
        description: 'Whether to run upgrade builds'
      use_matrix:
        required: false
        type: boolean
        default: true
        description: 'Whether to use matrix strategy for parallel execution'

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.is_pr_comment && format('refs/pull/{0}/head', inputs.pr_number) || github.ref }}

      - name: Set up Docker (Latest Version)
        uses: docker/setup-docker-action@v4
        with:
          version: 'latest'

      - name: Verify Docker Installation
        run: |
          docker --version
          docker compose version
          
      - name: Install Make
        run: |
          sudo apt-get update
          sudo apt-get install -y make
          
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'
          
      - name: Make Docker Images
        env:
          GENESIS_OVERRIDES_FILE: "inference-chain/test_genesis_overrides.json"
        run: sudo make build-docker

      - name: Save Docker Images
        run: |
          mkdir -p docker-images
          docker save -o docker-images/inference-chain.tar ghcr.io/product-science/inferenced:latest
          docker save -o docker-images/decentralized-api.tar ghcr.io/product-science/api:latest
          docker save -o docker-images/inference-mock-server.tar inference-mock-server
          # Compress images to save storage space
          gzip docker-images/*.tar
          echo "=== Created files ==="
          ls -la docker-images/

      - name: Upload Docker Images
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: docker-images/
          retention-days: 1

  run-tests:
    needs: build-images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_group: 
          - ValidationTests
          - InferenceAccountingTests
          - NodeManagementTests
          - TokenomicsTests
          - TrainingTests
          - GovernanceTests
          - ParticipantTests
          - StreamingInferenceTests
          - MultiModelTests
          - UnitOfComputeTests
          - NodeAdminStateTests
          - LargePayloadPocTest
          - UpgradeTests
          - KubernetesTests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.is_pr_comment && format('refs/pull/{0}/head', inputs.pr_number) || github.ref }}

      - name: Set up Docker (Latest Version)
        uses: docker/setup-docker-action@v4
        with:
          version: 'latest'

      - name: Download Docker Images
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: docker-images/

      - name: Load Docker Images
        run: |
          # Decompress first
          gunzip docker-images/*.tar.gz || true
          # Load images with :latest tags
          docker load -i docker-images/inference-chain.tar || true
          docker load -i docker-images/decentralized-api.tar || true
          docker load -i docker-images/inference-mock-server.tar || true
          # Tag images with names expected by tests (without :latest)
          docker tag ghcr.io/product-science/inferenced:latest ghcr.io/product-science/inferenced || true
          docker tag ghcr.io/product-science/api:latest ghcr.io/product-science/api || true
          # Mock server already has no :latest tag, so no additional tagging needed

      - name: Install Make
        run: |
          sudo apt-get update
          sudo apt-get install -y make
          
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'

      - name: Make Upgrade Build
        if: ${{ inputs.enable_upgrades }}
        run: sudo make build-for-upgrade-tests

      - name: Start test chain
        working-directory: local-test-net
        run: sudo ./launch.sh

      - name: Run Tests (Matrix - Integration)
        if: ${{ inputs.use_matrix && inputs.test_command == 'run-tests' }}
        run: |
          echo "Running test group: ${{ matrix.test_group }}"
          sudo make run-tests TESTS="${{ matrix.test_group }}"

      - name: Run Tests (Matrix - Sanity)
        if: ${{ inputs.use_matrix && inputs.test_command == 'run-sanity' }}
        run: |
          echo "Running sanity test group: ${{ matrix.test_group }}"
          sudo make run-sanity TESTS="${{ matrix.test_group }}"

      - name: Run Tests (Non-Matrix)
        if: ${{ !inputs.use_matrix }}
        run: sudo make ${{ inputs.test_command }}

      - name: Archive Test Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.test_group }}
          path: ./testermint/logs
          retention-days: 7  # Keep test logs for 1 week only

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: ${{ inputs.test_name }} (${{ matrix.test_group }})
          path: ./testermint/build/test-results/**/*.xml
          reporter: java-junit
